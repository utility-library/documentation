{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome Welcome to the Utility Library documentation, here you can found everything about the utility About The utility library was created to facilitate and speed up the writing and debugging process for ESX based FiveM servers. Contains the most redundant and verbose processes to make them easier, such as ESX initialization which turns into StartESX() . I started writing this library for personal use, and then once i understood the great usefulness and optimization of resources i decided to make it public to facilitate the work of those new to this world and those who are already there, with the hope of being able to collect suggestions, integrate new features and make it one of the reference libraries. Discord Credits Utility library was created by XenoS.exe#2859 Thanks also to MarKz#3003 for giving me the chance to test and develop the library on her RP server To do Improving object and iObject Adding society implementation for server-side Cloning money and database thing for server-side","title":"Home"},{"location":"#welcome","text":"Welcome to the Utility Library documentation, here you can found everything about the utility","title":"Welcome"},{"location":"#about","text":"The utility library was created to facilitate and speed up the writing and debugging process for ESX based FiveM servers. Contains the most redundant and verbose processes to make them easier, such as ESX initialization which turns into StartESX() . I started writing this library for personal use, and then once i understood the great usefulness and optimization of resources i decided to make it public to facilitate the work of those new to this world and those who are already there, with the hope of being able to collect suggestions, integrate new features and make it one of the reference libraries.","title":"About"},{"location":"#discord","text":"","title":"Discord"},{"location":"#credits","text":"Utility library was created by XenoS.exe#2859 Thanks also to MarKz#3003 for giving me the chance to test and develop the library on her RP server To do Improving object and iObject Adding society implementation for server-side Cloning money and database thing for server-side","title":"Credits"},{"location":"dev/","text":"Welcome Welcome to the Utility Library documentation, here you can found everything about the utility Method Description GET Fetch resource PUT Update resource DELETE Delete resource Submit Note Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Abstract Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Info Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Tip Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Success Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Question Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Warning Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Failure Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Danger Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Bug Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Example Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Quote Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Project layout mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Welcome"},{"location":"dev/#welcome","text":"Welcome to the Utility Library documentation, here you can found everything about the utility Method Description GET Fetch resource PUT Update resource DELETE Delete resource Submit Note Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Abstract Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Info Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Tip Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Success Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Question Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Warning Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Failure Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Danger Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Bug Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Example Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Quote Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.","title":"Welcome"},{"location":"dev/#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"client/advance_script_creation/DropObjectFromHand/","text":"DropObjectFromHand (Client side) Drop the object that was taken via the TakeObjectOnHand Argument Data Type Nedeed Default Description Entity entity - The entity Delete boolean false Delete or no the entity when dropped Dont need to be called every frame Example DropObjectFromHand(entity, false)","title":"DropObjectFromHand"},{"location":"client/advance_script_creation/DropObjectFromHand/#dropobjectfromhand-client-side","text":"Drop the object that was taken via the TakeObjectOnHand Argument Data Type Nedeed Default Description Entity entity - The entity Delete boolean false Delete or no the entity when dropped Dont need to be called every frame Example DropObjectFromHand(entity, false)","title":"DropObjectFromHand (Client side)"},{"location":"client/advance_script_creation/GetDataFromDb/","text":"GetDataFromDb Allows you to get data from the utility_db_integration table Argument Data Type Nedeed Default Description Options string - The options, see below for more info, the logic its pretty equal to the MySQL query Warning For server safety, the trigger below the function can be disabled in the utility config if you want to use this native you need to execute the SQL Dont need to be called every frame Example With the where * = select all Get some data from the db using some where parameter ( single ) GetDataFromDb(\"SELECT * WHERE id = 1\") Get some data from the db using some where parameter ( multi ) GetDataFromDb(\"SELECT data2 WHERE id, data = 1, example\") Without the where * = select all Get some data from the db ( single ) GetDataFromDb(\"SELECT *\") Get some data from the db ( multi ) GetDataFromDb(\"SELECT data, data2\") Warning If you want to use multi table you need to create the table by yourself","title":"GetDataFromDb"},{"location":"client/advance_script_creation/GetDataFromDb/#getdatafromdb","text":"Allows you to get data from the utility_db_integration table Argument Data Type Nedeed Default Description Options string - The options, see below for more info, the logic its pretty equal to the MySQL query Warning For server safety, the trigger below the function can be disabled in the utility config if you want to use this native you need to execute the SQL Dont need to be called every frame Example With the where * = select all Get some data from the db using some where parameter ( single ) GetDataFromDb(\"SELECT * WHERE id = 1\") Get some data from the db using some where parameter ( multi ) GetDataFromDb(\"SELECT data2 WHERE id, data = 1, example\") Without the where * = select all Get some data from the db ( single ) GetDataFromDb(\"SELECT *\") Get some data from the db ( multi ) GetDataFromDb(\"SELECT data, data2\") Warning If you want to use multi table you need to create the table by yourself","title":"GetDataFromDb"},{"location":"client/advance_script_creation/GetOnHandObject/","text":"GetOnHandObject (Client side) Return the current on hand object, return 0 if no object Returns Data Type Description number The object handle or 0 Dont need to be called every frame Example GetOnHandObject()","title":"GetOnHandObject"},{"location":"client/advance_script_creation/GetOnHandObject/#getonhandobject-client-side","text":"Return the current on hand object, return 0 if no object Returns Data Type Description number The object handle or 0 Dont need to be called every frame Example GetOnHandObject()","title":"GetOnHandObject (Client side)"},{"location":"client/advance_script_creation/SaveDataToDb/","text":"SaveDataToDb Allows you to save data in the utility_db_integration table Argument Data Type Nedeed Default Description Options string - The options, see below for more info Warning For server safety, the trigger below the function can be disabled in the utility config if you want to use this native you need to execute the SQL Dont need to be called every frame Example Saving some data to the db ( single ) SaveDataToDb(\"INSERT data = example\") Saving some data to the db ( multi ) SaveDataToDb(\"INSERT data, data2 = example, example2\") Warning If you want to use multi table you need to create the table by yourself","title":"SaveDataToDb"},{"location":"client/advance_script_creation/SaveDataToDb/#savedatatodb","text":"Allows you to save data in the utility_db_integration table Argument Data Type Nedeed Default Description Options string - The options, see below for more info Warning For server safety, the trigger below the function can be disabled in the utility config if you want to use this native you need to execute the SQL Dont need to be called every frame Example Saving some data to the db ( single ) SaveDataToDb(\"INSERT data = example\") Saving some data to the db ( multi ) SaveDataToDb(\"INSERT data, data2 = example, example2\") Warning If you want to use multi table you need to create the table by yourself","title":"SaveDataToDb"},{"location":"client/advance_script_creation/TakeObjectOnHand/","text":"TakeObjectOnHand (Client side) Take the object defined as an argument Argument Data Type Nedeed Default Description Ped ped - The ped that take the object Entity entity/string/hash - The entity to take, you can pass the object handle or the model name/hash zOffset number 0.2 The z offset xPos number 0.2 The x position for the attachment yPos number 0.08 The y position for the attachment zPos number 0.2 The z position for the attachment xRot number -45.0 The x rotation for the attachment yRot number 290.0 The y rotation for the attachment zRot number 0.0 The z rotation for the attachment Dont need to be called every frame Example With the model name TakeObjectOnHand(PlayerPedId(), \"prop_roadcone02a\") With the entity handle TakeObjectOnHand(PlayerPedId(), obj)","title":"TakeObjectOnHand"},{"location":"client/advance_script_creation/TakeObjectOnHand/#takeobjectonhand-client-side","text":"Take the object defined as an argument Argument Data Type Nedeed Default Description Ped ped - The ped that take the object Entity entity/string/hash - The entity to take, you can pass the object handle or the model name/hash zOffset number 0.2 The z offset xPos number 0.2 The x position for the attachment yPos number 0.08 The y position for the attachment zPos number 0.2 The z position for the attachment xRot number -45.0 The x rotation for the attachment yRot number 290.0 The y rotation for the attachment zRot number 0.0 The z rotation for the attachment Dont need to be called every frame Example With the model name TakeObjectOnHand(PlayerPedId(), \"prop_roadcone02a\") With the entity handle TakeObjectOnHand(PlayerPedId(), obj)","title":"TakeObjectOnHand (Client side)"},{"location":"client/advance_script_creation/UpdateDataToDb/","text":"UpdateDataToDb Allows you to update data that already exist in the utility_db_integration table Argument Data Type Nedeed Default Description Options string - The options, see below for more info, the logic its pretty equal to the MySQL query Warning For server safety, the trigger below the function can be disabled in the utility config if you want to use this native you need to execute the SQL Dont need to be called every frame Example With the where Update some data that already exist in the db using some where parameter ( single ) UpdateDataToDb(\"UPDATE data = example WHERE id = 1\") Update some data that already exist in the db using some where parameter ( multi ) UpdateDataToDb(\"UPDATE data, data2 = example, example2 WHERE id = 1\") Without the where Update some data that already exist in the db ( single ) SaveDataToDb(\"UPDATE data = example\") Update some data that already exist in the db ( multi ) SaveDataToDb(\"UPDATE data, data2 = example, example2\") Warning If you want to use multi table you need to create the table by yourself","title":"UpdateDataToDb"},{"location":"client/advance_script_creation/UpdateDataToDb/#updatedatatodb","text":"Allows you to update data that already exist in the utility_db_integration table Argument Data Type Nedeed Default Description Options string - The options, see below for more info, the logic its pretty equal to the MySQL query Warning For server safety, the trigger below the function can be disabled in the utility config if you want to use this native you need to execute the SQL Dont need to be called every frame Example With the where Update some data that already exist in the db using some where parameter ( single ) UpdateDataToDb(\"UPDATE data = example WHERE id = 1\") Update some data that already exist in the db using some where parameter ( multi ) UpdateDataToDb(\"UPDATE data, data2 = example, example2 WHERE id = 1\") Without the where Update some data that already exist in the db ( single ) SaveDataToDb(\"UPDATE data = example\") Update some data that already exist in the db ( multi ) SaveDataToDb(\"UPDATE data, data2 = example, example2\") Warning If you want to use multi table you need to create the table by yourself","title":"UpdateDataToDb"},{"location":"client/camera/CreateCamera/","text":"CreateCamera Argument Data Type Nedeed Default Description Coords vector3 - The coords to create the camera Rotation vector3 - The rotation to create the camera Active boolean - If true switch on that cam Shake table - Shake or no Returns Data Type Description cam The camera handle Dont need to be called every frame Example local cam = CreateCamera(vector3(0.0, 0.0, 0.0), vector3(0.0, 0.0, 0.0), false, {type = \"ROAD_VIBRATION_SHAKE\", amount = 1.0})","title":"CreateCamera"},{"location":"client/camera/CreateCamera/#createcamera","text":"Argument Data Type Nedeed Default Description Coords vector3 - The coords to create the camera Rotation vector3 - The rotation to create the camera Active boolean - If true switch on that cam Shake table - Shake or no Returns Data Type Description cam The camera handle Dont need to be called every frame Example local cam = CreateCamera(vector3(0.0, 0.0, 0.0), vector3(0.0, 0.0, 0.0), false, {type = \"ROAD_VIBRATION_SHAKE\", amount = 1.0})","title":"CreateCamera"},{"location":"client/camera/SwitchBetweenCam/","text":"SwitchBetweenCam Argument Data Type Nedeed Default Description Old Cam cam - The old cam New Cam cam - The new cam Dont need to be called every frame Example SwitchBetweenCam(old_cam, cam)","title":"SwitchBetweenCam"},{"location":"client/camera/SwitchBetweenCam/#switchbetweencam","text":"Argument Data Type Nedeed Default Description Old Cam cam - The old cam New Cam cam - The new cam Dont need to be called every frame Example SwitchBetweenCam(old_cam, cam)","title":"SwitchBetweenCam"},{"location":"client/emitter/Info/","text":"Information What is an event emitter? An event emitter is function that listens a event and than fires a callback with a value.","title":"Info"},{"location":"client/emitter/Info/#information","text":"","title":"Information"},{"location":"client/emitter/Info/#what-is-an-event-emitter","text":"An event emitter is function that listens a event and than fires a callback with a value.","title":"What is an event emitter?"},{"location":"client/emitter/On/","text":"On Is the listener of the emitter Argument Data Type Nedeed Default Description Type string - The type of the emitter Callback function - The function that will be executed when the event has been triggered Fake Triggerable boolean false If that is true you can use the trigger Utility:FakeTrigger to trigger the emitter Dont need to be called every frame Example On(\"marker\", function(id) if id == \"potato\" then print(\"I love potato\") elseif id == \"carrot\" then print(\"I hate carrot) end end) Example of the fake trigger -- Type Id TriggerEvent(\"Utility:FakeTrigger\", \"marker\", \"potato\")","title":"On"},{"location":"client/emitter/On/#on","text":"Is the listener of the emitter Argument Data Type Nedeed Default Description Type string - The type of the emitter Callback function - The function that will be executed when the event has been triggered Fake Triggerable boolean false If that is true you can use the trigger Utility:FakeTrigger to trigger the emitter Dont need to be called every frame Example On(\"marker\", function(id) if id == \"potato\" then print(\"I love potato\") elseif id == \"carrot\" then print(\"I hate carrot) end end) Example of the fake trigger -- Type Id TriggerEvent(\"Utility:FakeTrigger\", \"marker\", \"potato\")","title":"On"},{"location":"client/esx_integration/AddItem/","text":"AddItem (Client side) Add an item to the player Argument Data Type Nedeed Default Description Item string - The item name Amount number - The amount Warning For server safety, the trigger below the function can be disabled in the utility config Dont need to be called every frame Example AddItem(\"bread\", 1)","title":"AddItem"},{"location":"client/esx_integration/AddItem/#additem-client-side","text":"Add an item to the player Argument Data Type Nedeed Default Description Item string - The item name Amount number - The amount Warning For server safety, the trigger below the function can be disabled in the utility config Dont need to be called every frame Example AddItem(\"bread\", 1)","title":"AddItem (Client side)"},{"location":"client/esx_integration/AddMoney/","text":"AddMoney (Client side) Add money to the player Argument Data Type Nedeed Default Description Type string - The money type: cash, bank, black_money Amount number - The amount of money Warning For server safety, the trigger below the function can be disabled in the utility config Dont need to be called every frame Example AddMoney(\"cash\", 500) AddMoney(\"bank\", 500) AddMoney(\"black_money\", 500)","title":"AddMoney"},{"location":"client/esx_integration/AddMoney/#addmoney-client-side","text":"Add money to the player Argument Data Type Nedeed Default Description Type string - The money type: cash, bank, black_money Amount number - The amount of money Warning For server safety, the trigger below the function can be disabled in the utility config Dont need to be called every frame Example AddMoney(\"cash\", 500) AddMoney(\"bank\", 500) AddMoney(\"black_money\", 500)","title":"AddMoney (Client side)"},{"location":"client/esx_integration/GetDataForJob/","text":"GetDataForJob Return the number of player that have that job and the workers list of that job Argument Data Type Nedeed Default Description Job string - The job name Returns Data Type Description number The number of player with that job table A table with all the id of the players with that job Dont need to be called every frame Example local count, workers = GetDataForJob(\"police\") -- count = 3 -- workers = {3, 5, 19}","title":"GetDataForJob"},{"location":"client/esx_integration/GetDataForJob/#getdataforjob","text":"Return the number of player that have that job and the workers list of that job Argument Data Type Nedeed Default Description Job string - The job name Returns Data Type Description number The number of player with that job table A table with all the id of the players with that job Dont need to be called every frame Example local count, workers = GetDataForJob(\"police\") -- count = 3 -- workers = {3, 5, 19}","title":"GetDataForJob"},{"location":"client/esx_integration/GetItem/","text":"GetItem (Client side) Get data of an item by the player Argument Data Type Nedeed Default Description Item string - The item name Warning For server safety, the trigger below the function can be disabled in the utility config Dont need to be called every frame Returns Child Data Type Description name string Item name count number Item count label string Item label weight number Item weight usable boolean Whether or not the item is usable rare boolean Whether or not the item is rare canRemove boolean Whether or not the item can be thrown Example local itemData = GetItem(\"bread\") How to use child local itemData = GetItem(\"bread\") -- itemData.name = \"bread\" -- itemData.count = 1 -- ...","title":"GetItem"},{"location":"client/esx_integration/GetItem/#getitem-client-side","text":"Get data of an item by the player Argument Data Type Nedeed Default Description Item string - The item name Warning For server safety, the trigger below the function can be disabled in the utility config Dont need to be called every frame Returns Child Data Type Description name string Item name count number Item count label string Item label weight number Item weight usable boolean Whether or not the item is usable rare boolean Whether or not the item is rare canRemove boolean Whether or not the item can be thrown Example local itemData = GetItem(\"bread\") How to use child local itemData = GetItem(\"bread\") -- itemData.name = \"bread\" -- itemData.count = 1 -- ...","title":"GetItem (Client side)"},{"location":"client/esx_integration/RemoveItem/","text":"RemoveItem (Client side) Remove an item from the player Argument Data Type Nedeed Default Description Item string - The item name Amount number - The amount Warning For server safety, the trigger below the function can be disabled in the utility config Dont need to be called every frame Example RemoveItem(\"bread\", 1)","title":"RemoveItem"},{"location":"client/esx_integration/RemoveItem/#removeitem-client-side","text":"Remove an item from the player Argument Data Type Nedeed Default Description Item string - The item name Amount number - The amount Warning For server safety, the trigger below the function can be disabled in the utility config Dont need to be called every frame Example RemoveItem(\"bread\", 1)","title":"RemoveItem (Client side)"},{"location":"client/esx_integration/RemoveMoney/","text":"RemoveMoney (Client side) Remove money from the player Argument Data Type Nedeed Default Description Type string - The money type: cash, bank, black_money Amount number - The amount of money Warning For server safety, the trigger below the function can be disabled in the utility config Dont need to be called every frame Example RemoveMoney(\"cash\", 500) RemoveMoney(\"bank\", 500) RemoveMoney(\"black_money\", 500)","title":"RemoveMoney"},{"location":"client/esx_integration/RemoveMoney/#removemoney-client-side","text":"Remove money from the player Argument Data Type Nedeed Default Description Type string - The money type: cash, bank, black_money Amount number - The amount of money Warning For server safety, the trigger below the function can be disabled in the utility config Dont need to be called every frame Example RemoveMoney(\"cash\", 500) RemoveMoney(\"bank\", 500) RemoveMoney(\"black_money\", 500)","title":"RemoveMoney (Client side)"},{"location":"client/esx_integration/StartESX/","text":"StartESX Start ESX with a line, dont need any return, all will be done automatically. It also automatically loads player data (like the job, that auto update) the ESX and xPlayer variables are made available Argument Data Type Nedeed Default Description esxEventName string esx:getSharedObject The esx event, if you have the replaced trigger Second Job string - If you have set up the second job in the utility configuration, you need to enter the name here for it to auto-update Dont need to be called every frame Example StartESX() Old method ESX = nil local PlayerData = {} Citizen.CreateThread(function() while ESX == nil do TriggerEvent('esx:getSharedObject', function(obj) ESX = obj end) Citizen.Wait(0) end while ESX.GetPlayerData().job == nil do Citizen.Wait(1) end PlayerData = ESX.GetPlayerData() end) RegisterNetEvent('esx:playerLoaded') AddEventHandler('esx:playerLoaded', function(xPlayer) PlayerData = xPlayer end)","title":"StartESX"},{"location":"client/esx_integration/StartESX/#startesx","text":"Start ESX with a line, dont need any return, all will be done automatically. It also automatically loads player data (like the job, that auto update) the ESX and xPlayer variables are made available Argument Data Type Nedeed Default Description esxEventName string esx:getSharedObject The esx event, if you have the replaced trigger Second Job string - If you have set up the second job in the utility configuration, you need to enter the name here for it to auto-update Dont need to be called every frame Example StartESX() Old method ESX = nil local PlayerData = {} Citizen.CreateThread(function() while ESX == nil do TriggerEvent('esx:getSharedObject', function(obj) ESX = obj end) Citizen.Wait(0) end while ESX.GetPlayerData().job == nil do Citizen.Wait(1) end PlayerData = ESX.GetPlayerData() end) RegisterNetEvent('esx:playerLoaded') AddEventHandler('esx:playerLoaded', function(xPlayer) PlayerData = xPlayer end)","title":"StartESX"},{"location":"client/managing_data/GetFrom/","text":"GetFrom Allows you to get the data saved through the SetFor Argument Data Type Nedeed Default Description Id string/number - The id Property string/table - The data name Dont need to be called every frame Example Get a specific data saved for that property GetFrom(\"myid\", \"something\") Return \"Hello\" (string) Get all data saved for that property GetFrom(\"myid\") Return { something = \"Hello\", something2 = 5, something3 = {1, 2, 3} } (table)","title":"GetFrom"},{"location":"client/managing_data/GetFrom/#getfrom","text":"Allows you to get the data saved through the SetFor Argument Data Type Nedeed Default Description Id string/number - The id Property string/table - The data name Dont need to be called every frame Example Get a specific data saved for that property GetFrom(\"myid\", \"something\") Return \"Hello\" (string) Get all data saved for that property GetFrom(\"myid\") Return { something = \"Hello\", something2 = 5, something3 = {1, 2, 3} } (table)","title":"GetFrom"},{"location":"client/managing_data/SetFor/","text":"SetFor Allows you to manipulate a table already created by the utility without having to create it every time Argument Data Type Nedeed Default Description Id string/number - The id Property string/table - The data Value any - The value Synced boolean false Sync or the data for all script that load the utility Dont need to be called every frame Example Here you can set any, i told ANY, value to an marker, an iObject, an number or anything else Set data one by one SetFor(\"myid\", \"something\", \"Hello\") SetFor(\"myid\", \"something2\", 5) SetFor(\"myid\", \"something3\", {1, 2, 3}) Set data with a table SetFor(\"myid\", { something = \"Hello\" something2 = 5 something3 = {1, 2, 3} }) Synced data In the script \"utility_test\" if call the setfor with synced arguments to true SetFor(\"myid\", \"something\", \"Hello\", true) --or SetFor(\"myid\", { something = \"Hello\" }, true) Now i call the GetFrom from the resource \"utility_test2\" and the data will be synced GetFrom(\"myid\", \"something\") Return Hello (string)","title":"SetFor"},{"location":"client/managing_data/SetFor/#setfor","text":"Allows you to manipulate a table already created by the utility without having to create it every time Argument Data Type Nedeed Default Description Id string/number - The id Property string/table - The data Value any - The value Synced boolean false Sync or the data for all script that load the utility Dont need to be called every frame Example Here you can set any, i told ANY, value to an marker, an iObject, an number or anything else Set data one by one SetFor(\"myid\", \"something\", \"Hello\") SetFor(\"myid\", \"something2\", 5) SetFor(\"myid\", \"something3\", {1, 2, 3}) Set data with a table SetFor(\"myid\", { something = \"Hello\" something2 = 5 something3 = {1, 2, 3} }) Synced data In the script \"utility_test\" if call the setfor with synced arguments to true SetFor(\"myid\", \"something\", \"Hello\", true) --or SetFor(\"myid\", { something = \"Hello\" }, true) Now i call the GetFrom from the resource \"utility_test2\" and the data will be synced GetFrom(\"myid\", \"something\") Return Hello (string)","title":"SetFor"},{"location":"client/marker-object-blip/CreateBlip/","text":"CreateBlip Create a blip Argument Data Type Nedeed Default Description Name string/number - The name of the blip Coords vector3 - The coordinates to create the blip Sprite number - The sprite ID Colour number - The colour ID Scale number 1.0 The scale of the blip Dont need to be called every frame Example CreateBlip(\"My Blip\", vector3(0.0, 0.0, 0.0), 11, 2)","title":"CreateBlip"},{"location":"client/marker-object-blip/CreateBlip/#createblip","text":"Create a blip Argument Data Type Nedeed Default Description Name string/number - The name of the blip Coords vector3 - The coordinates to create the blip Sprite number - The sprite ID Colour number - The colour ID Scale number 1.0 The scale of the blip Dont need to be called every frame Example CreateBlip(\"My Blip\", vector3(0.0, 0.0, 0.0), 11, 2)","title":"CreateBlip"},{"location":"client/marker-object-blip/CreateMarker/","text":"CreateMarker Create a marker, can be an 3d text or real actual marker Argument Data Type Nedeed Default Description Id string/number - The id to manage the marker Coords vector3 - The coordinates to create the marker Render Distance number - The distance for the render Interaction Distance number - The distance for the interaction Options table/string - See the config arguments Dont need to be called every frame, if called every frame and the marker already exist, sleep the loop for 100 ms to prevent spam Example Creating marker CreateMarker(\"myid\", vector3(-239.89, -989.42, 28.29), 5.0, 5.0, {255, 0, 0}) Creating 3d text CreateMarker(\"myid\", vector3(-239.89, -989.42, 29.29), 5.0, 5.0, \"Press [~g~E~w~] to interact\") Creating a custom marker using a config local config = { rgb = {0, 0, 255}, type = 29, scale = vector3(2.0, 2.0, 3.0), } CreateMarker(\"myid\", vector3(-239.89, -989.42, 28.29), 5.0, 5.0, config) Config arguments Child Data Type Explanation rgb table The rgb data ( {255, 255, 255} ) type number The marker type direction vector3 The direction of the marker rotation vector3 The rotation of the marker scale vector3 The scale of the marker alpha number The alpha of the marker, from 0 to 255 animation boolean Toggle the bouncing animation How to listen the interaction For listen the interaction you need to use the emitter Example -- This create the red marker CreateMarker(\"myid\", vector3(-239.89, -989.42, 28.29), 5.0, 5.0, {255, 0, 0}) -- Listening the interaction On(\"marker\", function(id) if id == \"myid\" then print(\"Hello\") end end) LSS : If i press E near the marker in the F8 console will be printed Hello Tip You can write {r} to generate a random id Example CreateMarker(\"marker_{r}\", vector3(-239.89, -989.42, 28.29), 5.0, 5.0, {255, 0, 0}) This will be converted to \"marker_51243\", the number is the random id generated To do Adding more customization","title":"CreateMarker"},{"location":"client/marker-object-blip/CreateMarker/#createmarker","text":"Create a marker, can be an 3d text or real actual marker Argument Data Type Nedeed Default Description Id string/number - The id to manage the marker Coords vector3 - The coordinates to create the marker Render Distance number - The distance for the render Interaction Distance number - The distance for the interaction Options table/string - See the config arguments Dont need to be called every frame, if called every frame and the marker already exist, sleep the loop for 100 ms to prevent spam Example Creating marker CreateMarker(\"myid\", vector3(-239.89, -989.42, 28.29), 5.0, 5.0, {255, 0, 0}) Creating 3d text CreateMarker(\"myid\", vector3(-239.89, -989.42, 29.29), 5.0, 5.0, \"Press [~g~E~w~] to interact\") Creating a custom marker using a config local config = { rgb = {0, 0, 255}, type = 29, scale = vector3(2.0, 2.0, 3.0), } CreateMarker(\"myid\", vector3(-239.89, -989.42, 28.29), 5.0, 5.0, config) Config arguments Child Data Type Explanation rgb table The rgb data ( {255, 255, 255} ) type number The marker type direction vector3 The direction of the marker rotation vector3 The rotation of the marker scale vector3 The scale of the marker alpha number The alpha of the marker, from 0 to 255 animation boolean Toggle the bouncing animation How to listen the interaction For listen the interaction you need to use the emitter Example -- This create the red marker CreateMarker(\"myid\", vector3(-239.89, -989.42, 28.29), 5.0, 5.0, {255, 0, 0}) -- Listening the interaction On(\"marker\", function(id) if id == \"myid\" then print(\"Hello\") end end) LSS : If i press E near the marker in the F8 console will be printed Hello Tip You can write {r} to generate a random id Example CreateMarker(\"marker_{r}\", vector3(-239.89, -989.42, 28.29), 5.0, 5.0, {255, 0, 0}) This will be converted to \"marker_51243\", the number is the random id generated To do Adding more customization","title":"CreateMarker"},{"location":"client/marker-object-blip/CreateiObject/","text":"CreateiObject Create a iObject Argument Data Type Nedeed Default Description Id string/number - The id to manage the iObject Model string/number - The mode of the iObject Coords vector3 - The coordinates to create the iObject Heading number - The heading to create the iObject Interaction Distance number - The distance for the interaction Returns Data Type Description iObject The object handle vector3 The object coords Dont need to be called every frame, if called every frame and the iObject already exist, sleep the loop for 100 ms to prevent spam Example Creating iObject local iobj, coords = CreateiObject(\"myid\", \"prop_weed_01\", vector3(-239.89, -989.42, 28.29), 0.0, 5.0) How to listen the interaction For listen the interaction you need to use the emitter Example -- This create the iObject local iobj, coords = CreateiObject(\"myid\", \"prop_weed_01\", vector3(-239.89, -989.42, 28.29), 0.0, 5.0) -- Listening the interaction On(\"object\", function(id) if id == \"myid\" then print(\"Hello\") end end) LSS : If i press E near the iObject in the F8 console will be printed Hello","title":"CreateiObject"},{"location":"client/marker-object-blip/CreateiObject/#createiobject","text":"Create a iObject Argument Data Type Nedeed Default Description Id string/number - The id to manage the iObject Model string/number - The mode of the iObject Coords vector3 - The coordinates to create the iObject Heading number - The heading to create the iObject Interaction Distance number - The distance for the interaction Returns Data Type Description iObject The object handle vector3 The object coords Dont need to be called every frame, if called every frame and the iObject already exist, sleep the loop for 100 ms to prevent spam Example Creating iObject local iobj, coords = CreateiObject(\"myid\", \"prop_weed_01\", vector3(-239.89, -989.42, 28.29), 0.0, 5.0) How to listen the interaction For listen the interaction you need to use the emitter Example -- This create the iObject local iobj, coords = CreateiObject(\"myid\", \"prop_weed_01\", vector3(-239.89, -989.42, 28.29), 0.0, 5.0) -- Listening the interaction On(\"object\", function(id) if id == \"myid\" then print(\"Hello\") end end) LSS : If i press E near the iObject in the F8 console will be printed Hello","title":"CreateiObject"},{"location":"client/marker-object-blip/DeleteMarker/","text":"DeleteMarker Delete a marker by the id Argument Data Type Nedeed Default Description Id string/number - The id to delete the marker Dont need to be called every frame, if called every frame and the marker dont exist, sleep the loop for 100 ms to prevent spam Example DeleteMarker(\"marker\")","title":"DeleteMarker"},{"location":"client/marker-object-blip/DeleteMarker/#deletemarker","text":"Delete a marker by the id Argument Data Type Nedeed Default Description Id string/number - The id to delete the marker Dont need to be called every frame, if called every frame and the marker dont exist, sleep the loop for 100 ms to prevent spam Example DeleteMarker(\"marker\")","title":"DeleteMarker"},{"location":"client/marker-object-blip/DeleteiObject/","text":"DeleteiObject Delete a iObject Argument Data Type Nedeed Default Description Id string/number - The id of the iObject Delete boolean false If is true delete the actual entity, otherwise delete only the interaction Dont need to be called every frame, if called every frame and the iObject dont exist, sleep the loop for 100 ms to prevent spam Example DeleteiObject(\"myid\", true)","title":"DeleteiObject"},{"location":"client/marker-object-blip/DeleteiObject/#deleteiobject","text":"Delete a iObject Argument Data Type Nedeed Default Description Id string/number - The id of the iObject Delete boolean false If is true delete the actual entity, otherwise delete only the interaction Dont need to be called every frame, if called every frame and the iObject dont exist, sleep the loop for 100 ms to prevent spam Example DeleteiObject(\"myid\", true)","title":"DeleteiObject"},{"location":"client/marker-object-blip/DoesExist/","text":"DoesExist Check if a marker/object exist Argument Data Type Nedeed Default Description Type string - The type of the id: Marker, marker, m or Object, object, o Id string/number - The id Returns Data Type Description boolean True if exist, false if not exist Dont need to be called every frame Example DoesExist(\"marker\", \"myid\")","title":"DoesExist"},{"location":"client/marker-object-blip/DoesExist/#doesexist","text":"Check if a marker/object exist Argument Data Type Nedeed Default Description Type string - The type of the id: Marker, marker, m or Object, object, o Id string/number - The id Returns Data Type Description boolean True if exist, false if not exist Dont need to be called every frame Example DoesExist(\"marker\", \"myid\")","title":"DoesExist"},{"location":"client/marker-object-blip/GetCoordOf/","text":"GetCoordOf Get the coord from a id, return a vector3 Argument Data Type Nedeed Default Description Type string - The type of the id: Marker, marker, m or Object, object, o Id string/number - The id Returns Data Type Description vector3 The coords of the marker or of the iObject Dont need to be called every frame Example GetCoordOf(\"marker\", \"myid\")","title":"GetCoordOf"},{"location":"client/marker-object-blip/GetCoordOf/#getcoordof","text":"Get the coord from a id, return a vector3 Argument Data Type Nedeed Default Description Type string - The type of the id: Marker, marker, m or Object, object, o Id string/number - The id Returns Data Type Description vector3 The coords of the marker or of the iObject Dont need to be called every frame Example GetCoordOf(\"marker\", \"myid\")","title":"GetCoordOf"},{"location":"client/marker-object-blip/GetDistanceFrom/","text":"GetDistanceFrom Get distance from a id Argument Data Type Nedeed Default Description Type string - The type of the id: Marker, marker, m or Object, object, o Id string/number - The id Returns Data Type Description number The distance of the marker or of the iObject Dont need to be called every frame Example GetDistanceFrom(\"marker\", \"myid\")","title":"GetDistanceFrom"},{"location":"client/marker-object-blip/GetDistanceFrom/#getdistancefrom","text":"Get distance from a id Argument Data Type Nedeed Default Description Type string - The type of the id: Marker, marker, m or Object, object, o Id string/number - The id Returns Data Type Description number The distance of the marker or of the iObject Dont need to be called every frame Example GetDistanceFrom(\"marker\", \"myid\")","title":"GetDistanceFrom"},{"location":"client/marker-object-blip/RandomId/","text":"RandomId Generate a random id Argument Data Type Nedeed Default Description Length number 5 The length of the id Returns Data Type Description number The generated id Dont need to be called every frame Example RandomId()","title":"RandomId"},{"location":"client/marker-object-blip/RandomId/#randomid","text":"Generate a random id Argument Data Type Nedeed Default Description Length number 5 The length of the id Returns Data Type Description number The generated id Dont need to be called every frame Example RandomId()","title":"RandomId"},{"location":"client/marker-object-blip/SetIdOf/","text":"SetIdOf Change the id of a marker/iObject by the id Argument Data Type Nedeed Default Description Type string - The type of the id: Marker, marker, m or Object, object, o Id string/number - The old id New id string/number - The new id Dont need to be called every frame Example SetIdOf(\"marker\", \"myid\", \"newid\")","title":"SetIdOf"},{"location":"client/marker-object-blip/SetIdOf/#setidof","text":"Change the id of a marker/iObject by the id Argument Data Type Nedeed Default Description Type string - The type of the id: Marker, marker, m or Object, object, o Id string/number - The old id New id string/number - The new id Dont need to be called every frame Example SetIdOf(\"marker\", \"myid\", \"newid\")","title":"SetIdOf"},{"location":"client/marker-object-blip/SetMarkerAlpha/","text":"SetMarkerAlpha Set the alpha of the marker by the id Argument Data type Nedeed Default Description Id string/number - The id to update the marker Alpha number - The marker alpha, from 0 to 255 Dont need to be called every frame Example SetMarkerAlpha(\"marker\", 255)","title":"SetMarkerAlpha"},{"location":"client/marker-object-blip/SetMarkerAlpha/#setmarkeralpha","text":"Set the alpha of the marker by the id Argument Data type Nedeed Default Description Id string/number - The id to update the marker Alpha number - The marker alpha, from 0 to 255 Dont need to be called every frame Example SetMarkerAlpha(\"marker\", 255)","title":"SetMarkerAlpha"},{"location":"client/marker-object-blip/SetMarkerAnimation/","text":"SetMarkerAnimation Set the bouncing animation of the marker by the id Argument Data type Nedeed Default Description Id string/number - The id to update the marker Animation boolean - Use or no the bouncing animation Dont need to be called every frame Example SetMarkerAnimation(\"marker\", true)","title":"SetMarkerAnimation"},{"location":"client/marker-object-blip/SetMarkerAnimation/#setmarkeranimation","text":"Set the bouncing animation of the marker by the id Argument Data type Nedeed Default Description Id string/number - The id to update the marker Animation boolean - Use or no the bouncing animation Dont need to be called every frame Example SetMarkerAnimation(\"marker\", true)","title":"SetMarkerAnimation"},{"location":"client/marker-object-blip/SetMarkerColor/","text":"SetMarkerColor Set the color of the marker by the id Argument Data type Nedeed Default Description Id string/number - The id to update the marker Color vector3 - The marker color (RGB) Dont need to be called every frame Example SetMarkerColor(\"marker\", {255, 0, 255})","title":"SetMarkerColor"},{"location":"client/marker-object-blip/SetMarkerColor/#setmarkercolor","text":"Set the color of the marker by the id Argument Data type Nedeed Default Description Id string/number - The id to update the marker Color vector3 - The marker color (RGB) Dont need to be called every frame Example SetMarkerColor(\"marker\", {255, 0, 255})","title":"SetMarkerColor"},{"location":"client/marker-object-blip/SetMarkerDirection/","text":"SetMarkerDirection Set the direction of the marker by the id Argument Data type Nedeed Default Description Id string/number - The id to update the marker Direction vector3 - The marker direction Dont need to be called every frame Example SetMarkerDirection(\"marker\", vector3(0.0, 0.0, 0.0))","title":"SetMarkerDirection"},{"location":"client/marker-object-blip/SetMarkerDirection/#setmarkerdirection","text":"Set the direction of the marker by the id Argument Data type Nedeed Default Description Id string/number - The id to update the marker Direction vector3 - The marker direction Dont need to be called every frame Example SetMarkerDirection(\"marker\", vector3(0.0, 0.0, 0.0))","title":"SetMarkerDirection"},{"location":"client/marker-object-blip/SetMarkerDrawOnEntity/","text":"SetMarkerDrawOnEntity Set the DrawOnEntity of the marker by the id Argument Data type Nedeed Default Description Id string/number - The id to update the marker DrawOnEntity boolean - The marker DrawOnEntity Dont need to be called every frame Example SetMarkerDrawOnEntity(\"marker\", true)","title":"SetMarkerDrawOnEntity"},{"location":"client/marker-object-blip/SetMarkerDrawOnEntity/#setmarkerdrawonentity","text":"Set the DrawOnEntity of the marker by the id Argument Data type Nedeed Default Description Id string/number - The id to update the marker DrawOnEntity boolean - The marker DrawOnEntity Dont need to be called every frame Example SetMarkerDrawOnEntity(\"marker\", true)","title":"SetMarkerDrawOnEntity"},{"location":"client/marker-object-blip/SetMarkerRotation/","text":"SetMarkerRotation Set the rotation of the marker by the id Argument Data type Nedeed Default Description Id string/number - The id to update the marker Rotation vector3 - The marker rotation Dont need to be called every frame Example SetMarkerRotation(\"marker\", vector3(0.0, 1.0, 0.0))","title":"SetMarkerRotation"},{"location":"client/marker-object-blip/SetMarkerRotation/#setmarkerrotation","text":"Set the rotation of the marker by the id Argument Data type Nedeed Default Description Id string/number - The id to update the marker Rotation vector3 - The marker rotation Dont need to be called every frame Example SetMarkerRotation(\"marker\", vector3(0.0, 1.0, 0.0))","title":"SetMarkerRotation"},{"location":"client/marker-object-blip/SetMarkerScale/","text":"SetMarkerScale Set the scale of the marker by the id Argument Data type Nedeed Default Description Id string/number - The id to update the marker Scale vector3 - The marker scale Dont need to be called every frame Example SetMarkerscale(\"marker\", vector3(1.0, 1.0, 1.5))","title":"SetMarkerScale"},{"location":"client/marker-object-blip/SetMarkerScale/#setmarkerscale","text":"Set the scale of the marker by the id Argument Data type Nedeed Default Description Id string/number - The id to update the marker Scale vector3 - The marker scale Dont need to be called every frame Example SetMarkerscale(\"marker\", vector3(1.0, 1.0, 1.5))","title":"SetMarkerScale"},{"location":"client/marker-object-blip/SetMarkerType/","text":"SetMarkerType Set the type of the marker by the id Argument Data Type Nedeed Default Description Id string/number - The id to update the marker Type number - The marker type Dont need to be called every frame Example SetMarkerType(\"marker\", 2)","title":"SetMarkerType"},{"location":"client/marker-object-blip/SetMarkerType/#setmarkertype","text":"Set the type of the marker by the id Argument Data Type Nedeed Default Description Id string/number - The id to update the marker Type number - The marker type Dont need to be called every frame Example SetMarkerType(\"marker\", 2)","title":"SetMarkerType"},{"location":"client/marker-object-blip/SetTextOf/","text":"SetTextOf Change the text of a marker by the id Argument Data Type Nedeed Default Description Type string - The type of the id: Marker, marker, m or Object, object, o Id string/number - The id Text string/number - The new text Dont need to be called every frame Example SetTextOf(\"marker\", \"myid\", \"Press [~g~E~w~] to rechange the text\")","title":"SetTextOf"},{"location":"client/marker-object-blip/SetTextOf/#settextof","text":"Change the text of a marker by the id Argument Data Type Nedeed Default Description Type string - The type of the id: Marker, marker, m or Object, object, o Id string/number - The id Text string/number - The new text Dont need to be called every frame Example SetTextOf(\"marker\", \"myid\", \"Press [~g~E~w~] to rechange the text\")","title":"SetTextOf"},{"location":"client/misc/DevMode/","text":"DevMode Only for development, turn on the log for anything done by the utility Argument Data Type Nedeed Default Description Status boolean - Turn on or off the devmode Time boolean true Turn on or off the time off the log Format string %s %s %s The formatting for the log Dont need to be called every frame Example The first is the action , the second the type , the third the id DevMode(true, true, \"%s | %s | %s\") ^ ^ ^ Action Type Id","title":"DevMode"},{"location":"client/misc/DevMode/#devmode","text":"Only for development, turn on the log for anything done by the utility Argument Data Type Nedeed Default Description Status boolean - Turn on or off the devmode Time boolean true Turn on or off the time off the log Format string %s %s %s The formatting for the log Dont need to be called every frame Example The first is the action , the second the type , the third the id DevMode(true, true, \"%s | %s | %s\") ^ ^ ^ Action Type Id","title":"DevMode"},{"location":"client/misc/ReplaceTexture/","text":"ReplaceTexture Replace a texture of a model Argument Data Type Nedeed Default Description Model string - The model to replace the texture Texture Name string - The original texture name, you can found it with OpenIV Url string - The url of the texture, can be a: .gif, .png, .jpg or a website (it can also be a nui) Width number - The width of the texture Height number - The height of the texture Dont need to be called every frame Example ReplaceTexture(\"v_corp_facebeanbagd\", \"km_xj_v_beanbag\", \"https://gifer.com/en/embed/SBMP\", 300, 300) If dont start click me How to find the texture name Download OpenIV and setup it (follow the video until 3:50) When you are on OpenIV turn on the Edit Mode (in the top-right) Click Yes Ok, search the model name of the prop you want to find the texture name, for the tutorial i use this prop: v_corp_facebeanbagd And click Search \"v_corp_facebeanbagd\" Wait that OpenIV search in the all directory the prop you have choose and then double click on the v_corp_facebeanbagd.ydr or v_corp_facebeanbagd.yft For me is a ydr Ok, now open the file, a model will show up Click on View embedded textures in the bottom-right Some texture will show up, you need to choose the right texture, for me there is only one So, we have finished, km_xj_v_beanbag is the textureName","title":"ReplaceTexture"},{"location":"client/misc/ReplaceTexture/#replacetexture","text":"Replace a texture of a model Argument Data Type Nedeed Default Description Model string - The model to replace the texture Texture Name string - The original texture name, you can found it with OpenIV Url string - The url of the texture, can be a: .gif, .png, .jpg or a website (it can also be a nui) Width number - The width of the texture Height number - The height of the texture Dont need to be called every frame Example ReplaceTexture(\"v_corp_facebeanbagd\", \"km_xj_v_beanbag\", \"https://gifer.com/en/embed/SBMP\", 300, 300) If dont start click me How to find the texture name Download OpenIV and setup it (follow the video until 3:50) When you are on OpenIV turn on the Edit Mode (in the top-right) Click Yes Ok, search the model name of the prop you want to find the texture name, for the tutorial i use this prop: v_corp_facebeanbagd And click Search \"v_corp_facebeanbagd\" Wait that OpenIV search in the all directory the prop you have choose and then double click on the v_corp_facebeanbagd.ydr or v_corp_facebeanbagd.yft For me is a ydr Ok, now open the file, a model will show up Click on View embedded textures in the bottom-right Some texture will show up, you need to choose the right texture, for me there is only one So, we have finished, km_xj_v_beanbag is the textureName","title":"ReplaceTexture"},{"location":"client/misc/string.multigsub/","text":"string.multigsub Replace multiple part of a string Argument Data Type Nedeed Default Description String string - The original texture Pattern table - The pattern to find and replace Replacement table - The replacemente table Dont need to be called every frame Example local string = \"i love me\" local new_string = string.multigsub(string, {\"love\", \"me\"}, {\"hate\", \"you\"}) print(new_string) Expected result i hate you","title":"string.multigsub"},{"location":"client/misc/string.multigsub/#stringmultigsub","text":"Replace multiple part of a string Argument Data Type Nedeed Default Description String string - The original texture Pattern table - The pattern to find and replace Replacement table - The replacemente table Dont need to be called every frame Example local string = \"i love me\" local new_string = string.multigsub(string, {\"love\", \"me\"}, {\"hate\", \"you\"}) print(new_string) Expected result i hate you","title":"string.multigsub"},{"location":"client/misc/table.clone/","text":"table.clone Clone a table Argument Data Type Nedeed Default Description Table table - The original table Returns Data Type Description table The cloned table Dont need to be called every frame Example local tabletoclone = { msg = \"Hello\" } local cloned_table = table.clone(tabletoclone) print(cloned_table.msg) Expected result Hello","title":"table.clone"},{"location":"client/misc/table.clone/#tableclone","text":"Clone a table Argument Data Type Nedeed Default Description Table table - The original table Returns Data Type Description table The cloned table Dont need to be called every frame Example local tabletoclone = { msg = \"Hello\" } local cloned_table = table.clone(tabletoclone) print(cloned_table.msg) Expected result Hello","title":"table.clone"},{"location":"client/misc/table.empty/","text":"table.empty Check if a table is empty Argument Data Type Nedeed Default Description Table table - The table Returns Data Type Description boolean True if is empty, false if have some data Dont need to be called every frame Example local emptytable = {} print(table.empty(emptytable)) Expected result true","title":"table.empty"},{"location":"client/misc/table.empty/#tableempty","text":"Check if a table is empty Argument Data Type Nedeed Default Description Table table - The table Returns Data Type Description boolean True if is empty, false if have some data Dont need to be called every frame Example local emptytable = {} print(table.empty(emptytable)) Expected result true","title":"table.empty"},{"location":"client/misc/table.fexist/","text":"table.fexist Check if the field exist in the table Argument Data Type Nedeed Default Description Table table - The table Field string - The field to check Returns Data Type Description boolean True if field exist, false if field dont exist Dont need to be called every frame Example local tabletocheck = { msg = \"Message\", another = 2 } print(table.fexist(tabletocheck, \"msg\")) print(table.fexist(tabletocheck, \"utility\")) Expected result true false","title":"table.fexist"},{"location":"client/misc/table.fexist/#tablefexist","text":"Check if the field exist in the table Argument Data Type Nedeed Default Description Table table - The table Field string - The field to check Returns Data Type Description boolean True if field exist, false if field dont exist Dont need to be called every frame Example local tabletocheck = { msg = \"Message\", another = 2 } print(table.fexist(tabletocheck, \"msg\")) print(table.fexist(tabletocheck, \"utility\")) Expected result true false","title":"table.fexist"},{"location":"client/misc/table.remove/","text":"table.remove Equal to the native table.remove of lua but accept string as position Argument Data Type Nedeed Default Description Table table - The table Position number/string - The position of the data to remove Dont need to be called every frame Example local tabletocheck = { [\"Hello\"] = 5, [\"Utility\"] = 1, } table.remove(tabletocheck, \"Hello\") print(json.encode(tabletocheck)) Expected result {\"Utility\":1}","title":"table.remove"},{"location":"client/misc/table.remove/#tableremove","text":"Equal to the native table.remove of lua but accept string as position Argument Data Type Nedeed Default Description Table table - The table Position number/string - The position of the data to remove Dont need to be called every frame Example local tabletocheck = { [\"Hello\"] = 5, [\"Utility\"] = 1, } table.remove(tabletocheck, \"Hello\") print(json.encode(tabletocheck)) Expected result {\"Utility\":1}","title":"table.remove"},{"location":"client/native/ButtonNotification/","text":"ButtonNotification Shows a notification in the top-right that support the displaying button inputs Argument Data Type Nedeed Default Description Message string - The message to show Dont need to be called every frame Example ButtonNotification(\"Example\") Tip If you write {any_letter} the content will be converted to button inputs Example : ButtonNotification(\"A simple message {X} {D}\") Result :","title":"ButtonNotification"},{"location":"client/native/ButtonNotification/#buttonnotification","text":"Shows a notification in the top-right that support the displaying button inputs Argument Data Type Nedeed Default Description Message string - The message to show Dont need to be called every frame Example ButtonNotification(\"Example\") Tip If you write {any_letter} the content will be converted to button inputs Example : ButtonNotification(\"A simple message {X} {D}\") Result :","title":"ButtonNotification"},{"location":"client/native/CreateLoop/","text":"CreateLoop Create a while true do loop Argument Data Type Nedeed Default Description Function function - The code executed in the loop Time number 5 The time express in millisenconds ( ms ) of the execution Dont need to be called every frame Example Without time : CreateLoop(function() print(\"Test\") end) With time : CreateLoop(function() print(\"Test\") end, 500) Old method Citizen.CreateThread(function() while true do print(\"Test\") Citizen.Wait(5) end end) Old problem In the old method if you forgot to insert Citizen.Wait(ms) the ALL server will crash I created it because i was sick of the thousands of times my server crashed, Thanks FiveM \ud83d\ude09","title":"CreateLoop"},{"location":"client/native/CreateLoop/#createloop","text":"Create a while true do loop Argument Data Type Nedeed Default Description Function function - The code executed in the loop Time number 5 The time express in millisenconds ( ms ) of the execution Dont need to be called every frame Example Without time : CreateLoop(function() print(\"Test\") end) With time : CreateLoop(function() print(\"Test\") end, 500) Old method Citizen.CreateThread(function() while true do print(\"Test\") Citizen.Wait(5) end end) Old problem In the old method if you forgot to insert Citizen.Wait(ms) the ALL server will crash I created it because i was sick of the thousands of times my server crashed, Thanks FiveM \ud83d\ude09","title":"CreateLoop"},{"location":"client/native/CreateObject/","text":"CreateObject Is equal to the standard one but dont need to load or request the model Argument Data Type Nedeed Default Description ModelHash string/hash - The hash or the name of the model Coords vector3/number - The coordinates to create the object (can be an vector3 or you can insert it one by one) IsNetwork boolean false Whether to create a network object for the object. If false, the object exists only locally. NetMissionEntity boolean false Whether to register the object as pinned to the script host in the R* network model. DoorFlag boolean false False to create a door archetype (archetype flag bit 26 set) as a door. Required to be set to true to create door models in network mode. Returns Data Type Description object A script handle (fwScriptGuid index) for the object, or 0 if the object failed to be created netId The net id Dont need to be called every frame Example Using vector3 local obj, netId = CreateObject(\"prop_weed_01\", vector3(0.0, 0.0, 0.0), true, false, false) Using separated coords local obj, netId = CreateObject(\"prop_weed_01\", 0.0, 0.0, 0.0, true, false, false) Old method local modelHash = GetHashKey(\"prop_weed_01\") if not HasModelLoaded(modelHash) then RequestModel(modelHash); while not HasModelLoaded(modelHash) do Citizen.Wait(1); end end local obj = CreateObject(modelHash, 0.0, 0.0, 0.0, true, false, false) SetModelAsNoLongerNeeded(modelHash) Using old native although i dont recommend it, you can use the old native via old_CreateObject","title":"CreateObject"},{"location":"client/native/CreateObject/#createobject","text":"Is equal to the standard one but dont need to load or request the model Argument Data Type Nedeed Default Description ModelHash string/hash - The hash or the name of the model Coords vector3/number - The coordinates to create the object (can be an vector3 or you can insert it one by one) IsNetwork boolean false Whether to create a network object for the object. If false, the object exists only locally. NetMissionEntity boolean false Whether to register the object as pinned to the script host in the R* network model. DoorFlag boolean false False to create a door archetype (archetype flag bit 26 set) as a door. Required to be set to true to create door models in network mode. Returns Data Type Description object A script handle (fwScriptGuid index) for the object, or 0 if the object failed to be created netId The net id Dont need to be called every frame Example Using vector3 local obj, netId = CreateObject(\"prop_weed_01\", vector3(0.0, 0.0, 0.0), true, false, false) Using separated coords local obj, netId = CreateObject(\"prop_weed_01\", 0.0, 0.0, 0.0, true, false, false) Old method local modelHash = GetHashKey(\"prop_weed_01\") if not HasModelLoaded(modelHash) then RequestModel(modelHash); while not HasModelLoaded(modelHash) do Citizen.Wait(1); end end local obj = CreateObject(modelHash, 0.0, 0.0, 0.0, true, false, false) SetModelAsNoLongerNeeded(modelHash) Using old native although i dont recommend it, you can use the old native via old_CreateObject","title":"CreateObject"},{"location":"client/native/CreateVehicle/","text":"CreateVehicle Is equal to the standard one but dont need to load or request the model Argument Data Type Nedeed Default Description ModelHash string/hash - The hash or the name of the model Coords vector3/number - The coordinates to create the object (can be an vector3 or you can insert it one by one) Heading number 0 Heading to face towards, in degrees. IsNetwork boolean false Whether to create a network object for the vehicle. If false, the vehicle exists only locally. NetMissionEntity boolean false Whether to register the vehicle as pinned to the script host in the R* network model. Returns Data Type Description vehicle A script handle (fwScriptGuid index) for the vehicle, or 0 if the vehicle failed to be created netId The net id Dont need to be called every frame Example Using vector3 local veh, netId = CreateVehicle(\"t20\", vector3(0.0, 0.0, 0.0), 0.0, true, false) Using separated coords local veh, netId = CreateVehicle(\"t20\", 0.0, 0.0, 0.0, 0.0, true, false) Old method local modelHash = GetHashKey(\"t20\") if not HasModelLoaded(modelHash) then RequestModel(modelHash); while not HasModelLoaded(modelHash) do Citizen.Wait(1); end end local obj = CreateVehicle(modelHash, 0.0, 0.0, 0.0, 0.0, true, false) SetModelAsNoLongerNeeded(modelHash) Using old native although i dont recommend it, you can use the old native via old_CreateVehicle","title":"CreateVehicle"},{"location":"client/native/CreateVehicle/#createvehicle","text":"Is equal to the standard one but dont need to load or request the model Argument Data Type Nedeed Default Description ModelHash string/hash - The hash or the name of the model Coords vector3/number - The coordinates to create the object (can be an vector3 or you can insert it one by one) Heading number 0 Heading to face towards, in degrees. IsNetwork boolean false Whether to create a network object for the vehicle. If false, the vehicle exists only locally. NetMissionEntity boolean false Whether to register the vehicle as pinned to the script host in the R* network model. Returns Data Type Description vehicle A script handle (fwScriptGuid index) for the vehicle, or 0 if the vehicle failed to be created netId The net id Dont need to be called every frame Example Using vector3 local veh, netId = CreateVehicle(\"t20\", vector3(0.0, 0.0, 0.0), 0.0, true, false) Using separated coords local veh, netId = CreateVehicle(\"t20\", 0.0, 0.0, 0.0, 0.0, true, false) Old method local modelHash = GetHashKey(\"t20\") if not HasModelLoaded(modelHash) then RequestModel(modelHash); while not HasModelLoaded(modelHash) do Citizen.Wait(1); end end local obj = CreateVehicle(modelHash, 0.0, 0.0, 0.0, 0.0, true, false) SetModelAsNoLongerNeeded(modelHash) Using old native although i dont recommend it, you can use the old native via old_CreateVehicle","title":"CreateVehicle"},{"location":"client/native/DeleteEntity/","text":"DeleteEntity Is equal to the standard one but request the control of the entity to prevent any deletion bug and set the entity as mission entity, can accept a netId Argument Data Type Nedeed Default Description Entity entity/netId - The entity handle or the netId of the entity IsNetwork boolean false If is true the entity arguments become the netId and find and delete the entity by the netId Dont need to be called every frame Example Using entity handle DeleteEntity(entity, false) Using netId DeleteEntity(netId, true) Old method SetEntityAsMissionEntity(entity) DeleteEntity(entity) Old method problem Sometimes the entity is not deleted because the entity was created by another client Using old native although i dont recommend it, you can use the old native via old_DeleteEntity","title":"DeleteEntity"},{"location":"client/native/DeleteEntity/#deleteentity","text":"Is equal to the standard one but request the control of the entity to prevent any deletion bug and set the entity as mission entity, can accept a netId Argument Data Type Nedeed Default Description Entity entity/netId - The entity handle or the netId of the entity IsNetwork boolean false If is true the entity arguments become the netId and find and delete the entity by the netId Dont need to be called every frame Example Using entity handle DeleteEntity(entity, false) Using netId DeleteEntity(netId, true) Old method SetEntityAsMissionEntity(entity) DeleteEntity(entity) Old method problem Sometimes the entity is not deleted because the entity was created by another client Using old native although i dont recommend it, you can use the old native via old_DeleteEntity","title":"DeleteEntity"},{"location":"client/native/DisableControlAction/","text":"DisableCotrolAction Disable a key, need to be called every tick Argument Data Type Nedeed Default Description Control string - The key to disable Disable boolean true Disable or no Need to be called every frame Example CreateLoop(function() DisableCotrolAction(\"K\") end) Old method Citizen.CreateThread(function() while true do DisableControlAction(0, 311, true) Citizen.Wait(1) end end) Using old native although i dont recommend it, you can use the old native via old_DisableControlAction","title":"DisableControlAction"},{"location":"client/native/DisableControlAction/#disablecotrolaction","text":"Disable a key, need to be called every tick Argument Data Type Nedeed Default Description Control string - The key to disable Disable boolean true Disable or no Need to be called every frame Example CreateLoop(function() DisableCotrolAction(\"K\") end) Old method Citizen.CreateThread(function() while true do DisableControlAction(0, 311, true) Citizen.Wait(1) end end) Using old native although i dont recommend it, you can use the old native via old_DisableControlAction","title":"DisableCotrolAction"},{"location":"client/native/DisableControlForSeconds/","text":"DisableCotrolForSeconds Disable a key for inserted seconds Argument Data Type Nedeed Default Description Control string - The key to disable Seconds number - The seconds which the button is disabled Dont need to be called every frame Example DisableCotrolForSeconds(\"K\", 5)","title":"DisableControlForSeconds"},{"location":"client/native/DisableControlForSeconds/#disablecotrolforseconds","text":"Disable a key for inserted seconds Argument Data Type Nedeed Default Description Control string - The key to disable Seconds number - The seconds which the button is disabled Dont need to be called every frame Example DisableCotrolForSeconds(\"K\", 5)","title":"DisableCotrolForSeconds"},{"location":"client/native/DrawText3Ds/","text":"DrawText3Ds Draws 3D text on the specified coords Argument Data Type Nedeed Default Description Coords vector3 - The coordinates to create the 3d text Text string - The text Scale number 0.35 The scale of the text Font number 4 The font, on the fivem native reference there isnt a list Need to be called every frame Example DrawText3Ds(vector3(0.0, 0.0, 0.0), \"Test\")","title":"DrawText3Ds"},{"location":"client/native/DrawText3Ds/#drawtext3ds","text":"Draws 3D text on the specified coords Argument Data Type Nedeed Default Description Coords vector3 - The coordinates to create the 3d text Text string - The text Scale number 0.35 The scale of the text Font number 4 The font, on the fivem native reference there isnt a list Need to be called every frame Example DrawText3Ds(vector3(0.0, 0.0, 0.0), \"Test\")","title":"DrawText3Ds"},{"location":"client/native/GetEntitySurfaceMaterial/","text":"GetEntitySurfaceMaterial Returns the hash of the ground material where the entity is in Argument Data Type Nedeed Default Description Entity entity - The entity being checked Returns Data Type Description materialHash The material hash of the ground Dont need to be called every frame Example local materialHash = GetEntitySurfaceMaterial(entity)","title":"GetEntitySurfaceMaterial"},{"location":"client/native/GetEntitySurfaceMaterial/#getentitysurfacematerial","text":"Returns the hash of the ground material where the entity is in Argument Data Type Nedeed Default Description Entity entity - The entity being checked Returns Data Type Description materialHash The material hash of the ground Dont need to be called every frame Example local materialHash = GetEntitySurfaceMaterial(entity)","title":"GetEntitySurfaceMaterial"},{"location":"client/native/GetPlayerName/","text":"GetPlayerName Returns the player name, the difference between the standrard one and this one is that this one have the playerid has default Argument Data Type Nedeed Default Description PlayerId number playerId The local player id Returns Data Type Description name The player name Dont need to be called every frame Example GetPlayerName()","title":"GetPlayerName"},{"location":"client/native/GetPlayerName/#getplayername","text":"Returns the player name, the difference between the standrard one and this one is that this one have the playerid has default Argument Data Type Nedeed Default Description PlayerId number playerId The local player id Returns Data Type Description name The player name Dont need to be called every frame Example GetPlayerName()","title":"GetPlayerName"},{"location":"client/native/GetWorldClosestPed/","text":"GetWorldClosestPed Return the closest ped, and the all founded ped Argument Data Type Nedeed Default Description Radius number - The radius that being checked Returns Data Type Description ped The closest ped table All the founded ped Dont need to be called every frame Example local closest, allped = GetWorldClosestPed(5.0)","title":"GetWorldClosestPed"},{"location":"client/native/GetWorldClosestPed/#getworldclosestped","text":"Return the closest ped, and the all founded ped Argument Data Type Nedeed Default Description Radius number - The radius that being checked Returns Data Type Description ped The closest ped table All the founded ped Dont need to be called every frame Example local closest, allped = GetWorldClosestPed(5.0)","title":"GetWorldClosestPed"},{"location":"client/native/GetWorldClosestPlayer/","text":"GetWorldClosestPlayer Return the closest player, and the all founded player Argument Data Type Nedeed Default Description Radius number - The radius that being checked Returns Data Type Description player The closest player table All the founded player Dont need to be called every frame Example local closest, allplayer = GetWorldClosestPlayer(5.0)","title":"GetWorldClosestPlayer"},{"location":"client/native/GetWorldClosestPlayer/#getworldclosestplayer","text":"Return the closest player, and the all founded player Argument Data Type Nedeed Default Description Radius number - The radius that being checked Returns Data Type Description player The closest player table All the founded player Dont need to be called every frame Example local closest, allplayer = GetWorldClosestPlayer(5.0)","title":"GetWorldClosestPlayer"},{"location":"client/native/IsControlJustPressed/","text":"IsControlJustPressed Call a callback when a specific key was pressed, more optimized and easy to use Argument Data Type Nedeed Default Description Control string - The key, this is the list Callback function - The code executed when the key was pressed Dont need to be called every frame Example Run at 0 ms IsControlJustPressed(\"K\", function() print(\"Hello\") end) Old method Run at 2/3 ms Citizen.CreateThread(function() while true do if IsControlJustPressed(0, 311) then print(\"Hello\") end Citizen.Wait(1) end end) IsControlJustPressed although i dont recommend it, you can use the old native via old_IsControlJustPressed","title":"IsControlJustPressed"},{"location":"client/native/IsControlJustPressed/#iscontroljustpressed","text":"Call a callback when a specific key was pressed, more optimized and easy to use Argument Data Type Nedeed Default Description Control string - The key, this is the list Callback function - The code executed when the key was pressed Dont need to be called every frame Example Run at 0 ms IsControlJustPressed(\"K\", function() print(\"Hello\") end) Old method Run at 2/3 ms Citizen.CreateThread(function() while true do if IsControlJustPressed(0, 311) then print(\"Hello\") end Citizen.Wait(1) end end) IsControlJustPressed although i dont recommend it, you can use the old native via old_IsControlJustPressed","title":"IsControlJustPressed"},{"location":"client/native/LoopThread/","text":"LoopThread It will create a thread in the loop, the code inserted into the function will be executed each time for the inserted time, it can be used for optimize code (See example) Argument Data Type Nedeed Default Description Id string/number - The id to identify the thread Time number - The time express in millisenconds ( ms ) of the execution Function function - The code executed in the loop thread Dont need to be called every frame Warning It can be used only into CreateLoop function Example How it can be used for optimization : local Luck = 1 CreateLoop(function() LoopThread(\"first_loop\", 500, function() Luck = Luck + 1 end) print(Luck) end, 250) Expected Results The thread overlaps because the thread time is a multiple of the time loop (in that case 2 or 3) 1 1 2 2 2 3 3 4 4 5 5 5 ...etc How it works : CreateLoop(function() print(\"Start\") LoopThread(\"first_loop\", 1000, function() print(\"Loop Thread\") end) print(\"End\") end, 500) Expected Results The thread overlaps because the thread time is a multiple of the time loop (in that case 2 or 3) Start End LoopThread Start End Start End Start End LoopThread Start End ...etc","title":"LoopThread"},{"location":"client/native/LoopThread/#loopthread","text":"It will create a thread in the loop, the code inserted into the function will be executed each time for the inserted time, it can be used for optimize code (See example) Argument Data Type Nedeed Default Description Id string/number - The id to identify the thread Time number - The time express in millisenconds ( ms ) of the execution Function function - The code executed in the loop thread Dont need to be called every frame Warning It can be used only into CreateLoop function Example How it can be used for optimization : local Luck = 1 CreateLoop(function() LoopThread(\"first_loop\", 500, function() Luck = Luck + 1 end) print(Luck) end, 250) Expected Results The thread overlaps because the thread time is a multiple of the time loop (in that case 2 or 3) 1 1 2 2 2 3 3 4 4 5 5 5 ...etc How it works : CreateLoop(function() print(\"Start\") LoopThread(\"first_loop\", 1000, function() print(\"Loop Thread\") end) print(\"End\") end, 500) Expected Results The thread overlaps because the thread time is a multiple of the time loop (in that case 2 or 3) Start End LoopThread Start End Start End Start End LoopThread Start End ...etc","title":"LoopThread"},{"location":"client/native/MakeEntityFaceEntity/","text":"MakeEntityFaceEntity Makes the two entities look in the eye Argument Data Type Nedeed Default Description Entity 1 entity - The first entity Entity 2 entity - The second entity What entity boolean false If true make the entity1 rotate to the entity2, otherwise the entity2 rotate to the entity1 Dont need to be called every frame Example MakeEntityFaceEntity(entity1, entity2)","title":"MakeEntityFaceEntity"},{"location":"client/native/MakeEntityFaceEntity/#makeentityfaceentity","text":"Makes the two entities look in the eye Argument Data Type Nedeed Default Description Entity 1 entity - The first entity Entity 2 entity - The second entity What entity boolean false If true make the entity1 rotate to the entity2, otherwise the entity2 rotate to the entity1 Dont need to be called every frame Example MakeEntityFaceEntity(entity1, entity2)","title":"MakeEntityFaceEntity"},{"location":"client/native/PlayerPedId/","text":"PlayerPedId Is equal to the standard one but get the data from a saved variable Returns Data Type Description ped The player ped handle Dont need to be called every frame Example PlayerPedId()","title":"PlayerPedId"},{"location":"client/native/PlayerPedId/#playerpedid","text":"Is equal to the standard one but get the data from a saved variable Returns Data Type Description ped The player ped handle Dont need to be called every frame Example PlayerPedId()","title":"PlayerPedId"},{"location":"client/native/RegisterNetEvent/","text":"RegisterNetEvent Register a net event that can be called by the client or the server, The event have the AddEventHandler already loaded Argument Data Type Nedeed Default Description EventName string - The name of the event Function function - The code executed when the event was triggered Dont need to be called every frame Example RegisterNetEvent(\"utility_libs:ILoveYou\", function() print(GetPlayerName()..\" love the utility_libs, how to blame it?\") end) Old method RegisterNetEvent(\"utility_libs:ILoveYou\") AddEventHandler(\"utility_libs:ILoveYou\", function() print(GetPlayerName(PlayerId())..\" love the utility_libs, how to blame it?\") end) Using old native although i dont recommend it, you can use the old native via old_RegisterNetEvent","title":"RegisterNetEvent"},{"location":"client/native/RegisterNetEvent/#registernetevent","text":"Register a net event that can be called by the client or the server, The event have the AddEventHandler already loaded Argument Data Type Nedeed Default Description EventName string - The name of the event Function function - The code executed when the event was triggered Dont need to be called every frame Example RegisterNetEvent(\"utility_libs:ILoveYou\", function() print(GetPlayerName()..\" love the utility_libs, how to blame it?\") end) Old method RegisterNetEvent(\"utility_libs:ILoveYou\") AddEventHandler(\"utility_libs:ILoveYou\", function() print(GetPlayerName(PlayerId())..\" love the utility_libs, how to blame it?\") end) Using old native although i dont recommend it, you can use the old native via old_RegisterNetEvent","title":"RegisterNetEvent"},{"location":"client/native/ResumeLoopThread/","text":"ResumeLoopThread Resume a stopped thread identified by the id inserted Argument Data Type Nedeed Default Description Id string/number - The id of the loop thread Dont need to be called every frame Warning It can be used only into CreateLoop function where you created the thread Example ResumeLoopThread(\"first_loop\")","title":"ResumeLoopThread"},{"location":"client/native/ResumeLoopThread/#resumeloopthread","text":"Resume a stopped thread identified by the id inserted Argument Data Type Nedeed Default Description Id string/number - The id of the loop thread Dont need to be called every frame Warning It can be used only into CreateLoop function where you created the thread Example ResumeLoopThread(\"first_loop\")","title":"ResumeLoopThread"},{"location":"client/native/ShowNotification/","text":"ShowNotification Draw a notification in the bottom-left Argument Data Type Nedeed Default Description Message string - The message to show Dont need to be called every frame Example ShowNotification(\"Example\") Tip Supported Color Syntax Syntax Color ~r~ Red ~b~ Blue ~g~ Green ~y~ Yellow ~p~ Purple ~o~ Orange ~c~ Grey ~m~ Dark Grey ~u~ Black ~n~ New Line ~s~ White (default) ~w~ White ~h~ Bold \u2211 Rockstar Icon \u00a6 Rockstar Verified Icon ShowNotification(\"\u2211\u00f7\u00a6~r~ r ~b~ b ~g~ g ~y~ y ~p~ p ~c~ gr ~m~ d gr ~u~ bl ~o~ or ~s~ re ~n~ nl ~h~ Bold\")","title":"ShowNotification"},{"location":"client/native/ShowNotification/#shownotification","text":"Draw a notification in the bottom-left Argument Data Type Nedeed Default Description Message string - The message to show Dont need to be called every frame Example ShowNotification(\"Example\") Tip","title":"ShowNotification"},{"location":"client/native/ShowNotification/#supported-color-syntax","text":"Syntax Color ~r~ Red ~b~ Blue ~g~ Green ~y~ Yellow ~p~ Purple ~o~ Orange ~c~ Grey ~m~ Dark Grey ~u~ Black ~n~ New Line ~s~ White (default) ~w~ White ~h~ Bold \u2211 Rockstar Icon \u00a6 Rockstar Verified Icon ShowNotification(\"\u2211\u00f7\u00a6~r~ r ~b~ b ~g~ g ~y~ y ~p~ p ~c~ gr ~m~ d gr ~u~ bl ~o~ or ~s~ re ~n~ nl ~h~ Bold\")","title":"Supported Color Syntax"},{"location":"client/native/StopLoopThread/","text":"StopLoopThread Stop the loop thread identified by the id inserted Argument Data Type Nedeed Default Description Id string/number - The id of the loop thread Dont need to be called every frame Warning It can be used only into CreateLoop function where you created the thread Example StopLoopThread(\"first_loop\")","title":"StopLoopThread"},{"location":"client/native/StopLoopThread/#stoploopthread","text":"Stop the loop thread identified by the id inserted Argument Data Type Nedeed Default Description Id string/number - The id of the loop thread Dont need to be called every frame Warning It can be used only into CreateLoop function where you created the thread Example StopLoopThread(\"first_loop\")","title":"StopLoopThread"},{"location":"client/native/Task/","text":"Task It will create a thread in the loop with a default time, can be stopped by the StopLoopThread using the id returned. Available Task Name Velocity TaskBack 5000 ms TaskSlow 1000 ms TaskFast 500 ms TaskExtraFast 5 ms Argument Data Type Nedeed Default Description Function function - The code executed in the loop thread Returns Data Type Description number The generated id of the task Dont need to be called every frame Warning It can be used only into CreateLoop function Example CreateLoop(function() TaskBack(function() print(\"Hello\") end) end, 250)","title":"Task"},{"location":"client/native/Task/#task","text":"It will create a thread in the loop with a default time, can be stopped by the StopLoopThread using the id returned. Available Task Name Velocity TaskBack 5000 ms TaskSlow 1000 ms TaskFast 500 ms TaskExtraFast 5 ms Argument Data Type Nedeed Default Description Function function - The code executed in the loop thread Returns Data Type Description number The generated id of the task Dont need to be called every frame Warning It can be used only into CreateLoop function Example CreateLoop(function() TaskBack(function() print(\"Hello\") end) end, 250)","title":"Task"},{"location":"client/native/TaskPlayAnim/","text":"TaskPlayAnim Is equal to the standard one but dont need to load or request the anim dict Argument Data Type Nedeed Default Description Ped ped - The ped Animation dictionary string - The animation dictionary, this is the list Animation name string - The animation name, this is the list Blend in speed number - The blend in speed Blend out speed number - The blend out speed Duration number - The duration time in milliseconds ( ms ) Flag number - The animation flag: -1 default. 0 no play, small value = slow animation speed, other = freeze player Playback Rate number - No description, values are between 0.0 and 1.0 LockX boolean 0 No description, 0 in most cases LockY boolean 0 No description, 0 in most cases LockZ boolean 0 No description, 0 in most cases Dont need to be called every frame Example TaskPlayAnim(PlayerPedId(), \"amb@world_human_golf_player@male@idle_a\", \"idle_a\", 8.0, 1.0, -1, 49, 0) Old method if not HasAnimDictLoaded(\"amb@world_human_golf_player@male@idle_a\") then RequestAnimDict(\"amb@world_human_golf_player@male@idle_a\") while not HasAnimDictLoaded(\"amb@world_human_golf_player@male@idle_a\") do Citizen.Wait(1) end end TaskPlayAnim(PlayerPedId(), \"amb@world_human_golf_player@male@idle_a\", \"idle_a\", 8.0, 1.0, -1, 49, 0) RemoveAnimDict(\"amb@world_human_golf_player@male@idle_a\") Using old native although i dont recommend it, you can use the old native via old_TaskPlayAnim","title":"TaskPlayAnim"},{"location":"client/native/TaskPlayAnim/#taskplayanim","text":"Is equal to the standard one but dont need to load or request the anim dict Argument Data Type Nedeed Default Description Ped ped - The ped Animation dictionary string - The animation dictionary, this is the list Animation name string - The animation name, this is the list Blend in speed number - The blend in speed Blend out speed number - The blend out speed Duration number - The duration time in milliseconds ( ms ) Flag number - The animation flag: -1 default. 0 no play, small value = slow animation speed, other = freeze player Playback Rate number - No description, values are between 0.0 and 1.0 LockX boolean 0 No description, 0 in most cases LockY boolean 0 No description, 0 in most cases LockZ boolean 0 No description, 0 in most cases Dont need to be called every frame Example TaskPlayAnim(PlayerPedId(), \"amb@world_human_golf_player@male@idle_a\", \"idle_a\", 8.0, 1.0, -1, 49, 0) Old method if not HasAnimDictLoaded(\"amb@world_human_golf_player@male@idle_a\") then RequestAnimDict(\"amb@world_human_golf_player@male@idle_a\") while not HasAnimDictLoaded(\"amb@world_human_golf_player@male@idle_a\") do Citizen.Wait(1) end end TaskPlayAnim(PlayerPedId(), \"amb@world_human_golf_player@male@idle_a\", \"idle_a\", 8.0, 1.0, -1, 49, 0) RemoveAnimDict(\"amb@world_human_golf_player@male@idle_a\") Using old native although i dont recommend it, you can use the old native via old_TaskPlayAnim","title":"TaskPlayAnim"},{"location":"client/native/TaskVehicleDriveToCoord/","text":"TaskVehicleDriveToCoord ask to a ped with a vehicle to drive at a specific coordinate Argument Data Type Nedeed Default Description Ped ped - The driver of the vehicle Vehicle vehicle - The vehicle Destination vector3 - The destination coords Speed number 10.0 The driving speed Stop range number 1.0 The stop range Dont need to be called every frame Example Using vector3 TaskVehicleDriveToCoord(ped, vehicle, vector3(0.0, 0.0, 0.0)) Old method TaskVehicleDriveToCoord(ped, vehicle, vector3(0.0, 0.0, 0.0), 10.0, 0, GetEntityModel(vehicle), driving_style, 1.0) Old problem THE DRIVING STYLE!! is something almost impossible to find, there is almost 0 documentation about the driving style, every time i tried to use this native i always had to go and grab the driving style from other scripts Using old native although i dont recommend it, you can use the old native via old_TaskVehicleDriveToCoord","title":"TaskVehicleDriveToCoord"},{"location":"client/native/TaskVehicleDriveToCoord/#taskvehicledrivetocoord","text":"ask to a ped with a vehicle to drive at a specific coordinate Argument Data Type Nedeed Default Description Ped ped - The driver of the vehicle Vehicle vehicle - The vehicle Destination vector3 - The destination coords Speed number 10.0 The driving speed Stop range number 1.0 The stop range Dont need to be called every frame Example Using vector3 TaskVehicleDriveToCoord(ped, vehicle, vector3(0.0, 0.0, 0.0)) Old method TaskVehicleDriveToCoord(ped, vehicle, vector3(0.0, 0.0, 0.0), 10.0, 0, GetEntityModel(vehicle), driving_style, 1.0) Old problem THE DRIVING STYLE!! is something almost impossible to find, there is almost 0 documentation about the driving style, every time i tried to use this native i always had to go and grab the driving style from other scripts Using old native although i dont recommend it, you can use the old native via old_TaskVehicleDriveToCoord","title":"TaskVehicleDriveToCoord"},{"location":"client/native/_break/","text":"_break Break the current loop Warning It can be used only into CreateLoop function Example _break()","title":"_break"},{"location":"client/native/_break/#_break","text":"Break the current loop Warning It can be used only into CreateLoop function Example _break()","title":"_break"},{"location":"client/synced_trigger/TriggerSyncedEvent/","text":"TriggerSyncedEvent (Client side) Trigger a net event for all triggers Argument Data Type Nedeed Default Description EventName string - The net event name Whitelist number/table - This is the whitelist, for each id the defined event will be triggered, insert -1 for trigger the event for any client or create a table with all the id Any other argument any - You can pass any argument, its equal to the Trigger Dont need to be called every frame Example If we want to trigger the event for any client RegisterNetEvent(\"utility_libs:ILoveYou\", function() print(\"i love the utility_libs\") end) TriggerSyncedEvent(\"utility_libs:ILoveYou\", -1) Expected Results ID 1 : i see the message \"i love the utility_libs\" ID 2 : i see the message \"i love the utility_libs\" ID 3 : i see the message \"i love the utility_libs\" ...etc Or if we want to trigger the event only for id 1 and 2 RegisterNetEvent(\"utility_libs:ILoveYou\", function() print(\"i love the utility_libs\") end) TriggerSyncedEvent(\"utility_libs:ILoveYou\", {1,2}) Expected Results ID 1 : i see the message \"i love the utility_libs\" ID 2 : i see the message \"i love the utility_libs\" ID 3 : i dont see any message Old method Client: RegisterNetEvent(\"utility_libs:ILoveYou\") AddEventHandler(\"utility_libs:ILoveYou\", function() print(\"i love the utility_libs\") end) TriggerServerEvent(\"utility_libs:ILoveYou_S\") Server: RegisterServerEvent(\"utility_libs:ILoveYou_S\") AddEventHandler(\"utility_libs:ILoveYou_S\", function() TriggerClientEvent(\"utility_libs:ILoveYou\", -1) end)","title":"TriggerSyncedEvent"},{"location":"client/synced_trigger/TriggerSyncedEvent/#triggersyncedevent-client-side","text":"Trigger a net event for all triggers Argument Data Type Nedeed Default Description EventName string - The net event name Whitelist number/table - This is the whitelist, for each id the defined event will be triggered, insert -1 for trigger the event for any client or create a table with all the id Any other argument any - You can pass any argument, its equal to the Trigger Dont need to be called every frame Example If we want to trigger the event for any client RegisterNetEvent(\"utility_libs:ILoveYou\", function() print(\"i love the utility_libs\") end) TriggerSyncedEvent(\"utility_libs:ILoveYou\", -1) Expected Results ID 1 : i see the message \"i love the utility_libs\" ID 2 : i see the message \"i love the utility_libs\" ID 3 : i see the message \"i love the utility_libs\" ...etc Or if we want to trigger the event only for id 1 and 2 RegisterNetEvent(\"utility_libs:ILoveYou\", function() print(\"i love the utility_libs\") end) TriggerSyncedEvent(\"utility_libs:ILoveYou\", {1,2}) Expected Results ID 1 : i see the message \"i love the utility_libs\" ID 2 : i see the message \"i love the utility_libs\" ID 3 : i dont see any message Old method Client: RegisterNetEvent(\"utility_libs:ILoveYou\") AddEventHandler(\"utility_libs:ILoveYou\", function() print(\"i love the utility_libs\") end) TriggerServerEvent(\"utility_libs:ILoveYou_S\") Server: RegisterServerEvent(\"utility_libs:ILoveYou_S\") AddEventHandler(\"utility_libs:ILoveYou_S\", function() TriggerClientEvent(\"utility_libs:ILoveYou\", -1) end)","title":"TriggerSyncedEvent (Client side)"},{"location":"server/RegisterServerEvent/","text":"RegisterServerEvent Register a server event that can be called by the client or the server, The event have the AddEventHandler already loaded Argument Data Type Nedeed Default Description EventName string - The name of the event Function function - The code executed when the event was triggered Auto-Prepare boolean true If setted to false dont auto-prepare the event for works with ESX (dont load the esx basic variable) Other difference It also auto-prepare the event to work with esx, so it auto load the xPlayer and _source variable Dont need to be called every frame Example RegisterServerEvent(\"utility_libs:ILoveYou\", function() print(GetPlayerName()..\" love the utility_libs, how to blame it?\") end) Old method RegisterServerEvent(\"utility_libs:ILoveYou\") AddEventHandler(\"utility_libs:ILoveYou\", function() local _source = source local xPlayer = ESX.GetPlayerFromId(_source) print(GetPlayerName(PlayerId())..\" love the utility_libs, how to blame it?\") end) Using old native although i dont recommend it, you can use the old native via old_RegisterServerEvent","title":"RegisterServerEvent"},{"location":"server/RegisterServerEvent/#registerserverevent","text":"Register a server event that can be called by the client or the server, The event have the AddEventHandler already loaded Argument Data Type Nedeed Default Description EventName string - The name of the event Function function - The code executed when the event was triggered Auto-Prepare boolean true If setted to false dont auto-prepare the event for works with ESX (dont load the esx basic variable) Other difference It also auto-prepare the event to work with esx, so it auto load the xPlayer and _source variable Dont need to be called every frame Example RegisterServerEvent(\"utility_libs:ILoveYou\", function() print(GetPlayerName()..\" love the utility_libs, how to blame it?\") end) Old method RegisterServerEvent(\"utility_libs:ILoveYou\") AddEventHandler(\"utility_libs:ILoveYou\", function() local _source = source local xPlayer = ESX.GetPlayerFromId(_source) print(GetPlayerName(PlayerId())..\" love the utility_libs, how to blame it?\") end) Using old native although i dont recommend it, you can use the old native via old_RegisterServerEvent","title":"RegisterServerEvent"},{"location":"server/ShowNotification/","text":"ShowNotification Draw a notification in the bottom-left Argument Data Type Nedeed Default Description Source number - The id to which the notification must be sent Message string - The message to show Dont need to be called every frame Example ShowNotification(source, \"Example\") Tip Supported Color Syntax Syntax Color ~r~ Red ~b~ Blue ~g~ Green ~y~ Yellow ~p~ Purple ~o~ Orange ~c~ Grey ~m~ Dark Grey ~u~ Black ~n~ New Line ~s~ White (default) ~w~ White ~h~ Bold \u2211 Rockstar Icon \u00a6 Rockstar Verified Icon ShowNotification(\"\u2211\u00f7\u00a6~r~ r ~b~ b ~g~ g ~y~ y ~p~ p ~c~ gr ~m~ d gr ~u~ bl ~o~ or ~s~ re ~n~ nl ~h~ Bold\")","title":"ShowNotification"},{"location":"server/ShowNotification/#shownotification","text":"Draw a notification in the bottom-left Argument Data Type Nedeed Default Description Source number - The id to which the notification must be sent Message string - The message to show Dont need to be called every frame Example ShowNotification(source, \"Example\") Tip","title":"ShowNotification"},{"location":"server/ShowNotification/#supported-color-syntax","text":"Syntax Color ~r~ Red ~b~ Blue ~g~ Green ~y~ Yellow ~p~ Purple ~o~ Orange ~c~ Grey ~m~ Dark Grey ~u~ Black ~n~ New Line ~s~ White (default) ~w~ White ~h~ Bold \u2211 Rockstar Icon \u00a6 Rockstar Verified Icon ShowNotification(\"\u2211\u00f7\u00a6~r~ r ~b~ b ~g~ g ~y~ y ~p~ p ~c~ gr ~m~ d gr ~u~ bl ~o~ or ~s~ re ~n~ nl ~h~ Bold\")","title":"Supported Color Syntax"},{"location":"server/StartESX/","text":"StartESX Start ESX with a line, dont need any return, all will be done automatically. It also automatically loads player data (like the job, that auto update) the ESX variables are made available Argument Data Type Nedeed Default Description esxEventName string esx:getSharedObject The esx event, if you have the replaced trigger Second Job string - If you have set up the second job in the utility configuration, you need to enter the name here for it to auto-update Dont need to be called every frame Example StartESX() Old method ESX = nil TriggerEvent('esx:getSharedObject', function(obj) ESX = obj end)","title":"StartESX"},{"location":"server/StartESX/#startesx","text":"Start ESX with a line, dont need any return, all will be done automatically. It also automatically loads player data (like the job, that auto update) the ESX variables are made available Argument Data Type Nedeed Default Description esxEventName string esx:getSharedObject The esx event, if you have the replaced trigger Second Job string - If you have set up the second job in the utility configuration, you need to enter the name here for it to auto-update Dont need to be called every frame Example StartESX() Old method ESX = nil TriggerEvent('esx:getSharedObject', function(obj) ESX = obj end)","title":"StartESX"},{"location":"server/string.multigsub/","text":"string.multigsub Replace multiple part of a string Argument Data Type Nedeed Default Description String string - The original texture Pattern table - The pattern to find and replace Replacement table - The replacemente table Dont need to be called every frame Example local string = \"i love me\" local new_string = string.multigsub(string, {\"love\", \"me\"}, {\"hate\", \"you\"}) print(new_string) Expected result i hate you","title":"string.multigsub"},{"location":"server/string.multigsub/#stringmultigsub","text":"Replace multiple part of a string Argument Data Type Nedeed Default Description String string - The original texture Pattern table - The pattern to find and replace Replacement table - The replacemente table Dont need to be called every frame Example local string = \"i love me\" local new_string = string.multigsub(string, {\"love\", \"me\"}, {\"hate\", \"you\"}) print(new_string) Expected result i hate you","title":"string.multigsub"},{"location":"server/table.clone/","text":"table.clone Clone a table Argument Data Type Nedeed Default Description Table table - The original table Returns Data Type Description table The cloned table Dont need to be called every frame Example local tabletoclone = { msg = \"Hello\" } local cloned_table = table.clone(tabletoclone) print(cloned_table.msg) Expected result Hello","title":"table.clone"},{"location":"server/table.clone/#tableclone","text":"Clone a table Argument Data Type Nedeed Default Description Table table - The original table Returns Data Type Description table The cloned table Dont need to be called every frame Example local tabletoclone = { msg = \"Hello\" } local cloned_table = table.clone(tabletoclone) print(cloned_table.msg) Expected result Hello","title":"table.clone"},{"location":"server/table.empty/","text":"table.empty Check if a table is empty Argument Data Type Nedeed Default Description Table table - The table Returns Data Type Description boolean True if is empty, false if have some data Dont need to be called every frame Example local emptytable = {} print(table.empty(emptytable)) Expected result true","title":"table.empty"},{"location":"server/table.empty/#tableempty","text":"Check if a table is empty Argument Data Type Nedeed Default Description Table table - The table Returns Data Type Description boolean True if is empty, false if have some data Dont need to be called every frame Example local emptytable = {} print(table.empty(emptytable)) Expected result true","title":"table.empty"},{"location":"server/table.fexist/","text":"table.fexist Check if the field exist in the table Argument Data Type Nedeed Default Description Table table - The table Field string - The field to check Returns Data Type Description boolean True if field exist, false if field dont exist Dont need to be called every frame Example local tabletocheck = { msg = \"Message\", another = 2 } print(table.fexist(tabletocheck, \"msg\")) print(table.fexist(tabletocheck, \"utility\")) Expected result true false","title":"table.fexist"},{"location":"server/table.fexist/#tablefexist","text":"Check if the field exist in the table Argument Data Type Nedeed Default Description Table table - The table Field string - The field to check Returns Data Type Description boolean True if field exist, false if field dont exist Dont need to be called every frame Example local tabletocheck = { msg = \"Message\", another = 2 } print(table.fexist(tabletocheck, \"msg\")) print(table.fexist(tabletocheck, \"utility\")) Expected result true false","title":"table.fexist"},{"location":"server/table.remove/","text":"table.remove Equal to the native table.remove of lua but accept string as position Argument Data Type Nedeed Default Description Table table - The table Position number/string - The position of the data to remove Dont need to be called every frame Example local tabletocheck = { [\"Hello\"] = 5, [\"Utility\"] = 1, } table.remove(tabletocheck, \"Hello\") print(json.encode(tabletocheck)) Expected result {\"Utility\":1}","title":"table.remove"},{"location":"server/table.remove/#tableremove","text":"Equal to the native table.remove of lua but accept string as position Argument Data Type Nedeed Default Description Table table - The table Position number/string - The position of the data to remove Dont need to be called every frame Example local tabletocheck = { [\"Hello\"] = 5, [\"Utility\"] = 1, } table.remove(tabletocheck, \"Hello\") print(json.encode(tabletocheck)) Expected result {\"Utility\":1}","title":"table.remove"}]}