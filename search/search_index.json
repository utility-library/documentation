{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome Welcome to the Utility Library documentation; here you can found everything about the utility. Why? Utility serves to reduce and simplify the long and tedious processes of creating a script. Take for example the initialization of ESX which translates to StartESX(). I developed this library for my own use, but only once I realized the great help and the great simplification of many steps, i decided to publish it to facilitate the work of newbies and veterans, hoping to receive suggestions and support to integrate new features that bring the library to be always updated and useful. Discord Implementation in other script In order to use the Utility you need to load it via the fxmanifest.lua Client The normal one is: '@utility_lib/client/native.lua', You can also use the minimized version via: '@utility_lib/client/native_min.lua', Server The normal one is: '@utility_lib/server/native.lua', You can also use the minimized version via: '@utility_lib/server/native_min.lua', Tip In the snippets there is the Utility : Credits Utility Library was created by XenoS.exe#2859 Thanks also to MarKz#3003 for giving me the chance to test and develop the library on her RP server To do Improving object and iObject Adding society implementation for server-side Cloning money and database thing for server-side Affiliated documentations Utility Weapons Utility Pause Menu","title":"Home"},{"location":"#welcome","text":"Welcome to the Utility Library documentation; here you can found everything about the utility.","title":"Welcome"},{"location":"#why","text":"Utility serves to reduce and simplify the long and tedious processes of creating a script. Take for example the initialization of ESX which translates to StartESX(). I developed this library for my own use, but only once I realized the great help and the great simplification of many steps, i decided to publish it to facilitate the work of newbies and veterans, hoping to receive suggestions and support to integrate new features that bring the library to be always updated and useful.","title":"Why?"},{"location":"#discord","text":"","title":"Discord"},{"location":"#implementation-in-other-script","text":"In order to use the Utility you need to load it via the fxmanifest.lua Client The normal one is: '@utility_lib/client/native.lua', You can also use the minimized version via: '@utility_lib/client/native_min.lua', Server The normal one is: '@utility_lib/server/native.lua', You can also use the minimized version via: '@utility_lib/server/native_min.lua', Tip In the snippets there is the Utility :","title":"Implementation in other script"},{"location":"#credits","text":"Utility Library was created by XenoS.exe#2859 Thanks also to MarKz#3003 for giving me the chance to test and develop the library on her RP server To do Improving object and iObject Adding society implementation for server-side Cloning money and database thing for server-side","title":"Credits"},{"location":"#affiliated-documentations","text":"Utility Weapons Utility Pause Menu","title":"Affiliated documentations"},{"location":"dev/","text":"Welcome Welcome to the Utility Library documentation, here you can found everything about the utility Method Description GET Fetch resource PUT Update resource DELETE Delete resource Submit Note Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Abstract Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Info Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Tip Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Success Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Question Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Warning Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Failure Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Danger Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Bug Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Example Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Quote Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Project layout mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Welcome"},{"location":"dev/#welcome","text":"Welcome to the Utility Library documentation, here you can found everything about the utility Method Description GET Fetch resource PUT Update resource DELETE Delete resource Submit Note Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Abstract Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Info Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Tip Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Success Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Question Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Warning Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Failure Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Danger Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Bug Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Example Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Quote Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.","title":"Welcome"},{"location":"dev/#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"client/advanced_script_creation/DropObjectFromHand/","text":"DropObjectFromHand (Client side) Drop the object that was taken via the TakeObjectOnHand Argument Data Type Needed Default Description Entity entity - The entity Delete boolean false Delete or no the entity when dropped Dont need to be called every frame Example DropObjectFromHand(entity, false)","title":"DropObjectFromHand"},{"location":"client/advanced_script_creation/DropObjectFromHand/#dropobjectfromhand-client-side","text":"Drop the object that was taken via the TakeObjectOnHand Argument Data Type Needed Default Description Entity entity - The entity Delete boolean false Delete or no the entity when dropped Dont need to be called every frame Example DropObjectFromHand(entity, false)","title":"DropObjectFromHand (Client side)"},{"location":"client/advanced_script_creation/EditDialogue/","text":"EditDialogue Edit an already created dialogue with a entity Argument Data Type Needed Default Description Entity string/number - The entity that handle the dialogue Returns Child Data Type Description Question function The function to set the questions Response function The function to set the responses LastQuestion function The function to set the last response by the entity Dont need to be called every frame Example EditDialogue(entity) .Question({ \"Utility is the revolution\" }) .Response( { [\"~g~[E]\"] = \"I totally agree with you\" } )","title":"EditDialogue"},{"location":"client/advanced_script_creation/EditDialogue/#editdialogue","text":"Edit an already created dialogue with a entity Argument Data Type Needed Default Description Entity string/number - The entity that handle the dialogue Returns Child Data Type Description Question function The function to set the questions Response function The function to set the responses LastQuestion function The function to set the last response by the entity Dont need to be called every frame Example EditDialogue(entity) .Question({ \"Utility is the revolution\" }) .Response( { [\"~g~[E]\"] = \"I totally agree with you\" } )","title":"EditDialogue"},{"location":"client/advanced_script_creation/GetDirectionFromVectors/","text":"GetDirectionFromVectors Obtains the direction from two vectors Argument Data Type Needed Default Description Vector 1 vector3 - The first vector Vector 2 vector3 - The second vector Dont need to be called every frame Example GetDirectionFromVectors(vec1, vec2)","title":"GetDirectionFromVectors"},{"location":"client/advanced_script_creation/GetDirectionFromVectors/#getdirectionfromvectors","text":"Obtains the direction from two vectors Argument Data Type Needed Default Description Vector 1 vector3 - The first vector Vector 2 vector3 - The second vector Dont need to be called every frame Example GetDirectionFromVectors(vec1, vec2)","title":"GetDirectionFromVectors"},{"location":"client/advanced_script_creation/GetOnHandObject/","text":"GetOnHandObject (Client side) Return the current on hand object, return 0 if no object Returns Data Type Description number The object handle or 0 Dont need to be called every frame Example GetOnHandObject()","title":"GetOnHandObject"},{"location":"client/advanced_script_creation/GetOnHandObject/#getonhandobject-client-side","text":"Return the current on hand object, return 0 if no object Returns Data Type Description number The object handle or 0 Dont need to be called every frame Example GetOnHandObject()","title":"GetOnHandObject (Client side)"},{"location":"client/advanced_script_creation/IsEntityOnDialogue/","text":"IsEntityOnDialogue Check if the entity is on a dialogue Argument Data Type Needed Default Description Entity string/number - The entity Returns Data Type Description boolean If on dialogue or no Dont need to be called every frame Example IsEntityOnDialogue(entity)","title":"IsEntityOnDialogue"},{"location":"client/advanced_script_creation/IsEntityOnDialogue/#isentityondialogue","text":"Check if the entity is on a dialogue Argument Data Type Needed Default Description Entity string/number - The entity Returns Data Type Description boolean If on dialogue or no Dont need to be called every frame Example IsEntityOnDialogue(entity)","title":"IsEntityOnDialogue"},{"location":"client/advanced_script_creation/RotationToDirection/","text":"RotationToDirection Obtains the direction from a rotation Argument Data Type Needed Default Description Rotation vector3 - The rotation Dont need to be called every frame Example RotationToDirection(rot)","title":"RotationToDirection"},{"location":"client/advanced_script_creation/RotationToDirection/#rotationtodirection","text":"Obtains the direction from a rotation Argument Data Type Needed Default Description Rotation vector3 - The rotation Dont need to be called every frame Example RotationToDirection(rot)","title":"RotationToDirection"},{"location":"client/advanced_script_creation/StartDialogue/","text":"StartDialogue Start a dialogue with a entity Argument Data Type Needed Default Description Entity entity - The entity with which you want to start a dialogue Distance number - The distance Function function - The function that is called when the player responds with the entity stopWhenTalking boolean - If true the ped will stop and talk to the player Returns Child Data Type Description Question function The function to set the questions Response function The function to set the responses LastQuestion function The function to set the last response by the entity Dont need to be called every frame Example","title":"StartDialogue"},{"location":"client/advanced_script_creation/StartDialogue/#startdialogue","text":"Start a dialogue with a entity Argument Data Type Needed Default Description Entity entity - The entity with which you want to start a dialogue Distance number - The distance Function function - The function that is called when the player responds with the entity stopWhenTalking boolean - If true the ped will stop and talk to the player Returns Child Data Type Description Question function The function to set the questions Response function The function to set the responses LastQuestion function The function to set the last response by the entity Dont need to be called every frame Example","title":"StartDialogue"},{"location":"client/advanced_script_creation/StopDialogue/","text":"StopDialogue Stop a dialogue Argument Data Type Needed Default Description Entity string/number - The entity that handle the dialogue Dont need to be called every frame Example StopDialogue(entity)","title":"StopDialogue"},{"location":"client/advanced_script_creation/StopDialogue/#stopdialogue","text":"Stop a dialogue Argument Data Type Needed Default Description Entity string/number - The entity that handle the dialogue Dont need to be called every frame Example StopDialogue(entity)","title":"StopDialogue"},{"location":"client/advanced_script_creation/TakeObjectOnHand/","text":"TakeObjectOnHand (Client side) Take the object defined as an argument Argument Data Type Needed Default Description Ped ped - The ped that take the object Entity entity/string/hash - The entity to take, you can pass the object handle or the model name/hash zOffset number 0.2 The z offset xPos number 0.2 The x position for the attachment yPos number 0.08 The y position for the attachment zPos number 0.2 The z position for the attachment xRot number -45.0 The x rotation for the attachment yRot number 290.0 The y rotation for the attachment zRot number 0.0 The z rotation for the attachment Dont need to be called every frame Example With the model name TakeObjectOnHand(PlayerPedId(), \"prop_roadcone02a\") With the entity handle TakeObjectOnHand(PlayerPedId(), obj)","title":"TakeObjectOnHand"},{"location":"client/advanced_script_creation/TakeObjectOnHand/#takeobjectonhand-client-side","text":"Take the object defined as an argument Argument Data Type Needed Default Description Ped ped - The ped that take the object Entity entity/string/hash - The entity to take, you can pass the object handle or the model name/hash zOffset number 0.2 The z offset xPos number 0.2 The x position for the attachment yPos number 0.08 The y position for the attachment zPos number 0.2 The z position for the attachment xRot number -45.0 The x rotation for the attachment yRot number 290.0 The y rotation for the attachment zRot number 0.0 The z rotation for the attachment Dont need to be called every frame Example With the model name TakeObjectOnHand(PlayerPedId(), \"prop_roadcone02a\") With the entity handle TakeObjectOnHand(PlayerPedId(), obj)","title":"TakeObjectOnHand (Client side)"},{"location":"client/advanced_script_creation/TranslateUniformRectilinearMotion/","text":"TranslateUniformRectilinearMotion Moves an entity in a uniform rectilinear motion up to three planes. synchronizes with NetworkTime, so it can be called from the server by a client and it will be synchronized, it's a bit \"advanced\" logic to explain in a few words Argument Data Type Needed Default Description obj object - destination number - duration number - Total duration in ms Dont need to be called every frame Example local offset = GetOffsetFromEntityInWorldCoords(obj, 1.0, 1.0, 1.0) TranslateUniformRectilinearMotion(obj, offset, 5000) -- move the entity +1 in every plane","title":"TranslateUniformRectilinearMotion"},{"location":"client/advanced_script_creation/TranslateUniformRectilinearMotion/#translateuniformrectilinearmotion","text":"Moves an entity in a uniform rectilinear motion up to three planes. synchronizes with NetworkTime, so it can be called from the server by a client and it will be synchronized, it's a bit \"advanced\" logic to explain in a few words Argument Data Type Needed Default Description obj object - destination number - duration number - Total duration in ms Dont need to be called every frame Example local offset = GetOffsetFromEntityInWorldCoords(obj, 1.0, 1.0, 1.0) TranslateUniformRectilinearMotion(obj, offset, 5000) -- move the entity +1 in every plane","title":"TranslateUniformRectilinearMotion"},{"location":"client/advanced_script_creation/TranslateZAnimated/","text":"TranslateZAnimated Animates the movement of an entity in the Z Argument Data Type Needed Default Description Object object - The object to which we need to apply the animation Z number - How much to move the Z (if negative the object will go down) Steps Duration number 10 How much every step durate Dont need to be called every frame Example TranslateZAnimated(ojb, -5)","title":"TranslateZAnimated"},{"location":"client/advanced_script_creation/TranslateZAnimated/#translatezanimated","text":"Animates the movement of an entity in the Z Argument Data Type Needed Default Description Object object - The object to which we need to apply the animation Z number - How much to move the Z (if negative the object will go down) Steps Duration number 10 How much every step durate Dont need to be called every frame Example TranslateZAnimated(ojb, -5)","title":"TranslateZAnimated"},{"location":"client/advanced_script_creation/heist/BreakDoorWithThermalCharge/","text":"BreakDoorWithThermalCharge Plays the thermal charge scene on the given door, automatically finds all the data it needs, and moves the player to the start coordinates Argument Data Type Needed Default Description door object - bagComponent number 45 Of note that the native replaces the bag, you will have to give him the player's initial bag duration number 3000 Total duration of lock stripping in ms Dont need to be called every frame Example local coords = GetEntityCoords(PlayerPedId()) local door = GetClosestObjectOfType(coords, 4.0, `hei_v_ilev_bk_gate_pris`) if door > 0 then BreakDoorWithThermalCharge(door) end","title":"BreakDoorWithThermalCharge"},{"location":"client/advanced_script_creation/heist/BreakDoorWithThermalCharge/#breakdoorwiththermalcharge","text":"Plays the thermal charge scene on the given door, automatically finds all the data it needs, and moves the player to the start coordinates Argument Data Type Needed Default Description door object - bagComponent number 45 Of note that the native replaces the bag, you will have to give him the player's initial bag duration number 3000 Total duration of lock stripping in ms Dont need to be called every frame Example local coords = GetEntityCoords(PlayerPedId()) local door = GetClosestObjectOfType(coords, 4.0, `hei_v_ilev_bk_gate_pris`) if door > 0 then BreakDoorWithThermalCharge(door) end","title":"BreakDoorWithThermalCharge"},{"location":"client/advanced_script_creation/heist/CreateTrolly/","text":"CreateTrolly Create a lootable trolly, everything will be handled automatically by the lib, you just have to give the money and define the type of trolly Argument Data Type Needed Default Description type string - The type of trolly: cash, gold, diamond coords vector3 - giveCash function - This function is executed each time a money bundle enters the bag notify string Press {E} to begin looting the trolly Marker notification to interact with the cart minSpeed number 1.0 minimum speed at which the player can loot (1.0 = normal speed) maxSpeed number 1.6 maximum speed at which the player can loot (1.0 = normal speed) Returns Data Type Description id The marker id obj The trolly object Dont need to be called every frame Example local coords = GetEntityCoords(PlayerPedId()) local tcoords = GetOffsetFromEntityInWorldCoords(PlayerPedId(), 0.0, 2.0, 0.0) CreateTrolly(\"cash\", tcoords, function() print(\"Pickuped cash\") end)","title":"CreateTrolly"},{"location":"client/advanced_script_creation/heist/CreateTrolly/#createtrolly","text":"Create a lootable trolly, everything will be handled automatically by the lib, you just have to give the money and define the type of trolly Argument Data Type Needed Default Description type string - The type of trolly: cash, gold, diamond coords vector3 - giveCash function - This function is executed each time a money bundle enters the bag notify string Press {E} to begin looting the trolly Marker notification to interact with the cart minSpeed number 1.0 minimum speed at which the player can loot (1.0 = normal speed) maxSpeed number 1.6 maximum speed at which the player can loot (1.0 = normal speed) Returns Data Type Description id The marker id obj The trolly object Dont need to be called every frame Example local coords = GetEntityCoords(PlayerPedId()) local tcoords = GetOffsetFromEntityInWorldCoords(PlayerPedId(), 0.0, 2.0, 0.0) CreateTrolly(\"cash\", tcoords, function() print(\"Pickuped cash\") end)","title":"CreateTrolly"},{"location":"client/advanced_script_creation/heist/guards/CreateGuard/","text":"CreateGuard Creates a guard that can be assigned a route Argument Data Type Needed Default Description model string/number - The ped model coords vector3 - heading number - difficulty string - Can be: easy, medium, hard, veryhard guardRoute route - The route id (created using CreateGuardRoute ) Returns Data Type Description ped The guard ped Dont need to be called every frame Example local guard = CreateGuard(\"mp_m_securoguard_01\", vector3(241.67, 222.49, 106.29), 0.0, \"easy\") GiveWeaponToPed(guard, `WEAPON_PISTOL`, 255, false, true)","title":"CreateGuard"},{"location":"client/advanced_script_creation/heist/guards/CreateGuard/#createguard","text":"Creates a guard that can be assigned a route Argument Data Type Needed Default Description model string/number - The ped model coords vector3 - heading number - difficulty string - Can be: easy, medium, hard, veryhard guardRoute route - The route id (created using CreateGuardRoute ) Returns Data Type Description ped The guard ped Dont need to be called every frame Example local guard = CreateGuard(\"mp_m_securoguard_01\", vector3(241.67, 222.49, 106.29), 0.0, \"easy\") GiveWeaponToPed(guard, `WEAPON_PISTOL`, 255, false, true)","title":"CreateGuard"},{"location":"client/advanced_script_creation/heist/guards/CreateGuardRoute/","text":"CreateGuardRoute Creates a guard route that can be assigned to a guard Argument Data Type Needed Default Description name string - A name to identify the guard route positions vector3/vector4 (array) - An array with the guard positions (vec4 its also with heading) manualRouteLink function - See the example Dont need to be called every frame Example -- The guard will take this route in circular order (A > B > C > A) CreateGuardRoute ( \"test\" , { vector3 ( 1.0 , 1.0 , 1.0 ), -- A vector3 ( 2.0 , 2.0 , 2.0 ), -- B vector3 ( 3.0 , 3.0 , 3.0 ), -- C }) Manual route linking local positions = { vector3(1.0, 1.0, 1.0), -- A vector3(2.0, 2.0, 2.0), -- B vector3(3.0, 3.0, 3.0), -- C } CreateGuardRoute(\"test\", positions, function(last, current) if current == #positions then -- if is the last route, link it to the first (circular) AddPatrolRouteLink(current, 1) -- close the circle (C > A) end if current > 1 then -- if we need to link it AddPatrolRouteLink(last, current) -- (A > B) (B > C) end end)","title":"CreateGuardRoute"},{"location":"client/advanced_script_creation/heist/guards/CreateGuardRoute/#createguardroute","text":"Creates a guard route that can be assigned to a guard Argument Data Type Needed Default Description name string - A name to identify the guard route positions vector3/vector4 (array) - An array with the guard positions (vec4 its also with heading) manualRouteLink function - See the example Dont need to be called every frame Example -- The guard will take this route in circular order (A > B > C > A) CreateGuardRoute ( \"test\" , { vector3 ( 1.0 , 1.0 , 1.0 ), -- A vector3 ( 2.0 , 2.0 , 2.0 ), -- B vector3 ( 3.0 , 3.0 , 3.0 ), -- C }) Manual route linking local positions = { vector3(1.0, 1.0, 1.0), -- A vector3(2.0, 2.0, 2.0), -- B vector3(3.0, 3.0, 3.0), -- C } CreateGuardRoute(\"test\", positions, function(last, current) if current == #positions then -- if is the last route, link it to the first (circular) AddPatrolRouteLink(current, 1) -- close the circle (C > A) end if current > 1 then -- if we need to link it AddPatrolRouteLink(last, current) -- (A > B) (B > C) end end)","title":"CreateGuardRoute"},{"location":"client/advanced_script_creation/heist/guards/SetGuardDifficulty/","text":"SetGuardDifficulty sets the difficulty of a guard Argument Data Type Needed Default Description guard number - The guard index difficulty string - Can be: easy, medium, hard, veryhard Dont need to be called every frame Example SetGuardDifficulty(guard, \"medium\")","title":"SetGuardDifficulty"},{"location":"client/advanced_script_creation/heist/guards/SetGuardDifficulty/#setguarddifficulty","text":"sets the difficulty of a guard Argument Data Type Needed Default Description guard number - The guard index difficulty string - Can be: easy, medium, hard, veryhard Dont need to be called every frame Example SetGuardDifficulty(guard, \"medium\")","title":"SetGuardDifficulty"},{"location":"client/advanced_script_creation/heist/guards/SetGuardRoute/","text":"SetGuardRoute sets the route of a guard Argument Data Type Needed Default Description guard number - The guard index route route - The route id/name Dont need to be called every frame Example SetGuardRoute(guard, \"test\")","title":"SetGuardRoute"},{"location":"client/advanced_script_creation/heist/guards/SetGuardRoute/#setguardroute","text":"sets the route of a guard Argument Data Type Needed Default Description guard number - The guard index route route - The route id/name Dont need to be called every frame Example SetGuardRoute(guard, \"test\")","title":"SetGuardRoute"},{"location":"client/advanced_script_creation/n3d/CreateNui3d/","text":"CreateNui3d Create a 3d nui in the game, simply render a html page in a DUI Argument Data Type Needed Default Description GFXName string - The name of your .gfx render Directory anything - The directory of the html file Dont need to be called every frame Returns Child Data Type Description N3dClass class The nui 3d class to interact with the n3d (click on N3dClass to see the class method) handle number The handle for interact with the n3d Example With class local n3d = CreateNui3d(\"utility_lib_1\", \"html/ui.html\") n3d:show(vector3(0.0, 0.0, 0.0)) With function local _, n3dHandle = CreateNui3d(\"utility_lib_1\", \"html/ui.html\") Show3dNui(n3dHandle, vector3(0.0, 0.0, 0.0)) My first project with the n3d I created a ammo hud with the n3d and its amazing, is like an object, but also like an nui, sincerely i love this thing! If dont start click me You can found this script here > https://forum.cfx.re/t/release-utility-ammohud/4291362","title":"CreateNui3d"},{"location":"client/advanced_script_creation/n3d/CreateNui3d/#createnui3d","text":"Create a 3d nui in the game, simply render a html page in a DUI Argument Data Type Needed Default Description GFXName string - The name of your .gfx render Directory anything - The directory of the html file Dont need to be called every frame Returns Child Data Type Description N3dClass class The nui 3d class to interact with the n3d (click on N3dClass to see the class method) handle number The handle for interact with the n3d Example With class local n3d = CreateNui3d(\"utility_lib_1\", \"html/ui.html\") n3d:show(vector3(0.0, 0.0, 0.0)) With function local _, n3dHandle = CreateNui3d(\"utility_lib_1\", \"html/ui.html\") Show3dNui(n3dHandle, vector3(0.0, 0.0, 0.0)) My first project with the n3d I created a ammo hud with the n3d and its amazing, is like an object, but also like an nui, sincerely i love this thing! If dont start click me You can found this script here > https://forum.cfx.re/t/release-utility-ammohud/4291362","title":"CreateNui3d"},{"location":"client/advanced_script_creation/n3d/GetScaleformsStatus/","text":"GetScaleformsStatus Returns the status of the default scaleforms/gfx renderer (if is taken from a n3d) Dont need to be called every frame Returns Child Data Type Description activeList table {name = scaleformName, data = n3d} inactiveList table {name = scaleformName, data = {}} Example local active, inactive = GetScaleformsStatus() print(inactive[1]) -- print the first scaleform/gfx available","title":"GetScaleformsStatus"},{"location":"client/advanced_script_creation/n3d/GetScaleformsStatus/#getscaleformsstatus","text":"Returns the status of the default scaleforms/gfx renderer (if is taken from a n3d) Dont need to be called every frame Returns Child Data Type Description activeList table {name = scaleformName, data = n3d} inactiveList table {name = scaleformName, data = {}} Example local active, inactive = GetScaleformsStatus() print(inactive[1]) -- print the first scaleform/gfx available","title":"GetScaleformsStatus"},{"location":"client/advanced_script_creation/n3d/IsScaleformTaken/","text":"IsScaleformTaken Check if a default scaleform renderer (utility_lib_n) is taken from an n3d Argument Data Type Needed Default Description GFXName/Scaleform name string - The name of your .gfx render Dont need to be called every frame Returns Child Data Type Description isTaken boolean Example local isTaken = IsScaleformTaken(\"utility_lib_9\")","title":"IsScaleformTaken"},{"location":"client/advanced_script_creation/n3d/IsScaleformTaken/#isscaleformtaken","text":"Check if a default scaleform renderer (utility_lib_n) is taken from an n3d Argument Data Type Needed Default Description GFXName/Scaleform name string - The name of your .gfx render Dont need to be called every frame Returns Child Data Type Description isTaken boolean Example local isTaken = IsScaleformTaken(\"utility_lib_9\")","title":"IsScaleformTaken"},{"location":"client/advanced_script_creation/n3d/N3dClass/","text":"N3d Class Methods This is all of the methods for the n3d class Class Description init Load the .gfx render to render a nui, width and height can be setted datas Return a table with all the datas of the N3d (options and default datas) destroy Delete the .gfx render and unload the scaleform, you need to do that if you don't need that n3d started Return true if the .gfx render has finished to load anymore show Shows the n3d hide Hides the n3d, but keeps the render active for later use visible Return true if the .gfx render and the n3d is visible scale You can change the scale of the whole rendering, it takes some knowledge in DUI rotation The heading of the render attach Attach the n3d to the entity, accept some offsets detach Detach the n3d from the entity object Return the dui render msg Send message to the dui render, can be use like the SendNuiMessage for update data on the n3d All classes arguments Read the argument! init Argument Data Type Default Description directory string - The directory of the html file width number 1920 The width of the render height number 1080 The height of the render Example n3d:init(\"html/ui.html\") datas Returns Data Type Description table All the datas of the N3d (options and default datas) Example n3d:datas() destroy Example n3d:destroy() started Returns Data Type Description boolean If is started or no Example n3d:started() show Argument Data Type Default Description coords vector3 - The coords where the n3d need to be show scale number 0.1 The scale of the n3d (0.1 - 1.0) Example n3d:show(vector3(0.0, 0.0, 0.0)) hide Example n3d:hide() visible Returns Data Type Description boolean If is visible or no Example n3d:visible() scale Argument Data Type Default Description scale vector3 - The new advanced scale of the DUI Example n3d:scale(vector3(1.0, 5.0, 3.0)) rotation Argument Data Type Default Description rotation number - The rotation (0.0 - 360.0) withplayer boolean false If true add the custom rotation to the rotation of the player for sync the player heading, otherwise dont rotate with the player Example n3d:rotation(90.0) attach Argument Data Type Default Description entity entity - The entity to attach offset vector3 vector3(0.0,0.0,0.0) The offset of the attachment (x, y, z) Example n3d:attach(entity) detach Argument Data Type Default Description At Coords boolean - If true, detach the n3d at the detachment coordinates, otherwise return to the last recorded coordinates Example n3d:detach() object Returns Data Type Description Dui Handle The rendering dui Example n3d:object() msg Argument Data Type Default Description Msg table - The table to send at the n3d Example n3d:msg({ show = true }) Listen the message The listening of the messages sent by the msg method can be handled through javascript in html, like the nui. Here below you can find an example window.addEventListener('message', function(event){ console.log(`Show is ` + event.data.show) })","title":"N3d Class Methods"},{"location":"client/advanced_script_creation/n3d/N3dClass/#n3d-class-methods","text":"This is all of the methods for the n3d class Class Description init Load the .gfx render to render a nui, width and height can be setted datas Return a table with all the datas of the N3d (options and default datas) destroy Delete the .gfx render and unload the scaleform, you need to do that if you don't need that n3d started Return true if the .gfx render has finished to load anymore show Shows the n3d hide Hides the n3d, but keeps the render active for later use visible Return true if the .gfx render and the n3d is visible scale You can change the scale of the whole rendering, it takes some knowledge in DUI rotation The heading of the render attach Attach the n3d to the entity, accept some offsets detach Detach the n3d from the entity object Return the dui render msg Send message to the dui render, can be use like the SendNuiMessage for update data on the n3d All classes arguments","title":"N3d Class Methods"},{"location":"client/advanced_script_creation/n3d/N3dClass/#read-the-argument","text":"init Argument Data Type Default Description directory string - The directory of the html file width number 1920 The width of the render height number 1080 The height of the render","title":"Read the argument!"},{"location":"client/advanced_script_creation/n3d/N3dClass/#example","text":"n3d:init(\"html/ui.html\") datas Returns Data Type Description table All the datas of the N3d (options and default datas)","title":"Example"},{"location":"client/advanced_script_creation/n3d/N3dClass/#example_1","text":"n3d:datas() destroy","title":"Example"},{"location":"client/advanced_script_creation/n3d/N3dClass/#example_2","text":"n3d:destroy() started Returns Data Type Description boolean If is started or no","title":"Example"},{"location":"client/advanced_script_creation/n3d/N3dClass/#example_3","text":"n3d:started() show Argument Data Type Default Description coords vector3 - The coords where the n3d need to be show scale number 0.1 The scale of the n3d (0.1 - 1.0)","title":"Example"},{"location":"client/advanced_script_creation/n3d/N3dClass/#example_4","text":"n3d:show(vector3(0.0, 0.0, 0.0)) hide","title":"Example"},{"location":"client/advanced_script_creation/n3d/N3dClass/#example_5","text":"n3d:hide() visible Returns Data Type Description boolean If is visible or no","title":"Example"},{"location":"client/advanced_script_creation/n3d/N3dClass/#example_6","text":"n3d:visible() scale Argument Data Type Default Description scale vector3 - The new advanced scale of the DUI","title":"Example"},{"location":"client/advanced_script_creation/n3d/N3dClass/#example_7","text":"n3d:scale(vector3(1.0, 5.0, 3.0)) rotation Argument Data Type Default Description rotation number - The rotation (0.0 - 360.0) withplayer boolean false If true add the custom rotation to the rotation of the player for sync the player heading, otherwise dont rotate with the player","title":"Example"},{"location":"client/advanced_script_creation/n3d/N3dClass/#example_8","text":"n3d:rotation(90.0) attach Argument Data Type Default Description entity entity - The entity to attach offset vector3 vector3(0.0,0.0,0.0) The offset of the attachment (x, y, z)","title":"Example"},{"location":"client/advanced_script_creation/n3d/N3dClass/#example_9","text":"n3d:attach(entity) detach Argument Data Type Default Description At Coords boolean - If true, detach the n3d at the detachment coordinates, otherwise return to the last recorded coordinates","title":"Example"},{"location":"client/advanced_script_creation/n3d/N3dClass/#example_10","text":"n3d:detach() object Returns Data Type Description Dui Handle The rendering dui","title":"Example"},{"location":"client/advanced_script_creation/n3d/N3dClass/#example_11","text":"n3d:object() msg Argument Data Type Default Description Msg table - The table to send at the n3d","title":"Example"},{"location":"client/advanced_script_creation/n3d/N3dClass/#example_12","text":"n3d:msg({ show = true }) Listen the message The listening of the messages sent by the msg method can be handled through javascript in html, like the nui. Here below you can find an example window.addEventListener('message', function(event){ console.log(`Show is ` + event.data.show) })","title":"Example"},{"location":"client/advanced_script_creation/scenes/AddEntityToScene/","text":"AddEntityToScene Add an entity or create an entity and add it to an existing scene Argument Data Type Needed Default Description entity string/object - The entity or the model scene scene - The scene netid dict string - The anim dict that the entity will play name string - The anim name that the entity will play speed number 4.0 speedMultiplier number -8.0 flag number 1 Dont need to be called every frame Example AddEntityToScene(\"prop_weed_01\", scene, \"somedict\", \"somename\")","title":"AddEntityToScene"},{"location":"client/advanced_script_creation/scenes/AddEntityToScene/#addentitytoscene","text":"Add an entity or create an entity and add it to an existing scene Argument Data Type Needed Default Description entity string/object - The entity or the model scene scene - The scene netid dict string - The anim dict that the entity will play name string - The anim name that the entity will play speed number 4.0 speedMultiplier number -8.0 flag number 1 Dont need to be called every frame Example AddEntityToScene(\"prop_weed_01\", scene, \"somedict\", \"somename\")","title":"AddEntityToScene"},{"location":"client/advanced_script_creation/scenes/AddPedToScene/","text":"AddPedToScene Add a ped or create a ped and add it to an existing scene Argument Data Type Needed Default Description ped string/ped - The ped or the model scene scene - The scene netid dict string - The anim dict that the ped will play name string - The anim name that the ped will play speed number 4.0 speedMultiplier number -8.0 flag number 1 Dont need to be called every frame Example AddPedToScene(\"a_f_m_beach_01\", scene, \"somedict\", \"somename\")","title":"AddPedToScene"},{"location":"client/advanced_script_creation/scenes/AddPedToScene/#addpedtoscene","text":"Add a ped or create a ped and add it to an existing scene Argument Data Type Needed Default Description ped string/ped - The ped or the model scene scene - The scene netid dict string - The anim dict that the ped will play name string - The anim name that the ped will play speed number 4.0 speedMultiplier number -8.0 flag number 1 Dont need to be called every frame Example AddPedToScene(\"a_f_m_beach_01\", scene, \"somedict\", \"somename\")","title":"AddPedToScene"},{"location":"client/advanced_script_creation/scenes/AddPlayerToScene/","text":"AddPlayerToScene Add a player to an existing scene Argument Data Type Needed Default Description player player - The player client id (PlayerId) scene scene - The scene netid dict string - The anim dict that the ped will play name string - The anim name that the ped will play speed number 4.0 speedMultiplier number -8.0 flag number 1 Dont need to be called every frame Example AddPlayerToScene(PlayerId(), scene, \"somedict\", \"somename\")","title":"AddPlayerToScene"},{"location":"client/advanced_script_creation/scenes/AddPlayerToScene/#addplayertoscene","text":"Add a player to an existing scene Argument Data Type Needed Default Description player player - The player client id (PlayerId) scene scene - The scene netid dict string - The anim dict that the ped will play name string - The anim name that the ped will play speed number 4.0 speedMultiplier number -8.0 flag number 1 Dont need to be called every frame Example AddPlayerToScene(PlayerId(), scene, \"somedict\", \"somename\")","title":"AddPlayerToScene"},{"location":"client/advanced_script_creation/scenes/CreateScene/","text":"CreateScene Create a networked scene Argument Data Type Needed Default Description coords vector3 - rot vector3 - holdLastFrame boolean false looped boolean false animSpeed number 1.3 Returns Data Type Description scene The scene netid Dont need to be called every frame Example local player = PlayerPedId() local coords = GetEntityCoords(player) local rot = GetEntityRotation(player) local scene = CreateScene(coords, rot)","title":"CreateScene"},{"location":"client/advanced_script_creation/scenes/CreateScene/#createscene","text":"Create a networked scene Argument Data Type Needed Default Description coords vector3 - rot vector3 - holdLastFrame boolean false looped boolean false animSpeed number 1.3 Returns Data Type Description scene The scene netid Dont need to be called every frame Example local player = PlayerPedId() local coords = GetEntityCoords(player) local rot = GetEntityRotation(player) local scene = CreateScene(coords, rot)","title":"CreateScene"},{"location":"client/advanced_script_creation/scenes/GetSceneEntity/","text":"GetSceneEntity Return the entity with a specific model (only entity created by the scene) Argument Data Type Needed Default Description scene scene - The scene netid model string/number - Returns Data Type Description obj The scene object Dont need to be called every frame Example local entity = GetSceneEntity(scene, \"prop_weed_01\")","title":"GetSceneEntity"},{"location":"client/advanced_script_creation/scenes/GetSceneEntity/#getsceneentity","text":"Return the entity with a specific model (only entity created by the scene) Argument Data Type Needed Default Description scene scene - The scene netid model string/number - Returns Data Type Description obj The scene object Dont need to be called every frame Example local entity = GetSceneEntity(scene, \"prop_weed_01\")","title":"GetSceneEntity"},{"location":"client/advanced_script_creation/scenes/GoNearInitialOffset/","text":"GoNearInitialOffset Moves the player to the starting offest (this should be perfect, its semi reversed from R* scripts) Argument Data Type Needed Default Description player player/ped - The player ped id (PlayerPedId) or the player client id (PlayerId) coords vector3 - Starting coords to calculate the animation offset rot vector3 - Starting rotation to calculate the animation offset dict string - The animation dict where to find the offset name string - The animation name where to find the offset Dont need to be called every frame Example local player = PlayerPedId() local coords = GetEntityCoords(player) local rot = GetEntityCoords(player) GoNearInitialOffset(player, coords, rot, \"somedict\", \"somename\")","title":"GoNearInitialOffset"},{"location":"client/advanced_script_creation/scenes/GoNearInitialOffset/#gonearinitialoffset","text":"Moves the player to the starting offest (this should be perfect, its semi reversed from R* scripts) Argument Data Type Needed Default Description player player/ped - The player ped id (PlayerPedId) or the player client id (PlayerId) coords vector3 - Starting coords to calculate the animation offset rot vector3 - Starting rotation to calculate the animation offset dict string - The animation dict where to find the offset name string - The animation name where to find the offset Dont need to be called every frame Example local player = PlayerPedId() local coords = GetEntityCoords(player) local rot = GetEntityCoords(player) GoNearInitialOffset(player, coords, rot, \"somedict\", \"somename\")","title":"GoNearInitialOffset"},{"location":"client/advanced_script_creation/scenes/StartScene/","text":"StartScene Start an existing scene Argument Data Type Needed Default Description scene string - The scene netid goNearInitialOffset boolean - If true it will automatically move every player near the initial animation offset Dont need to be called every frame Example StartScene(scene, true)","title":"StartScene"},{"location":"client/advanced_script_creation/scenes/StartScene/#startscene","text":"Start an existing scene Argument Data Type Needed Default Description scene string - The scene netid goNearInitialOffset boolean - If true it will automatically move every player near the initial animation offset Dont need to be called every frame Example StartScene(scene, true)","title":"StartScene"},{"location":"client/advanced_script_creation/scenes/StopScene/","text":"StopScene Stop an existing scene Argument Data Type Needed Default Description scene string - The scene netid Dont need to be called every frame Example StopScene(scene)","title":"StopScene"},{"location":"client/advanced_script_creation/scenes/StopScene/#stopscene","text":"Stop an existing scene Argument Data Type Needed Default Description scene string - The scene netid Dont need to be called every frame Example StopScene(scene)","title":"StopScene"},{"location":"client/camera/CreateCamera/","text":"CreateCamera Argument Data Type Needed Default Description Coords vector3 - The coords to create the camera Rotation vector3 - The rotation to create the camera Active boolean - If true switch on that cam Shake table - Shake or no Returns Data Type Description cam The camera handle Dont need to be called every frame Example local cam = CreateCamera(vector3(0.0, 0.0, 0.0), vector3(0.0, 0.0, 0.0), false, {type = \"ROAD_VIBRATION_SHAKE\", amount = 1.0})","title":"CreateCamera"},{"location":"client/camera/CreateCamera/#createcamera","text":"Argument Data Type Needed Default Description Coords vector3 - The coords to create the camera Rotation vector3 - The rotation to create the camera Active boolean - If true switch on that cam Shake table - Shake or no Returns Data Type Description cam The camera handle Dont need to be called every frame Example local cam = CreateCamera(vector3(0.0, 0.0, 0.0), vector3(0.0, 0.0, 0.0), false, {type = \"ROAD_VIBRATION_SHAKE\", amount = 1.0})","title":"CreateCamera"},{"location":"client/camera/SwitchBetweenCam/","text":"SwitchBetweenCam Argument Data Type Needed Default Description Old Cam cam - The old cam New Cam cam - The new cam Duration number 1500 The duration of the fade Dont need to be called every frame Example SwitchBetweenCam(old_cam, cam)","title":"SwitchBetweenCam"},{"location":"client/camera/SwitchBetweenCam/#switchbetweencam","text":"Argument Data Type Needed Default Description Old Cam cam - The old cam New Cam cam - The new cam Duration number 1500 The duration of the fade Dont need to be called every frame Example SwitchBetweenCam(old_cam, cam)","title":"SwitchBetweenCam"},{"location":"client/emitter/Info/","text":"Information What is an event emitter? An event emitter is function that listens a event and than fires a callback with a value.","title":"Info"},{"location":"client/emitter/Info/#information","text":"","title":"Information"},{"location":"client/emitter/Info/#what-is-an-event-emitter","text":"An event emitter is function that listens a event and than fires a callback with a value.","title":"What is an event emitter?"},{"location":"client/emitter/On/","text":"On Is the listener of the emitter Argument Data Type Needed Default Description Type string - The type of the emitter Callback function - The function that will be executed when the event has been triggered Fake Triggerable boolean false If that is true you can use the trigger Utility:FakeTrigger to trigger the emitter Emitter Types Name Description Parameters marker Triggered when the player interact with a marker id object Triggered when the player interact with a iobject id spotted Triggered when the player is spotted by a guard guard (entity) entered Triggered when the player enter a marker/object type, id leaved Triggered when the player leave a marker/object type, id Dont need to be called every frame Example On(\"marker\", function(id) if id == \"potato\" then print(\"I love potato\") elseif id == \"carrot\" then print(\"I hate carrot\") end end) Example of the fake trigger -- Type Id TriggerEvent(\"Utility:FakeTrigger\", \"marker\", \"potato\")","title":"On"},{"location":"client/emitter/On/#on","text":"Is the listener of the emitter Argument Data Type Needed Default Description Type string - The type of the emitter Callback function - The function that will be executed when the event has been triggered Fake Triggerable boolean false If that is true you can use the trigger Utility:FakeTrigger to trigger the emitter","title":"On"},{"location":"client/emitter/On/#emitter-types","text":"Name Description Parameters marker Triggered when the player interact with a marker id object Triggered when the player interact with a iobject id spotted Triggered when the player is spotted by a guard guard (entity) entered Triggered when the player enter a marker/object type, id leaved Triggered when the player leave a marker/object type, id Dont need to be called every frame Example On(\"marker\", function(id) if id == \"potato\" then print(\"I love potato\") elseif id == \"carrot\" then print(\"I hate carrot\") end end) Example of the fake trigger -- Type Id TriggerEvent(\"Utility:FakeTrigger\", \"marker\", \"potato\")","title":"Emitter Types"},{"location":"client/esx_integration/GetDataForJob/","text":"GetDataForJob Return the number of player that have that job and the workers list of that job Argument Data Type Needed Default Description Job string - The job name Returns Data Type Description number The number of player with that job table A table with all the id of the players with that job Dont need to be called every frame Example local count, workers = GetDataForJob(\"police\") -- count = 3 -- workers = {3, 5, 19}","title":"GetDataForJob"},{"location":"client/esx_integration/GetDataForJob/#getdataforjob","text":"Return the number of player that have that job and the workers list of that job Argument Data Type Needed Default Description Job string - The job name Returns Data Type Description number The number of player with that job table A table with all the id of the players with that job Dont need to be called every frame Example local count, workers = GetDataForJob(\"police\") -- count = 3 -- workers = {3, 5, 19}","title":"GetDataForJob"},{"location":"client/esx_integration/StartESX/","text":"StartESX Start ESX with a line, dont need any return, all will be done automatically. It also automatically loads player data (like the job, that auto update) the ESX and xPlayer variables are made available Argument Data Type Needed Default Description esxEventName string esx:getSharedObject The esx event, if you have the replaced trigger Second Job string - If you have set up the second job in the utility configuration, you need to enter the name here for it to auto-update Dont need to be called every frame Example StartESX() Old method ESX = nil local PlayerData = {} Citizen.CreateThread(function() while ESX == nil do TriggerEvent('esx:getSharedObject', function(obj) ESX = obj end) Citizen.Wait(0) end while ESX.GetPlayerData().job == nil do Citizen.Wait(1) end PlayerData = ESX.GetPlayerData() end) RegisterNetEvent('esx:setJob') AddEventHandler('esx:setJob', function(xPlayer) PlayerData = xPlayer end)","title":"StartESX"},{"location":"client/esx_integration/StartESX/#startesx","text":"Start ESX with a line, dont need any return, all will be done automatically. It also automatically loads player data (like the job, that auto update) the ESX and xPlayer variables are made available Argument Data Type Needed Default Description esxEventName string esx:getSharedObject The esx event, if you have the replaced trigger Second Job string - If you have set up the second job in the utility configuration, you need to enter the name here for it to auto-update Dont need to be called every frame Example StartESX() Old method ESX = nil local PlayerData = {} Citizen.CreateThread(function() while ESX == nil do TriggerEvent('esx:getSharedObject', function(obj) ESX = obj end) Citizen.Wait(0) end while ESX.GetPlayerData().job == nil do Citizen.Wait(1) end PlayerData = ESX.GetPlayerData() end) RegisterNetEvent('esx:setJob') AddEventHandler('esx:setJob', function(xPlayer) PlayerData = xPlayer end)","title":"StartESX"},{"location":"client/managing_data/GetFrom/","text":"GetFrom Allows you to get the data saved through the SetFor Argument Data Type Needed Default Description Id string/number - The id Property string/table - The data name Dont need to be called every frame Example Get a specific data saved for that property GetFrom(\"myid\", \"something\") Return \"Hello\" (string) Get all data saved for that property GetFrom(\"myid\") Return { something = \"Hello\", something2 = 5, something3 = {1, 2, 3} } (table)","title":"GetFrom"},{"location":"client/managing_data/GetFrom/#getfrom","text":"Allows you to get the data saved through the SetFor Argument Data Type Needed Default Description Id string/number - The id Property string/table - The data name Dont need to be called every frame Example Get a specific data saved for that property GetFrom(\"myid\", \"something\") Return \"Hello\" (string) Get all data saved for that property GetFrom(\"myid\") Return { something = \"Hello\", something2 = 5, something3 = {1, 2, 3} } (table)","title":"GetFrom"},{"location":"client/managing_data/SetFor/","text":"SetFor Allows you to manipulate a table already created by the utility without having to create it every time Argument Data Type Needed Default Description Id string/number - The id Property string/table - The data Value any - The value Synced boolean false Sync or the data for all script that load the utility Dont need to be called every frame Example Here you can set any, i told ANY, value to an marker, an iObject, an number or anything else Set data one by one SetFor(\"myid\", \"something\", \"Hello\") SetFor(\"myid\", \"something2\", 5) SetFor(\"myid\", \"something3\", {1, 2, 3}) Set data with a table SetFor(\"myid\", { something = \"Hello\" something2 = 5 something3 = {1, 2, 3} }) Synced data In the script \"utility_test\" if call the setfor with synced arguments to true SetFor(\"myid\", \"something\", \"Hello\", true) --or SetFor(\"myid\", { something = \"Hello\" }, true) Now i call the GetFrom from the resource \"utility_test2\" and the data will be synced GetFrom(\"myid\", \"something\") Return Hello (string)","title":"SetFor"},{"location":"client/managing_data/SetFor/#setfor","text":"Allows you to manipulate a table already created by the utility without having to create it every time Argument Data Type Needed Default Description Id string/number - The id Property string/table - The data Value any - The value Synced boolean false Sync or the data for all script that load the utility Dont need to be called every frame Example Here you can set any, i told ANY, value to an marker, an iObject, an number or anything else Set data one by one SetFor(\"myid\", \"something\", \"Hello\") SetFor(\"myid\", \"something2\", 5) SetFor(\"myid\", \"something3\", {1, 2, 3}) Set data with a table SetFor(\"myid\", { something = \"Hello\" something2 = 5 something3 = {1, 2, 3} }) Synced data In the script \"utility_test\" if call the setfor with synced arguments to true SetFor(\"myid\", \"something\", \"Hello\", true) --or SetFor(\"myid\", { something = \"Hello\" }, true) Now i call the GetFrom from the resource \"utility_test2\" and the data will be synced GetFrom(\"myid\", \"something\") Return Hello (string)","title":"SetFor"},{"location":"client/marker-object-blip/CreateBlip/","text":"CreateBlip Create a blip Argument Data Type Needed Default Description Name string/number - The name of the blip Coords vector3 - The coordinates to create the blip Sprite number - The sprite ID Colour number - The colour ID Scale number 1.0 The scale of the blip Dont need to be called every frame Example CreateBlip(\"My Blip\", vector3(0.0, 0.0, 0.0), 11, 2)","title":"CreateBlip"},{"location":"client/marker-object-blip/CreateBlip/#createblip","text":"Create a blip Argument Data Type Needed Default Description Name string/number - The name of the blip Coords vector3 - The coordinates to create the blip Sprite number - The sprite ID Colour number - The colour ID Scale number 1.0 The scale of the blip Dont need to be called every frame Example CreateBlip(\"My Blip\", vector3(0.0, 0.0, 0.0), 11, 2)","title":"CreateBlip"},{"location":"client/marker-object-blip/CreateJobBlip/","text":"CreateJobBlip Create a blip for a specific job. (auto-update) Argument Data Type Needed Default Description Name string/number - The name of the blip Coords vector3 - The coordinates to create the blip Job string - The job that can see the blip Sprite number - The sprite ID Colour number - The colour ID Scale number 1.0 The scale of the blip Dont need to be called every frame Example CreateJobBlip(\"My Blip\", vector3(0.0, 0.0, 0.0), \"police\", 11, 2)","title":"CreateJobBlip"},{"location":"client/marker-object-blip/CreateJobBlip/#createjobblip","text":"Create a blip for a specific job. (auto-update) Argument Data Type Needed Default Description Name string/number - The name of the blip Coords vector3 - The coordinates to create the blip Job string - The job that can see the blip Sprite number - The sprite ID Colour number - The colour ID Scale number 1.0 The scale of the blip Dont need to be called every frame Example CreateJobBlip(\"My Blip\", vector3(0.0, 0.0, 0.0), \"police\", 11, 2)","title":"CreateJobBlip"},{"location":"client/marker-object-blip/CreateMarker/","text":"CreateMarker Create a marker, can be an 3d text or real actual marker Argument Data Type Needed Default Description Id string/number - The id to manage the marker Coords vector3 - The coordinates to create the marker Render Distance number - The distance for the render Interaction Distance number - The distance for the interaction Options table/string - See the config arguments Dont need to be called every frame, if called every frame and the marker already exist, sleep the loop for 100 ms to prevent spam Example Creating marker CreateMarker(\"myid\", vector3(-239.89, -989.42, 28.29), 5.0, 5.0, {255, 0, 0}) Creating 3d text CreateMarker(\"myid\", vector3(-239.89, -989.42, 29.29), 5.0, 5.0, \"Press [~g~E~w~] to interact\") Creating a custom marker using a config local config = { rgb = {0, 0, 255}, type = 29, scale = vector3(2.0, 2.0, 3.0), } CreateMarker(\"myid\", vector3(-239.89, -989.42, 28.29), 5.0, 5.0, config) Config arguments Child Data Type Explanation job string/table The job that can see and interact with the marker rgb table The rgb data ( {255, 255, 255} ) text string The 3d text to be shown notify string The ButtonNotification data type number The marker type direction vector3 The direction of the marker rotation vector3 The rotation of the marker scale vector3 The scale of the marker alpha number The alpha of the marker, from 0 to 255 animation boolean Toggle the bouncing animation How to listen the interaction For listen the interaction you need to use the emitter Example -- This create the red marker CreateMarker(\"myid\", vector3(-239.89, -989.42, 28.29), 5.0, 5.0, {255, 0, 0}) -- Listening the interaction On(\"marker\", function(id) if id == \"myid\" then print(\"Hello\") end end) LSS : If i press E near the marker in the F8 console will be printed Hello Tip You can write {r} to generate a random id Example CreateMarker(\"marker_{r}\", vector3(-239.89, -989.42, 28.29), 5.0, 5.0, {255, 0, 0}) This will be converted to \"marker_51243\", the number is the random id generated To do Adding more customization","title":"CreateMarker"},{"location":"client/marker-object-blip/CreateMarker/#createmarker","text":"Create a marker, can be an 3d text or real actual marker Argument Data Type Needed Default Description Id string/number - The id to manage the marker Coords vector3 - The coordinates to create the marker Render Distance number - The distance for the render Interaction Distance number - The distance for the interaction Options table/string - See the config arguments Dont need to be called every frame, if called every frame and the marker already exist, sleep the loop for 100 ms to prevent spam Example Creating marker CreateMarker(\"myid\", vector3(-239.89, -989.42, 28.29), 5.0, 5.0, {255, 0, 0}) Creating 3d text CreateMarker(\"myid\", vector3(-239.89, -989.42, 29.29), 5.0, 5.0, \"Press [~g~E~w~] to interact\") Creating a custom marker using a config local config = { rgb = {0, 0, 255}, type = 29, scale = vector3(2.0, 2.0, 3.0), } CreateMarker(\"myid\", vector3(-239.89, -989.42, 28.29), 5.0, 5.0, config) Config arguments Child Data Type Explanation job string/table The job that can see and interact with the marker rgb table The rgb data ( {255, 255, 255} ) text string The 3d text to be shown notify string The ButtonNotification data type number The marker type direction vector3 The direction of the marker rotation vector3 The rotation of the marker scale vector3 The scale of the marker alpha number The alpha of the marker, from 0 to 255 animation boolean Toggle the bouncing animation How to listen the interaction For listen the interaction you need to use the emitter Example -- This create the red marker CreateMarker(\"myid\", vector3(-239.89, -989.42, 28.29), 5.0, 5.0, {255, 0, 0}) -- Listening the interaction On(\"marker\", function(id) if id == \"myid\" then print(\"Hello\") end end) LSS : If i press E near the marker in the F8 console will be printed Hello Tip You can write {r} to generate a random id Example CreateMarker(\"marker_{r}\", vector3(-239.89, -989.42, 28.29), 5.0, 5.0, {255, 0, 0}) This will be converted to \"marker_51243\", the number is the random id generated To do Adding more customization","title":"CreateMarker"},{"location":"client/marker-object-blip/CreateiObject/","text":"CreateiObject Create a iObject Argument Data Type Needed Default Description Id string/number - The id to manage the iObject Model string/number - The mode of the iObject Coords vector3 - The coordinates to create the iObject Heading number - The heading to create the iObject Interaction Distance number - The distance for the interaction Network boolean - If the iObject is networked or not Job string/table - The job to interact with the iObject Returns Data Type Description iObject The object handle vector3 The object coords Dont need to be called every frame, if called every frame and the iObject already exist, sleep the loop for 100 ms to prevent spam Example Creating iObject local iobj, coords = CreateiObject(\"myid\", \"prop_weed_01\", vector3(-239.89, -989.42, 28.29), 0.0, 5.0) How to listen the interaction For listen the interaction you need to use the emitter Example -- This create the iObject local iobj, coords = CreateiObject(\"myid\", \"prop_weed_01\", vector3(-239.89, -989.42, 28.29), 0.0, 5.0) -- Listening the interaction On(\"object\", function(id) if id == \"myid\" then print(\"Hello\") end end) LSS : If i press E near the iObject in the F8 console will be printed Hello","title":"CreateiObject"},{"location":"client/marker-object-blip/CreateiObject/#createiobject","text":"Create a iObject Argument Data Type Needed Default Description Id string/number - The id to manage the iObject Model string/number - The mode of the iObject Coords vector3 - The coordinates to create the iObject Heading number - The heading to create the iObject Interaction Distance number - The distance for the interaction Network boolean - If the iObject is networked or not Job string/table - The job to interact with the iObject Returns Data Type Description iObject The object handle vector3 The object coords Dont need to be called every frame, if called every frame and the iObject already exist, sleep the loop for 100 ms to prevent spam Example Creating iObject local iobj, coords = CreateiObject(\"myid\", \"prop_weed_01\", vector3(-239.89, -989.42, 28.29), 0.0, 5.0) How to listen the interaction For listen the interaction you need to use the emitter Example -- This create the iObject local iobj, coords = CreateiObject(\"myid\", \"prop_weed_01\", vector3(-239.89, -989.42, 28.29), 0.0, 5.0) -- Listening the interaction On(\"object\", function(id) if id == \"myid\" then print(\"Hello\") end end) LSS : If i press E near the iObject in the F8 console will be printed Hello","title":"CreateiObject"},{"location":"client/marker-object-blip/DeleteMarker/","text":"DeleteMarker Delete a marker by the id Argument Data Type Needed Default Description Id string/number - The id to delete the marker Dont need to be called every frame, if called every frame and the marker dont exist, sleep the loop for 100 ms to prevent spam Example DeleteMarker(\"marker\")","title":"DeleteMarker"},{"location":"client/marker-object-blip/DeleteMarker/#deletemarker","text":"Delete a marker by the id Argument Data Type Needed Default Description Id string/number - The id to delete the marker Dont need to be called every frame, if called every frame and the marker dont exist, sleep the loop for 100 ms to prevent spam Example DeleteMarker(\"marker\")","title":"DeleteMarker"},{"location":"client/marker-object-blip/DeleteiObject/","text":"DeleteiObject Delete a iObject Argument Data Type Needed Default Description Id string/number - The id of the iObject Delete boolean false If is true delete the actual entity, otherwise delete only the interaction Dont need to be called every frame, if called every frame and the iObject dont exist, sleep the loop for 100 ms to prevent spam Example DeleteiObject(\"myid\", true)","title":"DeleteiObject"},{"location":"client/marker-object-blip/DeleteiObject/#deleteiobject","text":"Delete a iObject Argument Data Type Needed Default Description Id string/number - The id of the iObject Delete boolean false If is true delete the actual entity, otherwise delete only the interaction Dont need to be called every frame, if called every frame and the iObject dont exist, sleep the loop for 100 ms to prevent spam Example DeleteiObject(\"myid\", true)","title":"DeleteiObject"},{"location":"client/marker-object-blip/DoesExist/","text":"DoesExist Check if a marker/object exist Argument Data Type Needed Default Description Type string - The type of the id: Marker, marker, m or Object, object, o Id string/number - The id Returns Data Type Description boolean True if exist, false if not exist Dont need to be called every frame Example DoesExist(\"marker\", \"myid\")","title":"DoesExist"},{"location":"client/marker-object-blip/DoesExist/#doesexist","text":"Check if a marker/object exist Argument Data Type Needed Default Description Type string - The type of the id: Marker, marker, m or Object, object, o Id string/number - The id Returns Data Type Description boolean True if exist, false if not exist Dont need to be called every frame Example DoesExist(\"marker\", \"myid\")","title":"DoesExist"},{"location":"client/marker-object-blip/GetCoordOf/","text":"GetCoordOf Get the coord from a id, return a vector3 Argument Data Type Needed Default Description Type string - The type of the id: Marker, marker, m or Object, object, o Id string/number - The id Returns Data Type Description vector3 The coords of the marker or of the iObject Dont need to be called every frame Example GetCoordOf(\"marker\", \"myid\")","title":"GetCoordOf"},{"location":"client/marker-object-blip/GetCoordOf/#getcoordof","text":"Get the coord from a id, return a vector3 Argument Data Type Needed Default Description Type string - The type of the id: Marker, marker, m or Object, object, o Id string/number - The id Returns Data Type Description vector3 The coords of the marker or of the iObject Dont need to be called every frame Example GetCoordOf(\"marker\", \"myid\")","title":"GetCoordOf"},{"location":"client/marker-object-blip/GetDistanceFrom/","text":"GetDistanceFrom Get distance from a id Argument Data Type Needed Default Description Type string - The type of the id: Marker, marker, m or Object, object, o Id string/number - The id Returns Data Type Description number The distance of the marker or of the iObject Dont need to be called every frame Example GetDistanceFrom(\"marker\", \"myid\")","title":"GetDistanceFrom"},{"location":"client/marker-object-blip/GetDistanceFrom/#getdistancefrom","text":"Get distance from a id Argument Data Type Needed Default Description Type string - The type of the id: Marker, marker, m or Object, object, o Id string/number - The id Returns Data Type Description number The distance of the marker or of the iObject Dont need to be called every frame Example GetDistanceFrom(\"marker\", \"myid\")","title":"GetDistanceFrom"},{"location":"client/marker-object-blip/RandomId/","text":"RandomId Generate a random id Argument Data Type Needed Default Description Length number 5 The length of the id Returns Data Type Description number The generated id Dont need to be called every frame Example RandomId()","title":"RandomId"},{"location":"client/marker-object-blip/RandomId/#randomid","text":"Generate a random id Argument Data Type Needed Default Description Length number 5 The length of the id Returns Data Type Description number The generated id Dont need to be called every frame Example RandomId()","title":"RandomId"},{"location":"client/marker-object-blip/Set3dText/","text":"Set3dText Set the text of a 3d text Argument Data Type Needed Default Description Id string/number - The id to update the marker Text string - The text to show Dont need to be called every frame Example Set3dText(\"marker\", \"Press [E] to interact\")","title":"Set3dText"},{"location":"client/marker-object-blip/Set3dText/#set3dtext","text":"Set the text of a 3d text Argument Data Type Needed Default Description Id string/number - The id to update the marker Text string - The text to show Dont need to be called every frame Example Set3dText(\"marker\", \"Press [E] to interact\")","title":"Set3dText"},{"location":"client/marker-object-blip/Set3dTextDrawRect/","text":"Set3dTextDrawRect Toggle if draw the black rectangle behind the text Argument Data Type Needed Default Description Id string/number - The id to update the marker Active boolean - Active or not the black rectangle Dont need to be called every frame Example Set3dTextDrawRect(\"marker\", true)","title":"Set3dTextDrawRect"},{"location":"client/marker-object-blip/Set3dTextDrawRect/#set3dtextdrawrect","text":"Toggle if draw the black rectangle behind the text Argument Data Type Needed Default Description Id string/number - The id to update the marker Active boolean - Active or not the black rectangle Dont need to be called every frame Example Set3dTextDrawRect(\"marker\", true)","title":"Set3dTextDrawRect"},{"location":"client/marker-object-blip/Set3dTextFont/","text":"Set3dTextFont Toggle if draw the black rectangle behind the text Argument Data Type Needed Default Description Id string/number - The id to update the marker Font boolean - The font id Dont need to be called every frame Example Set3dTextFont(\"marker\", 4)","title":"Set3dTextFont"},{"location":"client/marker-object-blip/Set3dTextFont/#set3dtextfont","text":"Toggle if draw the black rectangle behind the text Argument Data Type Needed Default Description Id string/number - The id to update the marker Font boolean - The font id Dont need to be called every frame Example Set3dTextFont(\"marker\", 4)","title":"Set3dTextFont"},{"location":"client/marker-object-blip/Set3dTextScale/","text":"Set3dTextScale Set the scale of a marker (only 3d text) Argument Data Type Needed Default Description Id string/number - The id to update the marker Scale number - The scale of the 3dtext Dont need to be called every frame Example Set3dTextScale(\"marker\", 0.35)","title":"Set3dTextScale"},{"location":"client/marker-object-blip/Set3dTextScale/#set3dtextscale","text":"Set the scale of a marker (only 3d text) Argument Data Type Needed Default Description Id string/number - The id to update the marker Scale number - The scale of the 3dtext Dont need to be called every frame Example Set3dTextScale(\"marker\", 0.35)","title":"Set3dTextScale"},{"location":"client/marker-object-blip/SetIdOf/","text":"SetIdOf Change the id of a marker/iObject by the id Argument Data Type Needed Default Description Type string - The type of the id: Marker, marker, m or Object, object, o Id string/number - The old id New id string/number - The new id Dont need to be called every frame Example SetIdOf(\"marker\", \"myid\", \"newid\")","title":"SetIdOf"},{"location":"client/marker-object-blip/SetIdOf/#setidof","text":"Change the id of a marker/iObject by the id Argument Data Type Needed Default Description Type string - The type of the id: Marker, marker, m or Object, object, o Id string/number - The old id New id string/number - The new id Dont need to be called every frame Example SetIdOf(\"marker\", \"myid\", \"newid\")","title":"SetIdOf"},{"location":"client/marker-object-blip/SetMarker/","text":"SetMarker Is the raw api that other api like SetMarker use. This is a more technic api that has not been thought to be used by anyone, if you don't have any idea of what this api can be, use the other already existing ones to set the data of the marker. Argument Data type Needed Default Description Id string/number - The id to update the marker Data Type string - The type of the data inserted Key string - The marker key to change Value any - The marker new value Dont need to be called every frame Example SetMarker(\"marker\", \"string\", \"text\", \"Press [E] to interact\") Keys | Key | Data Type | Explanation | |-----------|-----------|------------ | | render_distance | number | The distance to render the marker | | interaction_distance | number | The distance where the interaction is enabled | | coords | vector3 | The coords of the marker | | slice | number | The slice id of the marker | | rgb | table | The rgb color of the marker | | _type | number | The number of the marker (0 = 3d Text, 1 = Normal Marker) | | text | string | The text of the 3d text, if is a 3d text | | _direction | vector3 | The direction of the marker | | _rot | vector3 | The rotation of the marker | | _scale | vector3 | The scale of the marker | | alpha | number | The alpha of the marker (0-255) | | anim | boolean | Toggle the bouncing animation | | notify | string | The ButtonNotification text already converted to the GTA button style |","title":"SetMarker"},{"location":"client/marker-object-blip/SetMarker/#setmarker","text":"Is the raw api that other api like SetMarker use. This is a more technic api that has not been thought to be used by anyone, if you don't have any idea of what this api can be, use the other already existing ones to set the data of the marker. Argument Data type Needed Default Description Id string/number - The id to update the marker Data Type string - The type of the data inserted Key string - The marker key to change Value any - The marker new value Dont need to be called every frame Example SetMarker(\"marker\", \"string\", \"text\", \"Press [E] to interact\") Keys | Key | Data Type | Explanation | |-----------|-----------|------------ | | render_distance | number | The distance to render the marker | | interaction_distance | number | The distance where the interaction is enabled | | coords | vector3 | The coords of the marker | | slice | number | The slice id of the marker | | rgb | table | The rgb color of the marker | | _type | number | The number of the marker (0 = 3d Text, 1 = Normal Marker) | | text | string | The text of the 3d text, if is a 3d text | | _direction | vector3 | The direction of the marker | | _rot | vector3 | The rotation of the marker | | _scale | vector3 | The scale of the marker | | alpha | number | The alpha of the marker (0-255) | | anim | boolean | Toggle the bouncing animation | | notify | string | The ButtonNotification text already converted to the GTA button style |","title":"SetMarker"},{"location":"client/marker-object-blip/SetMarkerAlpha/","text":"SetMarkerAlpha Set the alpha of the marker by the id Argument Data type Needed Default Description Id string/number - The id to update the marker Alpha number - The marker alpha, from 0 to 255 Dont need to be called every frame Example SetMarkerAlpha(\"marker\", 255)","title":"SetMarkerAlpha"},{"location":"client/marker-object-blip/SetMarkerAlpha/#setmarkeralpha","text":"Set the alpha of the marker by the id Argument Data type Needed Default Description Id string/number - The id to update the marker Alpha number - The marker alpha, from 0 to 255 Dont need to be called every frame Example SetMarkerAlpha(\"marker\", 255)","title":"SetMarkerAlpha"},{"location":"client/marker-object-blip/SetMarkerAnimation/","text":"SetMarkerAnimation Set the bouncing animation of the marker by the id Argument Data type Needed Default Description Id string/number - The id to update the marker Animation boolean - Use or no the bouncing animation Dont need to be called every frame Example SetMarkerAnimation(\"marker\", true)","title":"SetMarkerAnimation"},{"location":"client/marker-object-blip/SetMarkerAnimation/#setmarkeranimation","text":"Set the bouncing animation of the marker by the id Argument Data type Needed Default Description Id string/number - The id to update the marker Animation boolean - Use or no the bouncing animation Dont need to be called every frame Example SetMarkerAnimation(\"marker\", true)","title":"SetMarkerAnimation"},{"location":"client/marker-object-blip/SetMarkerColor/","text":"SetMarkerColor Set the color of the marker by the id Argument Data type Needed Default Description Id string/number - The id to update the marker Color table - The marker color (RGB) Dont need to be called every frame Example SetMarkerColor(\"marker\", {255, 0, 255})","title":"SetMarkerColor"},{"location":"client/marker-object-blip/SetMarkerColor/#setmarkercolor","text":"Set the color of the marker by the id Argument Data type Needed Default Description Id string/number - The id to update the marker Color table - The marker color (RGB) Dont need to be called every frame Example SetMarkerColor(\"marker\", {255, 0, 255})","title":"SetMarkerColor"},{"location":"client/marker-object-blip/SetMarkerCoords/","text":"SetMarkerCoords Set the coords of the marker by the id Argument Data type Needed Default Description id string/number - The id to update the marker coords vector3 - The marker coords Dont need to be called every frame Example SetMarkerCoords(\"marker\", vector3(0.0, 0.0, 0.0))","title":"SetMarkerCoords"},{"location":"client/marker-object-blip/SetMarkerCoords/#setmarkercoords","text":"Set the coords of the marker by the id Argument Data type Needed Default Description id string/number - The id to update the marker coords vector3 - The marker coords Dont need to be called every frame Example SetMarkerCoords(\"marker\", vector3(0.0, 0.0, 0.0))","title":"SetMarkerCoords"},{"location":"client/marker-object-blip/SetMarkerDirection/","text":"SetMarkerDirection Set the direction of the marker by the id Argument Data type Needed Default Description Id string/number - The id to update the marker Direction vector3 - The marker direction Dont need to be called every frame Example SetMarkerDirection(\"marker\", vector3(0.0, 0.0, 0.0))","title":"SetMarkerDirection"},{"location":"client/marker-object-blip/SetMarkerDirection/#setmarkerdirection","text":"Set the direction of the marker by the id Argument Data type Needed Default Description Id string/number - The id to update the marker Direction vector3 - The marker direction Dont need to be called every frame Example SetMarkerDirection(\"marker\", vector3(0.0, 0.0, 0.0))","title":"SetMarkerDirection"},{"location":"client/marker-object-blip/SetMarkerDrawOnEntity/","text":"SetMarkerDrawOnEntity Set the DrawOnEntity of the marker by the id Argument Data type Needed Default Description Id string/number - The id to update the marker DrawOnEntity boolean - The marker DrawOnEntity Dont need to be called every frame Example SetMarkerDrawOnEntity(\"marker\", true)","title":"SetMarkerDrawOnEntity"},{"location":"client/marker-object-blip/SetMarkerDrawOnEntity/#setmarkerdrawonentity","text":"Set the DrawOnEntity of the marker by the id Argument Data type Needed Default Description Id string/number - The id to update the marker DrawOnEntity boolean - The marker DrawOnEntity Dont need to be called every frame Example SetMarkerDrawOnEntity(\"marker\", true)","title":"SetMarkerDrawOnEntity"},{"location":"client/marker-object-blip/SetMarkerInteractionDistance/","text":"SetMarkerInteractionDistance Set the interaction distance of the marker by the id Argument Data type Needed Default Description id string/number - The id to update the marker distance number - The new marker interaction distance Dont need to be called every frame Example SetMarkerInteractionDistance(\"marker\", 4.0)","title":"SetMarkerInteractionDistance"},{"location":"client/marker-object-blip/SetMarkerInteractionDistance/#setmarkerinteractiondistance","text":"Set the interaction distance of the marker by the id Argument Data type Needed Default Description id string/number - The id to update the marker distance number - The new marker interaction distance Dont need to be called every frame Example SetMarkerInteractionDistance(\"marker\", 4.0)","title":"SetMarkerInteractionDistance"},{"location":"client/marker-object-blip/SetMarkerNotify/","text":"SetMarkerNotify [New] Set the notify of the marker by the id Argument Data Type Needed Default Description Id string/number - The id to update the marker Notify string - The ButtonNotification data Dont need to be called every frame Example SetMarkerNotify(\"marker\", \"Press [E] to interact\")","title":"SetMarkerNotify"},{"location":"client/marker-object-blip/SetMarkerNotify/#setmarkernotify-new","text":"Set the notify of the marker by the id Argument Data Type Needed Default Description Id string/number - The id to update the marker Notify string - The ButtonNotification data Dont need to be called every frame Example SetMarkerNotify(\"marker\", \"Press [E] to interact\")","title":"SetMarkerNotify [New]"},{"location":"client/marker-object-blip/SetMarkerRenderDistance/","text":"SetMarkerRenderDistance Set the render distance of the marker by the id Argument Data type Needed Default Description id string/number - The id to update the marker distance number - The new marker render distance Dont need to be called every frame Example SetMarkerRenderDistance(\"marker\", 4.0)","title":"SetMarkerRenderDistance"},{"location":"client/marker-object-blip/SetMarkerRenderDistance/#setmarkerrenderdistance","text":"Set the render distance of the marker by the id Argument Data type Needed Default Description id string/number - The id to update the marker distance number - The new marker render distance Dont need to be called every frame Example SetMarkerRenderDistance(\"marker\", 4.0)","title":"SetMarkerRenderDistance"},{"location":"client/marker-object-blip/SetMarkerRotation/","text":"SetMarkerRotation Set the rotation of the marker by the id Argument Data type Needed Default Description Id string/number - The id to update the marker Rotation vector3 - The marker rotation Dont need to be called every frame Example SetMarkerRotation(\"marker\", vector3(0.0, 1.0, 0.0))","title":"SetMarkerRotation"},{"location":"client/marker-object-blip/SetMarkerRotation/#setmarkerrotation","text":"Set the rotation of the marker by the id Argument Data type Needed Default Description Id string/number - The id to update the marker Rotation vector3 - The marker rotation Dont need to be called every frame Example SetMarkerRotation(\"marker\", vector3(0.0, 1.0, 0.0))","title":"SetMarkerRotation"},{"location":"client/marker-object-blip/SetMarkerScale/","text":"SetMarkerScale Set the scale of the marker by the id Argument Data type Needed Default Description Id string/number - The id to update the marker Scale vector3 - The marker scale Dont need to be called every frame Example SetMarkerscale(\"marker\", vector3(1.0, 1.0, 1.5))","title":"SetMarkerScale"},{"location":"client/marker-object-blip/SetMarkerScale/#setmarkerscale","text":"Set the scale of the marker by the id Argument Data type Needed Default Description Id string/number - The id to update the marker Scale vector3 - The marker scale Dont need to be called every frame Example SetMarkerscale(\"marker\", vector3(1.0, 1.0, 1.5))","title":"SetMarkerScale"},{"location":"client/marker-object-blip/SetMarkerType/","text":"SetMarkerType Set the type of the marker by the id Argument Data Type Needed Default Description Id string/number - The id to update the marker Type number - The marker type Dont need to be called every frame Example SetMarkerType(\"marker\", 2)","title":"SetMarkerType"},{"location":"client/marker-object-blip/SetMarkerType/#setmarkertype","text":"Set the type of the marker by the id Argument Data Type Needed Default Description Id string/number - The id to update the marker Type number - The marker type Dont need to be called every frame Example SetMarkerType(\"marker\", 2)","title":"SetMarkerType"},{"location":"client/misc/AddPercentage/","text":"AddPercentage Add a percentage to a number. Argument Data Type Needed Default Description Number number - The number to add the percentage to Percentage number - The percentage to add Dont need to be called every frame Example local p = AddPercentage(10, 20) local p2 = AddPercentage(40, 20) print(p, p2) Expected result 12, 48","title":"AddPercentage"},{"location":"client/misc/AddPercentage/#addpercentage","text":"Add a percentage to a number. Argument Data Type Needed Default Description Number number - The number to add the percentage to Percentage number - The percentage to add Dont need to be called every frame Example local p = AddPercentage(10, 20) local p2 = AddPercentage(40, 20) print(p, p2) Expected result 12, 48","title":"AddPercentage"},{"location":"client/misc/DevMode/","text":"DevMode Only for development, turn on the log for anything done by the utility Argument Data Type Needed Default Description Status boolean - Turn on or off the devmode Time boolean true Turn on or off the time off the log Format string %s %s %s The formatting for the log Dont need to be called every frame Example The first is the action , the second the type , the third the id DevMode(true, true, \"%s | %s | %s\") ^ ^ ^ Action Type Id","title":"DevMode"},{"location":"client/misc/DevMode/#devmode","text":"Only for development, turn on the log for anything done by the utility Argument Data Type Needed Default Description Status boolean - Turn on or off the devmode Time boolean true Turn on or off the time off the log Format string %s %s %s The formatting for the log Dont need to be called every frame Example The first is the action , the second the type , the third the id DevMode(true, true, \"%s | %s | %s\") ^ ^ ^ Action Type Id","title":"DevMode"},{"location":"client/misc/FindInTable/","text":"FindInTable Return the index of the first row in the table that matches the given criteria. Argument Data Type Needed Default Description Table table - The table to search. Text string - The text to search for. Dont need to be called every frame Example local table = { \"Jhon\", \"Doe\", \"Smith\", \"Robinson\", \"Smith\", \"George\" } local i = FindInTable(table, \"Smith\") print(i) Expected result 3","title":"FindInTable"},{"location":"client/misc/FindInTable/#findintable","text":"Return the index of the first row in the table that matches the given criteria. Argument Data Type Needed Default Description Table table - The table to search. Text string - The text to search for. Dont need to be called every frame Example local table = { \"Jhon\", \"Doe\", \"Smith\", \"Robinson\", \"Smith\", \"George\" } local i = FindInTable(table, \"Smith\") print(i) Expected result 3","title":"FindInTable"},{"location":"client/misc/GetRandom/","text":"GetRandom Return a random value from the given table, use indexes to random the value. Argument Data Type Needed Default Description Table table - The table to get a random index from Dont need to be called every frame Example local table = { \"Jhon\", \"Doe\", \"Smith\", \"Robinson\", \"Smith\", \"George\" } local r = GetRandom(table) local r2 = GetRandom(table) print(r, r2) Expected result Smith, George","title":"GetRandom"},{"location":"client/misc/GetRandom/#getrandom","text":"Return a random value from the given table, use indexes to random the value. Argument Data Type Needed Default Description Table table - The table to get a random index from Dont need to be called every frame Example local table = { \"Jhon\", \"Doe\", \"Smith\", \"Robinson\", \"Smith\", \"George\" } local r = GetRandom(table) local r2 = GetRandom(table) print(r, r2) Expected result Smith, George","title":"GetRandom"},{"location":"client/misc/Probability/","text":"Probability Pick a random number between 0 and 100, and if is lower or equal than the given value, return true. Argument Data Type Needed Default Description Number number - The number to compare with Dont need to be called every frame Example local p = Probability(10) local p2 = Probability(100) print(p, p2) Expected result false, true","title":"Probability"},{"location":"client/misc/Probability/#probability","text":"Pick a random number between 0 and 100, and if is lower or equal than the given value, return true. Argument Data Type Needed Default Description Number number - The number to compare with Dont need to be called every frame Example local p = Probability(10) local p2 = Probability(100) print(p, p2) Expected result false, true","title":"Probability"},{"location":"client/misc/RemovePercentage/","text":"RemovePercentage Remove a percentage to a number. Argument Data Type Needed Default Description Number number - The number to remove the percentage to Percentage number - The percentage to remove Dont need to be called every frame Example local p = RemovePercentage(10, 20) local p2 = RemovePercentage(40, 20) print(p, p2) Expected result 8, 32","title":"RemovePercentage"},{"location":"client/misc/RemovePercentage/#removepercentage","text":"Remove a percentage to a number. Argument Data Type Needed Default Description Number number - The number to remove the percentage to Percentage number - The percentage to remove Dont need to be called every frame Example local p = RemovePercentage(10, 20) local p2 = RemovePercentage(40, 20) print(p, p2) Expected result 8, 32","title":"RemovePercentage"},{"location":"client/misc/ReplaceTexture/","text":"ReplaceTexture Replace a texture of a model Argument Data Type Needed Default Description Model string - The model to replace the texture Texture Name string - The original texture name, you can found it with OpenIV Url string - The url of the texture, can be a: .gif, .png, .jpg or a website (it can also be a nui) Width number - The width of the texture Height number - The height of the texture Dont need to be called every frame Example ReplaceTexture(\"v_corp_facebeanbagd\", \"km_xj_v_beanbag\", \"https://gifer.com/en/embed/SBMP\", 300, 300) If dont start click me How to find the texture name Download OpenIV and setup it (follow the video until 3:50) When you are on OpenIV turn on the Edit Mode (in the top-right) Click Yes Ok, search the model name of the prop you want to find the texture name, for the tutorial i use this prop: v_corp_facebeanbagd And click Search \"v_corp_facebeanbagd\" Wait that OpenIV search in the all directory the prop you have choose and then double click on the v_corp_facebeanbagd.ydr or v_corp_facebeanbagd.yft For me is a ydr Ok, now open the file, a model will show up Click on View embedded textures in the bottom-right Some texture will show up, you need to choose the right texture, for me there is only one So, we have finished, km_xj_v_beanbag is the textureName","title":"ReplaceTexture"},{"location":"client/misc/ReplaceTexture/#replacetexture","text":"Replace a texture of a model Argument Data Type Needed Default Description Model string - The model to replace the texture Texture Name string - The original texture name, you can found it with OpenIV Url string - The url of the texture, can be a: .gif, .png, .jpg or a website (it can also be a nui) Width number - The width of the texture Height number - The height of the texture Dont need to be called every frame Example ReplaceTexture(\"v_corp_facebeanbagd\", \"km_xj_v_beanbag\", \"https://gifer.com/en/embed/SBMP\", 300, 300) If dont start click me How to find the texture name Download OpenIV and setup it (follow the video until 3:50) When you are on OpenIV turn on the Edit Mode (in the top-right) Click Yes Ok, search the model name of the prop you want to find the texture name, for the tutorial i use this prop: v_corp_facebeanbagd And click Search \"v_corp_facebeanbagd\" Wait that OpenIV search in the all directory the prop you have choose and then double click on the v_corp_facebeanbagd.ydr or v_corp_facebeanbagd.yft For me is a ydr Ok, now open the file, a model will show up Click on View embedded textures in the bottom-right Some texture will show up, you need to choose the right texture, for me there is only one So, we have finished, km_xj_v_beanbag is the textureName","title":"ReplaceTexture"},{"location":"client/misc/StopCurrentTaskAndWatchPlayer/","text":"StopCurrentTaskAndWatchPlayer Argument Data Type Needed Default Description ped Ped - duration number 2000 Dont need to be called every frame Example StopCurrentTaskAndWatchPlayer(ped, 2000)","title":"StopCurrentTaskAndWatchPlayer"},{"location":"client/misc/StopCurrentTaskAndWatchPlayer/#stopcurrenttaskandwatchplayer","text":"Argument Data Type Needed Default Description ped Ped - duration number 2000 Dont need to be called every frame Example StopCurrentTaskAndWatchPlayer(ped, 2000)","title":"StopCurrentTaskAndWatchPlayer"},{"location":"client/misc/_g/","text":"_g Register a global variable on all scripts that load the Utility Argument Data Type Needed Default Description Name string - The name of the variable Value any - The value of the variable Warning Any other resource where you want to use the global variable must be started BEFORE the resource where you define the variable Dont need to be called every frame Example I create the global on the script this_is_a_test _g(\"utility\", \"Utility is amazing!\") If I go in another script that has the Utility loaded and printout the variable utility it will write \"Utility is amazing!\". Expected result Resource \"this_is_a_test\": print(utility) Return Utility is amazing! Resource \"this_is_another_resource\": print(utility) Return Utility is amazing!","title":"_g"},{"location":"client/misc/_g/#_g","text":"Register a global variable on all scripts that load the Utility Argument Data Type Needed Default Description Name string - The name of the variable Value any - The value of the variable Warning Any other resource where you want to use the global variable must be started BEFORE the resource where you define the variable Dont need to be called every frame Example I create the global on the script this_is_a_test _g(\"utility\", \"Utility is amazing!\") If I go in another script that has the Utility loaded and printout the variable utility it will write \"Utility is amazing!\". Expected result Resource \"this_is_a_test\": print(utility) Return Utility is amazing! Resource \"this_is_another_resource\": print(utility) Return Utility is amazing!","title":"_g"},{"location":"client/misc/apairs/","text":"apairs Pairs a table in alphabetical order Argument Data Type Needed Default Description Table table - The table Dont need to be called every frame Example local table = { [\"Z\"] = true, [\"B\"] = true, [\"A\"] = true, [\"G\"] = true } for k,v in apairs(table) do print(k,v) end Expected result A true B true G true Z true","title":"apairs"},{"location":"client/misc/apairs/#apairs","text":"Pairs a table in alphabetical order Argument Data Type Needed Default Description Table table - The table Dont need to be called every frame Example local table = { [\"Z\"] = true, [\"B\"] = true, [\"A\"] = true, [\"G\"] = true } for k,v in apairs(table) do print(k,v) end Expected result A true B true G true Z true","title":"apairs"},{"location":"client/misc/printd/","text":"printd Dump a table, simply convert a table to a string Argument Data Type Needed Default Description Table table - The table to dump Advanced boolean false Is true return an advanced dump of the table Returns Data Type Description string The dumped table Dont need to be called every frame Example local _table = { message = \"Hello\" } printd(_table) Expected Results { \"message\": \"Hello\" }","title":"printd"},{"location":"client/misc/printd/#printd","text":"Dump a table, simply convert a table to a string Argument Data Type Needed Default Description Table table - The table to dump Advanced boolean false Is true return an advanced dump of the table Returns Data Type Description string The dumped table Dont need to be called every frame Example local _table = { message = \"Hello\" } printd(_table) Expected Results { \"message\": \"Hello\" }","title":"printd"},{"location":"client/misc/string.multigsub/","text":"string.multigsub Replace multiple part of a string Argument Data Type Needed Default Description String string - The original texture Pattern table - The pattern to find and replace Replacement table - The replacemente table Dont need to be called every frame Example local string = \"i love me\" local new_string = string.multigsub(string, {\"love\", \"me\"}, {\"hate\", \"you\"}) print(new_string) Expected result i hate you","title":"string.multigsub"},{"location":"client/misc/string.multigsub/#stringmultigsub","text":"Replace multiple part of a string Argument Data Type Needed Default Description String string - The original texture Pattern table - The pattern to find and replace Replacement table - The replacemente table Dont need to be called every frame Example local string = \"i love me\" local new_string = string.multigsub(string, {\"love\", \"me\"}, {\"hate\", \"you\"}) print(new_string) Expected result i hate you","title":"string.multigsub"},{"location":"client/misc/table.clone/","text":"table.clone Clone a table Argument Data Type Needed Default Description Table table - The original table Returns Data Type Description table The cloned table Dont need to be called every frame Example local tabletoclone = { msg = \"Hello\" } local cloned_table = table.clone(tabletoclone) print(cloned_table.msg) Expected result Hello","title":"table.clone"},{"location":"client/misc/table.clone/#tableclone","text":"Clone a table Argument Data Type Needed Default Description Table table - The original table Returns Data Type Description table The cloned table Dont need to be called every frame Example local tabletoclone = { msg = \"Hello\" } local cloned_table = table.clone(tabletoclone) print(cloned_table.msg) Expected result Hello","title":"table.clone"},{"location":"client/misc/table.empty/","text":"table.empty Check if a table is empty Argument Data Type Needed Default Description Table table - The table Returns Data Type Description boolean True if is empty, false if have some data Dont need to be called every frame Example local emptytable = {} print(table.empty(emptytable)) Expected result true","title":"table.empty"},{"location":"client/misc/table.empty/#tableempty","text":"Check if a table is empty Argument Data Type Needed Default Description Table table - The table Returns Data Type Description boolean True if is empty, false if have some data Dont need to be called every frame Example local emptytable = {} print(table.empty(emptytable)) Expected result true","title":"table.empty"},{"location":"client/misc/table.fexist/","text":"table.fexist Check if the field exist in the table Argument Data Type Needed Default Description Table table - The table Field string - The field to check Returns Data Type Description boolean True if field exist, false if field dont exist Dont need to be called every frame Example local tabletocheck = { msg = \"Message\", another = 2 } print(table.fexist(tabletocheck, \"msg\")) print(table.fexist(tabletocheck, \"utility\")) Expected result true false","title":"table.fexist"},{"location":"client/misc/table.fexist/#tablefexist","text":"Check if the field exist in the table Argument Data Type Needed Default Description Table table - The table Field string - The field to check Returns Data Type Description boolean True if field exist, false if field dont exist Dont need to be called every frame Example local tabletocheck = { msg = \"Message\", another = 2 } print(table.fexist(tabletocheck, \"msg\")) print(table.fexist(tabletocheck, \"utility\")) Expected result true false","title":"table.fexist"},{"location":"client/misc/table.remove/","text":"table.remove Equal to the native table.remove of lua but accept string as position Argument Data Type Needed Default Description Table table - The table Position number/string - The position of the data to remove Dont need to be called every frame Example local tabletocheck = { [\"Hello\"] = 5, [\"Utility\"] = 1, } table.remove(tabletocheck, \"Hello\") print(json.encode(tabletocheck)) Expected result {\"Utility\":1}","title":"table.remove"},{"location":"client/misc/table.remove/#tableremove","text":"Equal to the native table.remove of lua but accept string as position Argument Data Type Needed Default Description Table table - The table Position number/string - The position of the data to remove Dont need to be called every frame Example local tabletocheck = { [\"Hello\"] = 5, [\"Utility\"] = 1, } table.remove(tabletocheck, \"Hello\") print(json.encode(tabletocheck)) Expected result {\"Utility\":1}","title":"table.remove"},{"location":"client/native/ButtonFor/","text":"ButtonFor Shows a notification in the top-right that support the displaying button inputs for a defined ms Argument Data Type Needed Default Description Message string - The message to show Duration number - The duration time in milliseconds ( ms ) Dont need to be called every frame Example ButtonFor(\"Example\", 5000) Tip If you write {any_letter} the content will be converted to button inputs Example : ButtonFor(\"A simple message {X} {D}\", 5000) Result :","title":"ButtonFor"},{"location":"client/native/ButtonFor/#buttonfor","text":"Shows a notification in the top-right that support the displaying button inputs for a defined ms Argument Data Type Needed Default Description Message string - The message to show Duration number - The duration time in milliseconds ( ms ) Dont need to be called every frame Example ButtonFor(\"Example\", 5000) Tip If you write {any_letter} the content will be converted to button inputs Example : ButtonFor(\"A simple message {X} {D}\", 5000) Result :","title":"ButtonFor"},{"location":"client/native/ButtonNotification/","text":"ButtonNotification Shows a notification in the top-right that support the displaying button inputs Argument Data Type Needed Default Description Message string - The message to show Need to be called every frame Example ButtonNotification(\"Example\") Tip If you write {any_letter} the content will be converted to button inputs Example : ButtonNotification(\"A simple message {X} {D}\") Result :","title":"ButtonNotification"},{"location":"client/native/ButtonNotification/#buttonnotification","text":"Shows a notification in the top-right that support the displaying button inputs Argument Data Type Needed Default Description Message string - The message to show Need to be called every frame Example ButtonNotification(\"Example\") Tip If you write {any_letter} the content will be converted to button inputs Example : ButtonNotification(\"A simple message {X} {D}\") Result :","title":"ButtonNotification"},{"location":"client/native/CreateLoop/","text":"CreateLoop Create a while true do loop, in the callback send the loopId Argument Data Type Needed Default Description Function function - The code executed in the loop Time number 5 The time express in millisenconds ( ms ) of the execution Returns Data Type Description loopId The id of the loop Dont need to be called every frame Example Without time : CreateLoop(function(loopId) print(\"Test\") end) With time : CreateLoop(function() print(\"Test\") end, 500) Old method Citizen.CreateThread(function() while true do print(\"Test\") Citizen.Wait(5) end end) Old problem In the old method if you forgot to insert Citizen.Wait(ms) the ALL server will crash I created it because i was sick of the thousands of times my server crashed, Thanks FiveM \ud83d\ude09","title":"CreateLoop"},{"location":"client/native/CreateLoop/#createloop","text":"Create a while true do loop, in the callback send the loopId Argument Data Type Needed Default Description Function function - The code executed in the loop Time number 5 The time express in millisenconds ( ms ) of the execution Returns Data Type Description loopId The id of the loop Dont need to be called every frame Example Without time : CreateLoop(function(loopId) print(\"Test\") end) With time : CreateLoop(function() print(\"Test\") end, 500) Old method Citizen.CreateThread(function() while true do print(\"Test\") Citizen.Wait(5) end end) Old problem In the old method if you forgot to insert Citizen.Wait(ms) the ALL server will crash I created it because i was sick of the thousands of times my server crashed, Thanks FiveM \ud83d\ude09","title":"CreateLoop"},{"location":"client/native/CreateMissionText/","text":"CreateMissionText Create a mission text at the bottom of the screen Argument Data Type Needed Default Description msg string - The message to show duration number \u221e The duration of the mission text (ms) Returns Data Type Description table A table with the delete method to clear the mission text Dont need to be called every frame Example local mission = CreateMissionText(\"Hello World\", 5000) Citizen.Wait(5000) mission:delete()","title":"CreateMissionText"},{"location":"client/native/CreateMissionText/#createmissiontext","text":"Create a mission text at the bottom of the screen Argument Data Type Needed Default Description msg string - The message to show duration number \u221e The duration of the mission text (ms) Returns Data Type Description table A table with the delete method to clear the mission text Dont need to be called every frame Example local mission = CreateMissionText(\"Hello World\", 5000) Citizen.Wait(5000) mission:delete()","title":"CreateMissionText"},{"location":"client/native/CreateObject/","text":"CreateObject Is equal to the standard one but dont need to load or request the model Argument Data Type Needed Default Description ModelHash string/hash - The hash or the name of the model Coords vector3/number - The coordinates to create the object (can be an vector3 or you can insert it one by one) IsNetwork boolean false Whether to create a network object for the object. If false, the object exists only locally. Returns Data Type Description object A script handle (fwScriptGuid index) for the object, or 0 if the object failed to be created netId The net id Dont need to be called every frame Example Using vector3 local obj, netId = CreateObject(\"prop_weed_01\", vector3(0.0, 0.0, 0.0), true, false, false) Using separated coords local obj, netId = CreateObject(\"prop_weed_01\", 0.0, 0.0, 0.0, true, false, false) Old method local modelHash = GetHashKey(\"prop_weed_01\") if not HasModelLoaded(modelHash) then RequestModel(modelHash); while not HasModelLoaded(modelHash) do Citizen.Wait(1); end end local obj = CreateObject(modelHash, 0.0, 0.0, 0.0, true, false, false) SetModelAsNoLongerNeeded(modelHash) Using old native although i dont recommend it, you can use the old native via old_CreateObject","title":"CreateObject"},{"location":"client/native/CreateObject/#createobject","text":"Is equal to the standard one but dont need to load or request the model Argument Data Type Needed Default Description ModelHash string/hash - The hash or the name of the model Coords vector3/number - The coordinates to create the object (can be an vector3 or you can insert it one by one) IsNetwork boolean false Whether to create a network object for the object. If false, the object exists only locally. Returns Data Type Description object A script handle (fwScriptGuid index) for the object, or 0 if the object failed to be created netId The net id Dont need to be called every frame Example Using vector3 local obj, netId = CreateObject(\"prop_weed_01\", vector3(0.0, 0.0, 0.0), true, false, false) Using separated coords local obj, netId = CreateObject(\"prop_weed_01\", 0.0, 0.0, 0.0, true, false, false) Old method local modelHash = GetHashKey(\"prop_weed_01\") if not HasModelLoaded(modelHash) then RequestModel(modelHash); while not HasModelLoaded(modelHash) do Citizen.Wait(1); end end local obj = CreateObject(modelHash, 0.0, 0.0, 0.0, true, false, false) SetModelAsNoLongerNeeded(modelHash) Using old native although i dont recommend it, you can use the old native via old_CreateObject","title":"CreateObject"},{"location":"client/native/CreatePed/","text":"CreatePed Is equal to the standard one but dont need to load or request the model Argument Data Type Needed Default Description Model string/number - The hash or the name of the model Coords vector3/number - The coordinates to create the ped (can be an vector3 or you can insert it one by one) Heading number - The heading to create the ped IsNetwork boolean - Whether to create a network object for the ped. If false, the ped exists only locally. Returns Data Type Description ped A script handle (fwScriptGuid index) for the ped, or 0 if the ped failed to be created. netId The net id Dont need to be called every frame Example Using vector3 local ped, netId = CreatePed(\"cs_dale\", vector3(0.0, 0.0, 0.0), 5.0, true) Using separated coords local ped, netId = CreatePed(\"cs_dale\", 0.0, 0.0, 0.0, 5.0, true) Old method local modelHash = GetHashKey(\"cs_dale\") if not HasModelLoaded(modelHash) then RequestModel(modelHash); while not HasModelLoaded(modelHash) do Citizen.Wait(1); end end local ped = CreatePed(0, modelHash, 0.0, 0.0, 0.0, 5.0, true, false) SetModelAsNoLongerNeeded(modelHash) Using old native although i dont recommend it, you can use the old native via old_CreatePed","title":"CreatePed"},{"location":"client/native/CreatePed/#createped","text":"Is equal to the standard one but dont need to load or request the model Argument Data Type Needed Default Description Model string/number - The hash or the name of the model Coords vector3/number - The coordinates to create the ped (can be an vector3 or you can insert it one by one) Heading number - The heading to create the ped IsNetwork boolean - Whether to create a network object for the ped. If false, the ped exists only locally. Returns Data Type Description ped A script handle (fwScriptGuid index) for the ped, or 0 if the ped failed to be created. netId The net id Dont need to be called every frame Example Using vector3 local ped, netId = CreatePed(\"cs_dale\", vector3(0.0, 0.0, 0.0), 5.0, true) Using separated coords local ped, netId = CreatePed(\"cs_dale\", 0.0, 0.0, 0.0, 5.0, true) Old method local modelHash = GetHashKey(\"cs_dale\") if not HasModelLoaded(modelHash) then RequestModel(modelHash); while not HasModelLoaded(modelHash) do Citizen.Wait(1); end end local ped = CreatePed(0, modelHash, 0.0, 0.0, 0.0, 5.0, true, false) SetModelAsNoLongerNeeded(modelHash) Using old native although i dont recommend it, you can use the old native via old_CreatePed","title":"CreatePed"},{"location":"client/native/CreateVehicle/","text":"CreateVehicle Is equal to the standard one but dont need to load or request the model Argument Data Type Needed Default Description ModelHash string/hash - The hash or the name of the model Coords vector3/number - The coordinates to create the object (can be an vector3 or you can insert it one by one) Heading number 0 Heading to face towards, in degrees. IsNetwork boolean false Whether to create a network object for the vehicle. If false, the vehicle exists only locally. NetMissionEntity boolean false Whether to register the vehicle as pinned to the script host in the R* network model. Returns Data Type Description vehicle A script handle (fwScriptGuid index) for the vehicle, or 0 if the vehicle failed to be created netId The net id Dont need to be called every frame Example Using vector3 local veh, netId = CreateVehicle(\"t20\", vector3(0.0, 0.0, 0.0), 0.0, true, false) Using separated coords local veh, netId = CreateVehicle(\"t20\", 0.0, 0.0, 0.0, 0.0, true, false) Old method local modelHash = GetHashKey(\"t20\") if not HasModelLoaded(modelHash) then RequestModel(modelHash); while not HasModelLoaded(modelHash) do Citizen.Wait(1); end end local obj = CreateVehicle(modelHash, 0.0, 0.0, 0.0, 0.0, true, false) SetModelAsNoLongerNeeded(modelHash) Using old native although i dont recommend it, you can use the old native via old_CreateVehicle","title":"CreateVehicle"},{"location":"client/native/CreateVehicle/#createvehicle","text":"Is equal to the standard one but dont need to load or request the model Argument Data Type Needed Default Description ModelHash string/hash - The hash or the name of the model Coords vector3/number - The coordinates to create the object (can be an vector3 or you can insert it one by one) Heading number 0 Heading to face towards, in degrees. IsNetwork boolean false Whether to create a network object for the vehicle. If false, the vehicle exists only locally. NetMissionEntity boolean false Whether to register the vehicle as pinned to the script host in the R* network model. Returns Data Type Description vehicle A script handle (fwScriptGuid index) for the vehicle, or 0 if the vehicle failed to be created netId The net id Dont need to be called every frame Example Using vector3 local veh, netId = CreateVehicle(\"t20\", vector3(0.0, 0.0, 0.0), 0.0, true, false) Using separated coords local veh, netId = CreateVehicle(\"t20\", 0.0, 0.0, 0.0, 0.0, true, false) Old method local modelHash = GetHashKey(\"t20\") if not HasModelLoaded(modelHash) then RequestModel(modelHash); while not HasModelLoaded(modelHash) do Citizen.Wait(1); end end local obj = CreateVehicle(modelHash, 0.0, 0.0, 0.0, 0.0, true, false) SetModelAsNoLongerNeeded(modelHash) Using old native although i dont recommend it, you can use the old native via old_CreateVehicle","title":"CreateVehicle"},{"location":"client/native/DebugCoords/","text":"DebugCoords Create a \"V\" at the provided coords for debugging the coords position Argument Data Type Needed Default Description coords vector3 - Dont need to be called every frame Example DebugCoords(vector3(0.0, 0.0, 0.0))","title":"DebugCoords"},{"location":"client/native/DebugCoords/#debugcoords","text":"Create a \"V\" at the provided coords for debugging the coords position Argument Data Type Needed Default Description coords vector3 - Dont need to be called every frame Example DebugCoords(vector3(0.0, 0.0, 0.0))","title":"DebugCoords"},{"location":"client/native/DeleteEntity/","text":"DeleteEntity Is equal to the standard one but request the control of the entity to prevent any deletion bug and set the entity as mission entity, can accept a netId Argument Data Type Needed Default Description Entity entity/netId - The entity handle or the netId of the entity IsNetwork boolean false If is true the entity arguments become the netId and find and delete the entity by the netId Dont need to be called every frame Example Using entity handle DeleteEntity(entity, false) Using netId DeleteEntity(netId, true) Old method SetEntityAsMissionEntity(entity) DeleteEntity(entity) Old method problem Sometimes the entity is not deleted because the entity was created by another client Using old native although i dont recommend it, you can use the old native via old_DeleteEntity","title":"DeleteEntity"},{"location":"client/native/DeleteEntity/#deleteentity","text":"Is equal to the standard one but request the control of the entity to prevent any deletion bug and set the entity as mission entity, can accept a netId Argument Data Type Needed Default Description Entity entity/netId - The entity handle or the netId of the entity IsNetwork boolean false If is true the entity arguments become the netId and find and delete the entity by the netId Dont need to be called every frame Example Using entity handle DeleteEntity(entity, false) Using netId DeleteEntity(netId, true) Old method SetEntityAsMissionEntity(entity) DeleteEntity(entity) Old method problem Sometimes the entity is not deleted because the entity was created by another client Using old native although i dont recommend it, you can use the old native via old_DeleteEntity","title":"DeleteEntity"},{"location":"client/native/DisableControlAction/","text":"DisableControlAction Disable a key, need to be called every tick Argument Data Type Needed Default Description Control string - The key to disable Disable boolean true Disable or no Need to be called every frame Example CreateLoop(function() DisableControlAction(\"K\") end) Old method Citizen.CreateThread(function() while true do DisableControlAction(0, 311, true) Citizen.Wait(1) end end) Using old native although i dont recommend it, you can use the old native via old_DisableControlAction","title":"DisableControlAction"},{"location":"client/native/DisableControlAction/#disablecontrolaction","text":"Disable a key, need to be called every tick Argument Data Type Needed Default Description Control string - The key to disable Disable boolean true Disable or no Need to be called every frame Example CreateLoop(function() DisableControlAction(\"K\") end) Old method Citizen.CreateThread(function() while true do DisableControlAction(0, 311, true) Citizen.Wait(1) end end) Using old native although i dont recommend it, you can use the old native via old_DisableControlAction","title":"DisableControlAction"},{"location":"client/native/DisableControlForSeconds/","text":"DisableControlForSeconds Disable a key for inserted seconds Argument Data Type Needed Default Description Control string - The key to disable Seconds number - The seconds which the button is disabled Dont need to be called every frame Example DisableControlForSeconds(\"K\", 5)","title":"DisableControlForSeconds"},{"location":"client/native/DisableControlForSeconds/#disablecontrolforseconds","text":"Disable a key for inserted seconds Argument Data Type Needed Default Description Control string - The key to disable Seconds number - The seconds which the button is disabled Dont need to be called every frame Example DisableControlForSeconds(\"K\", 5)","title":"DisableControlForSeconds"},{"location":"client/native/DrawText3Ds/","text":"DrawText3Ds Draws 3D text on the specified coords Argument Data Type Needed Default Description Coords vector3 - The coordinates to create the 3d text Text string - The text Scale number 0.35 The scale of the text Font number 4 The font, on the fivem native reference there isnt a list Need to be called every frame Example DrawText3Ds(vector3(0.0, 0.0, 0.0), \"Test\")","title":"DrawText3Ds"},{"location":"client/native/DrawText3Ds/#drawtext3ds","text":"Draws 3D text on the specified coords Argument Data Type Needed Default Description Coords vector3 - The coordinates to create the 3d text Text string - The text Scale number 0.35 The scale of the text Font number 4 The font, on the fivem native reference there isnt a list Need to be called every frame Example DrawText3Ds(vector3(0.0, 0.0, 0.0), \"Test\")","title":"DrawText3Ds"},{"location":"client/native/GenerateRandomCoords/","text":"GenerateRandomCoords Generate a random coords around the base coords Argument Data Type Needed Default Description Coords vector3 - The coords Radius number - The limit for the generation Heading boolean false If true return a second parameter that is a random generated heading Returns Data Type Description vector3 The generated coords heading The generated heading (only if the heading argument is true) Dont need to be called every frame Example local coords = GenerateRandomCoords(GetEntityCoords(PlayerPedId()), 10.0)","title":"GenerateRandomCoords"},{"location":"client/native/GenerateRandomCoords/#generaterandomcoords","text":"Generate a random coords around the base coords Argument Data Type Needed Default Description Coords vector3 - The coords Radius number - The limit for the generation Heading boolean false If true return a second parameter that is a random generated heading Returns Data Type Description vector3 The generated coords heading The generated heading (only if the heading argument is true) Dont need to be called every frame Example local coords = GenerateRandomCoords(GetEntityCoords(PlayerPedId()), 10.0)","title":"GenerateRandomCoords"},{"location":"client/native/GetEntitySize/","text":"GetEntitySize Return the entity size in a vector3 Argument Data Type Needed Default Description entity entity `` Returns Data Type Description vector3 The generated coords Dont need to be called every frame Example GetEntitySize(entity)","title":"GetEntitySize"},{"location":"client/native/GetEntitySize/#getentitysize","text":"Return the entity size in a vector3 Argument Data Type Needed Default Description entity entity `` Returns Data Type Description vector3 The generated coords Dont need to be called every frame Example GetEntitySize(entity)","title":"GetEntitySize"},{"location":"client/native/GetEntitySurfaceMaterial/","text":"GetEntitySurfaceMaterial Returns the hash of the ground material where the entity is in Argument Data Type Needed Default Description Entity entity - The entity being checked Returns Data Type Description materialHash The material hash of the ground Dont need to be called every frame Example local materialHash = GetEntitySurfaceMaterial(entity)","title":"GetEntitySurfaceMaterial"},{"location":"client/native/GetEntitySurfaceMaterial/#getentitysurfacematerial","text":"Returns the hash of the ground material where the entity is in Argument Data Type Needed Default Description Entity entity - The entity being checked Returns Data Type Description materialHash The material hash of the ground Dont need to be called every frame Example local materialHash = GetEntitySurfaceMaterial(entity)","title":"GetEntitySurfaceMaterial"},{"location":"client/native/GetLoadoutOfPed/","text":"GetLoadoutOfPed Returns the ped weapons loadout Argument Data Type Needed Default Description Ped ped `` The ped Returns Child Data Type Description name string Weapon model name hash number Hash of the weapon ammo number Weapon ammo Dont need to be called every frame Example local loadout = GetLoadoutOfPed(ped) for i=1, #loadout do print(\"Weapon model = \"..loadout[i].name..\" Weapon Hash = \"..loadout[i].hash..\" Weapon Ammo = \"..loadout[i].ammo) end","title":"GetLoadoutOfPed"},{"location":"client/native/GetLoadoutOfPed/#getloadoutofped","text":"Returns the ped weapons loadout Argument Data Type Needed Default Description Ped ped `` The ped Returns Child Data Type Description name string Weapon model name hash number Hash of the weapon ammo number Weapon ammo Dont need to be called every frame Example local loadout = GetLoadoutOfPed(ped) for i=1, #loadout do print(\"Weapon model = \"..loadout[i].name..\" Weapon Hash = \"..loadout[i].hash..\" Weapon Ammo = \"..loadout[i].ammo) end","title":"GetLoadoutOfPed"},{"location":"client/native/GetPlayerName/","text":"GetPlayerName Returns the player name, the difference between the standrard one and this one is that this one have the playerid has default Argument Data Type Needed Default Description PlayerId number playerId The local player id Returns Data Type Description name The player name Dont need to be called every frame Example GetPlayerName()","title":"GetPlayerName"},{"location":"client/native/GetPlayerName/#getplayername","text":"Returns the player name, the difference between the standrard one and this one is that this one have the playerid has default Argument Data Type Needed Default Description PlayerId number playerId The local player id Returns Data Type Description name The player name Dont need to be called every frame Example GetPlayerName()","title":"GetPlayerName"},{"location":"client/native/GetWorldClosestPed/","text":"GetWorldClosestPed Return the closest ped, and the all founded ped Argument Data Type Needed Default Description Radius number - The radius that being checked Returns Data Type Description ped The closest ped table All the founded ped Dont need to be called every frame Example local closest, allped = GetWorldClosestPed(5.0)","title":"GetWorldClosestPed"},{"location":"client/native/GetWorldClosestPed/#getworldclosestped","text":"Return the closest ped, and the all founded ped Argument Data Type Needed Default Description Radius number - The radius that being checked Returns Data Type Description ped The closest ped table All the founded ped Dont need to be called every frame Example local closest, allped = GetWorldClosestPed(5.0)","title":"GetWorldClosestPed"},{"location":"client/native/GetWorldClosestPlayer/","text":"GetWorldClosestPlayer Return the closest player, and the all founded player Argument Data Type Needed Default Description Radius number - The radius that being checked Returns Data Type Description player The closest player table All the founded player Dont need to be called every frame Example local closest, allplayer = GetWorldClosestPlayer(5.0)","title":"GetWorldClosestPlayer"},{"location":"client/native/GetWorldClosestPlayer/#getworldclosestplayer","text":"Return the closest player, and the all founded player Argument Data Type Needed Default Description Radius number - The radius that being checked Returns Data Type Description player The closest player table All the founded player Dont need to be called every frame Example local closest, allplayer = GetWorldClosestPlayer(5.0)","title":"GetWorldClosestPlayer"},{"location":"client/native/InTimeRange/","text":"InTimeRange Checks if the time is within the specified time range (24h format) Argument Data Type Needed Default Description Min number - The minimum time in hour Max number - The maximum time in hour UTC number false If this is true, use the UTC time to check the range Dont need to be called every frame Example if InTimeRange(15, 18) then print(\"It's between 15 and 18\") end","title":"InTimeRange"},{"location":"client/native/InTimeRange/#intimerange","text":"Checks if the time is within the specified time range (24h format) Argument Data Type Needed Default Description Min number - The minimum time in hour Max number - The maximum time in hour UTC number false If this is true, use the UTC time to check the range Dont need to be called every frame Example if InTimeRange(15, 18) then print(\"It's between 15 and 18\") end","title":"InTimeRange"},{"location":"client/native/IsControlJustPressed/","text":"IsControlJustPressed Call a callback when a specific key was pressed, more optimized and easy to use Argument Data Type Needed Default Description Control string - The key, this is the list Callback function - The code executed when the key was pressed Description string - Dont need to be called every frame Example Run at 0 ms IsControlJustPressed(\"K\", function() print(\"Hello\") end) Curiosity \"Control\" parameter also accepts I/O from MOUSE_BUTTON or PAD_DIGITALBUTTON mappers, it will automatically figure out if it is keyboard, mouse or pad Old method Run at 2/3 ms Citizen.CreateThread(function() while true do if IsControlJustPressed(0, 311) then print(\"Hello\") end Citizen.Wait(1) end end) IsControlJustPressed although i dont recommend it, you can use the old native via old_IsControlJustPressed","title":"IsControlJustPressed"},{"location":"client/native/IsControlJustPressed/#iscontroljustpressed","text":"Call a callback when a specific key was pressed, more optimized and easy to use Argument Data Type Needed Default Description Control string - The key, this is the list Callback function - The code executed when the key was pressed Description string - Dont need to be called every frame Example Run at 0 ms IsControlJustPressed(\"K\", function() print(\"Hello\") end) Curiosity \"Control\" parameter also accepts I/O from MOUSE_BUTTON or PAD_DIGITALBUTTON mappers, it will automatically figure out if it is keyboard, mouse or pad Old method Run at 2/3 ms Citizen.CreateThread(function() while true do if IsControlJustPressed(0, 311) then print(\"Hello\") end Citizen.Wait(1) end end) IsControlJustPressed although i dont recommend it, you can use the old native via old_IsControlJustPressed","title":"IsControlJustPressed"},{"location":"client/native/IsEntityFrozen/","text":"IsEntityFrozen Check if the entity is frozen Argument Data Type Needed Default Description entity entity - The entity to check Returns Data Type Description boolean True if is frozen, false if not Dont need to be called every frame Example IsEntityFrozen(entity)","title":"IsEntityFrozen"},{"location":"client/native/IsEntityFrozen/#isentityfrozen","text":"Check if the entity is frozen Argument Data Type Needed Default Description entity entity - The entity to check Returns Data Type Description boolean True if is frozen, false if not Dont need to be called every frame Example IsEntityFrozen(entity)","title":"IsEntityFrozen"},{"location":"client/native/IsInRadius/","text":"IsInRadius Check the distance between 2 coords and return true if is in radius Argument Data Type Needed Default Description Coords 1 vector3 - The first coords (probably the entity coords) Coords 2 vector3 - The second coords Radius number - The distance to check Sphere boolean false Draw a sphere of the radius Returns Data Type Description boolean If is in the radius Dont need to be called every frame Example local near = IsInRadius(GetEntityCoords(entity), vector3(0.0,0.0,0.0), 10.0)","title":"IsInRadius"},{"location":"client/native/IsInRadius/#isinradius","text":"Check the distance between 2 coords and return true if is in radius Argument Data Type Needed Default Description Coords 1 vector3 - The first coords (probably the entity coords) Coords 2 vector3 - The second coords Radius number - The distance to check Sphere boolean false Draw a sphere of the radius Returns Data Type Description boolean If is in the radius Dont need to be called every frame Example local near = IsInRadius(GetEntityCoords(entity), vector3(0.0,0.0,0.0), 10.0)","title":"IsInRadius"},{"location":"client/native/IsNearCoords/","text":"IsNearCoords Check if the player is near to a coords Argument Data Type Needed Default Description Coords vector3 - The coords Radius number - The distance to check Sphere boolean false Draw a sphere of the radius Returns Data Type Description boolean If is in the radius Dont need to be called every frame Example local near = IsNearCoords(vector3(0.0,0.0,0.0), 10.0)","title":"IsNearCoords"},{"location":"client/native/IsNearCoords/#isnearcoords","text":"Check if the player is near to a coords Argument Data Type Needed Default Description Coords vector3 - The coords Radius number - The distance to check Sphere boolean false Draw a sphere of the radius Returns Data Type Description boolean If is in the radius Dont need to be called every frame Example local near = IsNearCoords(vector3(0.0,0.0,0.0), 10.0)","title":"IsNearCoords"},{"location":"client/native/LoopThread/","text":"LoopThread It will create a thread in the loop, the code inserted into the function will be executed each time for the inserted time, it can be used for optimize code (See example) Argument Data Type Needed Default Description LoopId number - The loop id Id string/number - The id to identify the thread Time number - The time express in millisenconds ( ms ) of the execution Function function - The code executed in the loop thread Returns Data Type Description number The handle of the LoopThread Dont need to be called every frame Warning It can be used only into CreateLoop function Example How it can be used for optimization : local Luck = 1 CreateLoop(function(loopId) LoopThread(loopId, \"main\", 500, function() Luck = Luck + 1 end) print(Luck) end, 250) Expected Results The thread overlaps because the thread time is a multiple of the time loop (in that case 2 or 3) 1 1 2 2 2 3 3 4 4 5 5 5 ...etc How it works : CreateLoop(function(loopId) print(\"Start\") LoopThread(loopId, \"main\", 1000, function() print(\"Loop Thread\") end) print(\"End\") end, 500) Expected Results The thread overlaps because the thread time is a multiple of the time loop (in that case 2 or 3) Start End Start LoopThread End Start End Start LoopThread End Start End ...etc","title":"LoopThread"},{"location":"client/native/LoopThread/#loopthread","text":"It will create a thread in the loop, the code inserted into the function will be executed each time for the inserted time, it can be used for optimize code (See example) Argument Data Type Needed Default Description LoopId number - The loop id Id string/number - The id to identify the thread Time number - The time express in millisenconds ( ms ) of the execution Function function - The code executed in the loop thread Returns Data Type Description number The handle of the LoopThread Dont need to be called every frame Warning It can be used only into CreateLoop function Example How it can be used for optimization : local Luck = 1 CreateLoop(function(loopId) LoopThread(loopId, \"main\", 500, function() Luck = Luck + 1 end) print(Luck) end, 250) Expected Results The thread overlaps because the thread time is a multiple of the time loop (in that case 2 or 3) 1 1 2 2 2 3 3 4 4 5 5 5 ...etc How it works : CreateLoop(function(loopId) print(\"Start\") LoopThread(loopId, \"main\", 1000, function() print(\"Loop Thread\") end) print(\"End\") end, 500) Expected Results The thread overlaps because the thread time is a multiple of the time loop (in that case 2 or 3) Start End Start LoopThread End Start End Start LoopThread End Start End ...etc","title":"LoopThread"},{"location":"client/native/MakeEntityFaceEntity/","text":"MakeEntityFaceEntity Makes the two entities look in the eye Argument Data Type Needed Default Description Entity 1 entity - The first entity Entity 2 entity - The second entity What entity boolean false If true make the entity1 rotate to the entity2, otherwise the entity2 rotate to the entity1 Dont need to be called every frame Example MakeEntityFaceEntity(entity1, entity2)","title":"MakeEntityFaceEntity"},{"location":"client/native/MakeEntityFaceEntity/#makeentityfaceentity","text":"Makes the two entities look in the eye Argument Data Type Needed Default Description Entity 1 entity - The first entity Entity 2 entity - The second entity What entity boolean false If true make the entity1 rotate to the entity2, otherwise the entity2 rotate to the entity1 Dont need to be called every frame Example MakeEntityFaceEntity(entity1, entity2)","title":"MakeEntityFaceEntity"},{"location":"client/native/PauseLoop/","text":"PauseLoop Pause a loop, the loop stop to work but can be resumed later Argument Data Type Needed Default Description loopid number - The loop id Dont need to be called every frame Example PauseLoop(loopId)","title":"PauseLoop"},{"location":"client/native/PauseLoop/#pauseloop","text":"Pause a loop, the loop stop to work but can be resumed later Argument Data Type Needed Default Description loopid number - The loop id Dont need to be called every frame Example PauseLoop(loopId)","title":"PauseLoop"},{"location":"client/native/PlayerPedId/","text":"PlayerPedId Is equal to the standard one but get the data from a saved variable Returns Data Type Description ped The player ped handle Dont need to be called every frame Example PlayerPedId()","title":"PlayerPedId"},{"location":"client/native/PlayerPedId/#playerpedid","text":"Is equal to the standard one but get the data from a saved variable Returns Data Type Description ped The player ped handle Dont need to be called every frame Example PlayerPedId()","title":"PlayerPedId"},{"location":"client/native/RegisterNetEvent/","text":"RegisterNetEvent Register a net event that can be called by the client or the server, The event have the AddEventHandler already loaded Argument Data Type Needed Default Description EventName string - The name of the event Function function - The code executed when the event was triggered Dont need to be called every frame Example RegisterNetEvent(\"utility_libs:ILoveYou\", function() print(GetPlayerName()..\" love the utility_libs, how to blame it?\") end) Old method RegisterNetEvent(\"utility_libs:ILoveYou\") AddEventHandler(\"utility_libs:ILoveYou\", function() print(GetPlayerName(PlayerId())..\" love the utility_libs, how to blame it?\") end) Using old native although i dont recommend it, you can use the old native via old_RegisterNetEvent","title":"RegisterNetEvent"},{"location":"client/native/RegisterNetEvent/#registernetevent","text":"Register a net event that can be called by the client or the server, The event have the AddEventHandler already loaded Argument Data Type Needed Default Description EventName string - The name of the event Function function - The code executed when the event was triggered Dont need to be called every frame Example RegisterNetEvent(\"utility_libs:ILoveYou\", function() print(GetPlayerName()..\" love the utility_libs, how to blame it?\") end) Old method RegisterNetEvent(\"utility_libs:ILoveYou\") AddEventHandler(\"utility_libs:ILoveYou\", function() print(GetPlayerName(PlayerId())..\" love the utility_libs, how to blame it?\") end) Using old native although i dont recommend it, you can use the old native via old_RegisterNetEvent","title":"RegisterNetEvent"},{"location":"client/native/ResumeLoop/","text":"ResumeLoop Resume a stopped loop Argument Data Type Needed Default Description loopid number - The loop id Dont need to be called every frame Example ResumeLoop(loopId)","title":"ResumeLoop"},{"location":"client/native/ResumeLoop/#resumeloop","text":"Resume a stopped loop Argument Data Type Needed Default Description loopid number - The loop id Dont need to be called every frame Example ResumeLoop(loopId)","title":"ResumeLoop"},{"location":"client/native/ResumeLoopThread/","text":"ResumeLoopThread Resume a stopped thread identified by the id inserted Argument Data Type Needed Default Description LoopId number - The loop id Id string/number - The id of the loop thread Dont need to be called every frame Warning It can be used only into CreateLoop function where you created the thread Example ResumeLoopThread(\"main\")","title":"ResumeLoopThread"},{"location":"client/native/ResumeLoopThread/#resumeloopthread","text":"Resume a stopped thread identified by the id inserted Argument Data Type Needed Default Description LoopId number - The loop id Id string/number - The id of the loop thread Dont need to be called every frame Warning It can be used only into CreateLoop function where you created the thread Example ResumeLoopThread(\"main\")","title":"ResumeLoopThread"},{"location":"client/native/SetEntityModel/","text":"SetEntityModel Change the model of a entity over the network (also with local entities) Argument Data Type Needed Default Description entity entity - model string/number - The new model Dont need to be called every frame Example SetEntityModel(obj, \"prop_weed_01\")","title":"SetEntityModel"},{"location":"client/native/SetEntityModel/#setentitymodel","text":"Change the model of a entity over the network (also with local entities) Argument Data Type Needed Default Description entity entity - model string/number - The new model Dont need to be called every frame Example SetEntityModel(obj, \"prop_weed_01\")","title":"SetEntityModel"},{"location":"client/native/SetPedStatic/","text":"SetPedStatic Freeze the ped, make it ignore any event (ex. shooting) and puts it invincible Argument Data Type Needed Default Description ped entity - The ped that need to be modified active boolean - If active or no Dont need to be called every frame Example SetPedStatic(ped, true) Old method FreezeEntityPosition(ped, true) SetEntityInvincible(ped, true) SetBlockingOfNonTemporaryEvents(ped, true)","title":"SetPedStatic"},{"location":"client/native/SetPedStatic/#setpedstatic","text":"Freeze the ped, make it ignore any event (ex. shooting) and puts it invincible Argument Data Type Needed Default Description ped entity - The ped that need to be modified active boolean - If active or no Dont need to be called every frame Example SetPedStatic(ped, true) Old method FreezeEntityPosition(ped, true) SetEntityInvincible(ped, true) SetBlockingOfNonTemporaryEvents(ped, true)","title":"SetPedStatic"},{"location":"client/native/SetVehicleWheelsPowered/","text":"SetVehicleWheelsPowered Gives or takes power (energy) away from the wheels of the vehicle, simply if put on false the wheels of the vehicle will not turn anymore Argument Data Type Needed Default Description Vehicle vehicle - The vehicle Active boolean - If its true give power to the wheels, otherwise remove the power from the wheels Dont need to be called every frame Example SetVehicleWheelsPowered(veh, false)","title":"SetVehicleWheelsPowered"},{"location":"client/native/SetVehicleWheelsPowered/#setvehiclewheelspowered","text":"Gives or takes power (energy) away from the wheels of the vehicle, simply if put on false the wheels of the vehicle will not turn anymore Argument Data Type Needed Default Description Vehicle vehicle - The vehicle Active boolean - If its true give power to the wheels, otherwise remove the power from the wheels Dont need to be called every frame Example SetVehicleWheelsPowered(veh, false)","title":"SetVehicleWheelsPowered"},{"location":"client/native/ShowNotification/","text":"ShowNotification Draw a notification in the bottom-left Argument Data Type Needed Default Description Message string - The message to show Dont need to be called every frame Example ShowNotification(\"Example\") Tip Supported Color Syntax Syntax Color ~r~ Red ~b~ Blue ~g~ Green ~y~ Yellow ~p~ Purple ~o~ Orange ~c~ Grey ~m~ Dark Grey ~u~ Black ~n~ New Line ~s~ White (default) ~w~ White ~h~ Bold \u2211 Rockstar Icon \u00a6 Rockstar Verified Icon ShowNotification(\"\u2211\u00f7\u00a6~r~ r ~b~ b ~g~ g ~y~ y ~p~ p ~c~ gr ~m~ d gr ~u~ bl ~o~ or ~s~ re ~n~ nl ~h~ Bold\")","title":"ShowNotification"},{"location":"client/native/ShowNotification/#shownotification","text":"Draw a notification in the bottom-left Argument Data Type Needed Default Description Message string - The message to show Dont need to be called every frame Example ShowNotification(\"Example\") Tip","title":"ShowNotification"},{"location":"client/native/ShowNotification/#supported-color-syntax","text":"Syntax Color ~r~ Red ~b~ Blue ~g~ Green ~y~ Yellow ~p~ Purple ~o~ Orange ~c~ Grey ~m~ Dark Grey ~u~ Black ~n~ New Line ~s~ White (default) ~w~ White ~h~ Bold \u2211 Rockstar Icon \u00a6 Rockstar Verified Icon ShowNotification(\"\u2211\u00f7\u00a6~r~ r ~b~ b ~g~ g ~y~ y ~p~ p ~c~ gr ~m~ d gr ~u~ bl ~o~ or ~s~ re ~n~ nl ~h~ Bold\")","title":"Supported Color Syntax"},{"location":"client/native/StartParticleFxOnNetworkEntity/","text":"StartParticleFxOnNetworkEntity Create particles on a networked entity, obviously the particles will also be synchronized Argument Data Type Needed Default Description ptxAsset string - The ptfx dictionary (core, etc..) name string - The particle name obj number - The client entity (not netid) offset vector3 - rot vector3 - scale number - axis number - Dont need to be called every frame Example StartParticleFxOnNetworkEntity(\"scr_ornate_heist\", \"scr_heist_ornate_thermal_burn\", thermal, vector3(0.0, 1.0, -0.1), vector3(0.0, 0.0, 0.0), 1.0)","title":"StartParticleFxOnNetworkEntity"},{"location":"client/native/StartParticleFxOnNetworkEntity/#startparticlefxonnetworkentity","text":"Create particles on a networked entity, obviously the particles will also be synchronized Argument Data Type Needed Default Description ptxAsset string - The ptfx dictionary (core, etc..) name string - The particle name obj number - The client entity (not netid) offset vector3 - rot vector3 - scale number - axis number - Dont need to be called every frame Example StartParticleFxOnNetworkEntity(\"scr_ornate_heist\", \"scr_heist_ornate_thermal_burn\", thermal, vector3(0.0, 1.0, -0.1), vector3(0.0, 0.0, 0.0), 1.0)","title":"StartParticleFxOnNetworkEntity"},{"location":"client/native/StopLoop/","text":"StopLoop Stop a loop Argument Data Type Needed Default Description loopid number - The loop id Dont need to be called every frame Example StopLoop(loopId)","title":"StopLoop"},{"location":"client/native/StopLoop/#stoploop","text":"Stop a loop Argument Data Type Needed Default Description loopid number - The loop id Dont need to be called every frame Example StopLoop(loopId)","title":"StopLoop"},{"location":"client/native/StopLoopThread/","text":"StopLoopThread Stop the loop thread identified by the id inserted Argument Data Type Needed Default Description LoopId number - The loop id Id string/number - The id of the loop thread Dont need to be called every frame Warning It can be used only into CreateLoop function where you created the thread Example StopLoopThread(\"main\")","title":"StopLoopThread"},{"location":"client/native/StopLoopThread/#stoploopthread","text":"Stop the loop thread identified by the id inserted Argument Data Type Needed Default Description LoopId number - The loop id Id string/number - The id of the loop thread Dont need to be called every frame Warning It can be used only into CreateLoop function where you created the thread Example StopLoopThread(\"main\")","title":"StopLoopThread"},{"location":"client/native/Task/","text":"Task It will create a thread in the loop with a default time, can be stopped by the StopLoopThread using the id returned. Available Task Name Velocity TaskBack 5000 ms TaskSlow 1000 ms TaskFast 500 ms TaskExtraFast 5 ms Argument Data Type Needed Default Description LoopId number - The loop id Id string/number - The id to identify the thread Function function - The code executed in the loop thread Returns Data Type Description number The handle of the LoopThread Dont need to be called every frame Warning It can be used only into CreateLoop function Example CreateLoop(function(loopId) TaskBack(loopId, \"main\", function() print(\"Hello\") end) end, 250)","title":"Task"},{"location":"client/native/Task/#task","text":"It will create a thread in the loop with a default time, can be stopped by the StopLoopThread using the id returned. Available Task Name Velocity TaskBack 5000 ms TaskSlow 1000 ms TaskFast 500 ms TaskExtraFast 5 ms Argument Data Type Needed Default Description LoopId number - The loop id Id string/number - The id to identify the thread Function function - The code executed in the loop thread Returns Data Type Description number The handle of the LoopThread Dont need to be called every frame Warning It can be used only into CreateLoop function Example CreateLoop(function(loopId) TaskBack(loopId, \"main\", function() print(\"Hello\") end) end, 250)","title":"Task"},{"location":"client/native/TaskEasyPlayAnim/","text":"TaskEasyPlayAnim Simply asf the TaskPlayAnim, see argument below and compare it with the TaskPlayAnim Argument Data Type Needed Default Description Animation dictionary string - The animation dictionary, this is the list Animation name string - The animation name, this is the list Flag number 51 The animation flag: -1 loop, 51 moving, 0/50 stuck Duration number -1 (Infinite) The duration time in milliseconds ( ms ) Dont need to be called every frame Example TaskEasyPlayAnim(\"amb@world_human_golf_player@male@idle_a\", \"idle_a\")","title":"TaskEasyPlayAnim"},{"location":"client/native/TaskEasyPlayAnim/#taskeasyplayanim","text":"Simply asf the TaskPlayAnim, see argument below and compare it with the TaskPlayAnim Argument Data Type Needed Default Description Animation dictionary string - The animation dictionary, this is the list Animation name string - The animation name, this is the list Flag number 51 The animation flag: -1 loop, 51 moving, 0/50 stuck Duration number -1 (Infinite) The duration time in milliseconds ( ms ) Dont need to be called every frame Example TaskEasyPlayAnim(\"amb@world_human_golf_player@male@idle_a\", \"idle_a\")","title":"TaskEasyPlayAnim"},{"location":"client/native/TaskPlayAnim/","text":"TaskPlayAnim Is equal to the standard one but dont need to load or request the anim dict Argument Data Type Needed Default Description Ped ped - The ped Animation dictionary string - The animation dictionary, this is the list Animation name string - The animation name, this is the list Blend in speed number - The blend in speed Blend out speed number - The blend out speed Duration number - The duration time in milliseconds ( ms ) Flag number - The animation flag: -1 loop, 51 moving, 0/50 stuck Playback Rate number - No description, values are between 0.0 and 1.0 LockX boolean 0 No description, 0 in most cases LockY boolean 0 No description, 0 in most cases LockZ boolean 0 No description, 0 in most cases Dont need to be called every frame Example TaskPlayAnim(PlayerPedId(), \"amb@world_human_golf_player@male@idle_a\", \"idle_a\", 8.0, 1.0, -1, 49, 0) Old method if not HasAnimDictLoaded(\"amb@world_human_golf_player@male@idle_a\") then RequestAnimDict(\"amb@world_human_golf_player@male@idle_a\") while not HasAnimDictLoaded(\"amb@world_human_golf_player@male@idle_a\") do Citizen.Wait(1) end end TaskPlayAnim(PlayerPedId(), \"amb@world_human_golf_player@male@idle_a\", \"idle_a\", 8.0, 1.0, -1, 49, 0) RemoveAnimDict(\"amb@world_human_golf_player@male@idle_a\") Using old native although i dont recommend it, you can use the old native via old_TaskPlayAnim","title":"TaskPlayAnim"},{"location":"client/native/TaskPlayAnim/#taskplayanim","text":"Is equal to the standard one but dont need to load or request the anim dict Argument Data Type Needed Default Description Ped ped - The ped Animation dictionary string - The animation dictionary, this is the list Animation name string - The animation name, this is the list Blend in speed number - The blend in speed Blend out speed number - The blend out speed Duration number - The duration time in milliseconds ( ms ) Flag number - The animation flag: -1 loop, 51 moving, 0/50 stuck Playback Rate number - No description, values are between 0.0 and 1.0 LockX boolean 0 No description, 0 in most cases LockY boolean 0 No description, 0 in most cases LockZ boolean 0 No description, 0 in most cases Dont need to be called every frame Example TaskPlayAnim(PlayerPedId(), \"amb@world_human_golf_player@male@idle_a\", \"idle_a\", 8.0, 1.0, -1, 49, 0) Old method if not HasAnimDictLoaded(\"amb@world_human_golf_player@male@idle_a\") then RequestAnimDict(\"amb@world_human_golf_player@male@idle_a\") while not HasAnimDictLoaded(\"amb@world_human_golf_player@male@idle_a\") do Citizen.Wait(1) end end TaskPlayAnim(PlayerPedId(), \"amb@world_human_golf_player@male@idle_a\", \"idle_a\", 8.0, 1.0, -1, 49, 0) RemoveAnimDict(\"amb@world_human_golf_player@male@idle_a\") Using old native although i dont recommend it, you can use the old native via old_TaskPlayAnim","title":"TaskPlayAnim"},{"location":"client/native/TaskVehicleDriveToCoord/","text":"TaskVehicleDriveToCoord ask to a ped with a vehicle to drive at a specific coordinate Argument Data Type Needed Default Description Ped ped - The driver of the vehicle Vehicle vehicle - The vehicle Destination vector3 - The destination coords Speed number 10.0 The driving speed Stop range number 1.0 The stop range Dont need to be called every frame Example Using vector3 TaskVehicleDriveToCoord(ped, vehicle, vector3(0.0, 0.0, 0.0)) Old method TaskVehicleDriveToCoord(ped, vehicle, vector3(0.0, 0.0, 0.0), 10.0, 0, GetEntityModel(vehicle), driving_style, 1.0) Old problem THE DRIVING STYLE!! is something almost impossible to find, there is almost 0 documentation about the driving style, every time i tried to use this native i always had to go and grab the driving style from other scripts Using old native although i dont recommend it, you can use the old native via old_TaskVehicleDriveToCoord","title":"TaskVehicleDriveToCoord"},{"location":"client/native/TaskVehicleDriveToCoord/#taskvehicledrivetocoord","text":"ask to a ped with a vehicle to drive at a specific coordinate Argument Data Type Needed Default Description Ped ped - The driver of the vehicle Vehicle vehicle - The vehicle Destination vector3 - The destination coords Speed number 10.0 The driving speed Stop range number 1.0 The stop range Dont need to be called every frame Example Using vector3 TaskVehicleDriveToCoord(ped, vehicle, vector3(0.0, 0.0, 0.0)) Old method TaskVehicleDriveToCoord(ped, vehicle, vector3(0.0, 0.0, 0.0), 10.0, 0, GetEntityModel(vehicle), driving_style, 1.0) Old problem THE DRIVING STYLE!! is something almost impossible to find, there is almost 0 documentation about the driving style, every time i tried to use this native i always had to go and grab the driving style from other scripts Using old native although i dont recommend it, you can use the old native via old_TaskVehicleDriveToCoord","title":"TaskVehicleDriveToCoord"},{"location":"client/native/WaitNear/","text":"WaitNear Wait that the player is near to a specific position, is sync, so it will wait all the code until the player is not near the position. Argument Data Type Needed Default Description Coords vector3 - The coordinates to wait near Dont need to be called every frame Example WaitNear(vector3(0.0, 0.0, 0.0))","title":"WaitNear"},{"location":"client/native/WaitNear/#waitnear","text":"Wait that the player is near to a specific position, is sync, so it will wait all the code until the player is not near the position. Argument Data Type Needed Default Description Coords vector3 - The coordinates to wait near Dont need to be called every frame Example WaitNear(vector3(0.0, 0.0, 0.0))","title":"WaitNear"},{"location":"client/native/_break/","text":"_break Break the current loop Argument Data Type Needed Default Description LoopId number - The loop id Warning It can be used only into CreateLoop function Example _break(loopId)","title":"_break"},{"location":"client/native/_break/#_break","text":"Break the current loop Argument Data Type Needed Default Description LoopId number - The loop id Warning It can be used only into CreateLoop function Example _break(loopId)","title":"_break"},{"location":"client/native/slice_system/GetEntitySlice/","text":"GetEntitySlice Get the slice id from a entity Argument Data Type Needed Default Description entity entity - The entity that whe need to get the slice id Returns Data Type Description number The slice id Example local slice = GetEntitySlice(PlayerPedId()) print(\"Current slice: \"..slice)","title":"GetEntitySlice"},{"location":"client/native/slice_system/GetEntitySlice/#getentityslice","text":"Get the slice id from a entity Argument Data Type Needed Default Description entity entity - The entity that whe need to get the slice id Returns Data Type Description number The slice id Example local slice = GetEntitySlice(PlayerPedId()) print(\"Current slice: \"..slice)","title":"GetEntitySlice"},{"location":"client/native/slice_system/GetPlayerSlice/","text":"GetPlayerSlice Get the slice id from a player index (client id) Argument Data Type Needed Default Description player Player - The player that whe need to get the slice id Returns Data Type Description number The slice id Example local slice = GetPlayerSlice(PlayerId()) print(\"Current slice: \"..slice)","title":"GetPlayerSlice"},{"location":"client/native/slice_system/GetPlayerSlice/#getplayerslice","text":"Get the slice id from a player index (client id) Argument Data Type Needed Default Description player Player - The player that whe need to get the slice id Returns Data Type Description number The slice id Example local slice = GetPlayerSlice(PlayerId()) print(\"Current slice: \"..slice)","title":"GetPlayerSlice"},{"location":"client/native/slice_system/GetSelfSlice/","text":"GetSelfSlice Get the current slice id Returns Data Type Description number The slice id Example print(\"Current slice: \"..GetSelfSlice())","title":"GetSelfSlice"},{"location":"client/native/slice_system/GetSelfSlice/#getselfslice","text":"Get the current slice id Returns Data Type Description number The slice id Example print(\"Current slice: \"..GetSelfSlice())","title":"GetSelfSlice"},{"location":"client/native/slice_system/GetSliceCoordsFromCoords/","text":"GetSliceCoordsFromCoords Get the slice coords from a coords Argument Data Type Needed Default Description coords vector3 - The coords of where whe need to get the coords Returns Data Type Description vector2 The x and the y of the center of the slice Example local playerCoords = GetEntityCoords(PlayerPedId()) local slice = GetSliceCoordsFromCoords(playerCoords) print(\"The center of that slice is \"..slice)","title":"GetSliceCoordsFromCoords"},{"location":"client/native/slice_system/GetSliceCoordsFromCoords/#getslicecoordsfromcoords","text":"Get the slice coords from a coords Argument Data Type Needed Default Description coords vector3 - The coords of where whe need to get the coords Returns Data Type Description vector2 The x and the y of the center of the slice Example local playerCoords = GetEntityCoords(PlayerPedId()) local slice = GetSliceCoordsFromCoords(playerCoords) print(\"The center of that slice is \"..slice)","title":"GetSliceCoordsFromCoords"},{"location":"client/native/slice_system/GetSliceFromCoords/","text":"GetSliceFromCoords Get the slice id from some coords Argument Data Type Needed Default Description coords vector3 - The coords of where whe need to get the slice id Returns Data Type Description number The slice id Example local playerCoords = GetEntityCoords(PlayerPedId()) local slice = GetSliceFromCoords(playerCoords) print(\"Current slice: \"..slice)","title":"GetSliceFromCoords"},{"location":"client/native/slice_system/GetSliceFromCoords/#getslicefromcoords","text":"Get the slice id from some coords Argument Data Type Needed Default Description coords vector3 - The coords of where whe need to get the slice id Returns Data Type Description number The slice id Example local playerCoords = GetEntityCoords(PlayerPedId()) local slice = GetSliceFromCoords(playerCoords) print(\"Current slice: \"..slice)","title":"GetSliceFromCoords"},{"location":"client/native/slice_system/Integration/","text":"Integration in other script The slice system allows you to optimize the scripts that control the distances by dividing the map into slice that every slice have an id, to integrate this system you must obtain the coordinates of where you want to get the slice id and simply call the function GetSliceFromCoords, after that you must set the slice as used with SetSliceUsed, to do the check create a loop that every 5 seconds or so assigns to a variable the current slice and check if the player is in a used slice, the used slice are not shared between scripts, as soon as the player is in the slice just check the coordinates for each coordinate in that slice Example local something = {} function CreateSomething ( coords ) local slice = GetSliceFromCoords ( coords ) table.insert ( something , { slice = slice }) SetSliceUsed ( slice , true ) end CreateLoop ( function () slice = GetSelfSlice () end , 5000 ) CreateLoop ( function () if SliceUsed ( slice ) then for i = 1 , # something do if something [ i ]. slice == slice then -- Is near a something end end end end )","title":"Integration in other scripts"},{"location":"client/native/slice_system/Integration/#integration-in-other-script","text":"The slice system allows you to optimize the scripts that control the distances by dividing the map into slice that every slice have an id, to integrate this system you must obtain the coordinates of where you want to get the slice id and simply call the function GetSliceFromCoords, after that you must set the slice as used with SetSliceUsed, to do the check create a loop that every 5 seconds or so assigns to a variable the current slice and check if the player is in a used slice, the used slice are not shared between scripts, as soon as the player is in the slice just check the coordinates for each coordinate in that slice Example local something = {} function CreateSomething ( coords ) local slice = GetSliceFromCoords ( coords ) table.insert ( something , { slice = slice }) SetSliceUsed ( slice , true ) end CreateLoop ( function () slice = GetSelfSlice () end , 5000 ) CreateLoop ( function () if SliceUsed ( slice ) then for i = 1 , # something do if something [ i ]. slice == slice then -- Is near a something end end end end )","title":"Integration in other script"},{"location":"client/native/slice_system/IsOnScreen/","text":"IsOnScreen Check if some coords is in the screen Argument Data Type Needed Default Description coords vector3 - The coords that whe need to check Returns Data Type Description boolean If is on the screen Example print(\"The coords vector3(0.0, 0.0, 0.0) is on screen? \"..IsOnScreen(vector3(0.0, 0.0, 0.0)))","title":"IsOnScreen"},{"location":"client/native/slice_system/IsOnScreen/#isonscreen","text":"Check if some coords is in the screen Argument Data Type Needed Default Description coords vector3 - The coords that whe need to check Returns Data Type Description boolean If is on the screen Example print(\"The coords vector3(0.0, 0.0, 0.0) is on screen? \"..IsOnScreen(vector3(0.0, 0.0, 0.0)))","title":"IsOnScreen"},{"location":"client/native/slice_system/SetSliceUsed/","text":"SetSliceUsed Set a slice id as used Argument Data Type Needed Default Description slice id number - The slice id used boolean - If is used or no Example local currentSlice = GetSelfSlice() SetSliceUsed(currentSlice, true) print(\"The current slice is used? \"..SliceUsed(currentSlice)) -- The current slice is used? true","title":"SetSliceUsed"},{"location":"client/native/slice_system/SetSliceUsed/#setsliceused","text":"Set a slice id as used Argument Data Type Needed Default Description slice id number - The slice id used boolean - If is used or no Example local currentSlice = GetSelfSlice() SetSliceUsed(currentSlice, true) print(\"The current slice is used? \"..SliceUsed(currentSlice)) -- The current slice is used? true","title":"SetSliceUsed"},{"location":"client/native/slice_system/SliceUsed/","text":"SliceUsed Check if a slice id is used Argument Data Type Needed Default Description slice id number - The slice id Returns Data Type Description boolean If is used or no Example print(\"There is something in my current slice? \"..SliceUsed(GetCurrentSlice()))","title":"SliceUsed"},{"location":"client/native/slice_system/SliceUsed/#sliceused","text":"Check if a slice id is used Argument Data Type Needed Default Description slice id number - The slice id Returns Data Type Description boolean If is used or no Example print(\"There is something in my current slice? \"..SliceUsed(GetCurrentSlice()))","title":"SliceUsed"},{"location":"server/esx_integration/GetDataForJob/","text":"GetDataForJob Return the number of player that have that job and the workers list of that job Argument Data Type Needed Default Description Job string - The job name Returns Data Type Description number The number of player with that job table A table with all the id of the players with that job Dont need to be called every frame Example local count, workers = GetDataForJob(\"police\") -- count = 3 -- workers = {3, 5, 19}","title":"GetDataForJob"},{"location":"server/esx_integration/GetDataForJob/#getdataforjob","text":"Return the number of player that have that job and the workers list of that job Argument Data Type Needed Default Description Job string - The job name Returns Data Type Description number The number of player with that job table A table with all the id of the players with that job Dont need to be called every frame Example local count, workers = GetDataForJob(\"police\") -- count = 3 -- workers = {3, 5, 19}","title":"GetDataForJob"},{"location":"server/esx_integration/StartESX/","text":"StartESX Start ESX with a line, dont need any return, all will be done automatically. It also automatically loads player data (like the job, that auto update) the ESX variables are made available Argument Data Type Needed Default Description esxEventName string esx:getSharedObject The esx event, if you have the replaced trigger Second Job string - If you have set up the second job in the utility configuration, you need to enter the name here for it to auto-update Dont need to be called every frame Example StartESX() Old method ESX = nil TriggerEvent('esx:getSharedObject', function(obj) ESX = obj end)","title":"StartESX"},{"location":"server/esx_integration/StartESX/#startesx","text":"Start ESX with a line, dont need any return, all will be done automatically. It also automatically loads player data (like the job, that auto update) the ESX variables are made available Argument Data Type Needed Default Description esxEventName string esx:getSharedObject The esx event, if you have the replaced trigger Second Job string - If you have set up the second job in the utility configuration, you need to enter the name here for it to auto-update Dont need to be called every frame Example StartESX() Old method ESX = nil TriggerEvent('esx:getSharedObject', function(obj) ESX = obj end)","title":"StartESX"},{"location":"server/esx_integration/society/SocietyAddItem/","text":"SocietyAddItem Add an item to the society inventory Argument Data Type Needed Default Description Society string - The society name Item string - The item name Amount number - The amount Dont need to be called every frame Example SocietyAddItem(\"police\", \"bread\", 1)","title":"SocietyAddItem"},{"location":"server/esx_integration/society/SocietyAddItem/#societyadditem","text":"Add an item to the society inventory Argument Data Type Needed Default Description Society string - The society name Item string - The item name Amount number - The amount Dont need to be called every frame Example SocietyAddItem(\"police\", \"bread\", 1)","title":"SocietyAddItem"},{"location":"server/esx_integration/society/SocietyAddMoney/","text":"SocietyAddMoney Add money to the society account Argument Data Type Needed Default Description Society string - The society name Amount number - The amount of money Dont need to be called every frame Example SocietyAddMoney(\"police\", 500)","title":"SocietyAddMoney"},{"location":"server/esx_integration/society/SocietyAddMoney/#societyaddmoney","text":"Add money to the society account Argument Data Type Needed Default Description Society string - The society name Amount number - The amount of money Dont need to be called every frame Example SocietyAddMoney(\"police\", 500)","title":"SocietyAddMoney"},{"location":"server/esx_integration/society/SocietyGetItem/","text":"SocietyGetItem Get data of an item from the society inventory Argument Data Type Needed Default Description Society string - The society name Item string - The item name Dont need to be called every frame Returns Child Data Type Description name string Item name count number Item count label string Item label weight number Item weight usable boolean Whether or not the item is usable rare boolean Whether or not the item is rare canRemove boolean Whether or not the item can be thrown Example local itemData = SocietyGetItem(\"police\", \"bread\") How to use child local itemData = SocietyGetItem(\"police\", \"bread\") -- itemData.name = \"bread\" -- itemData.count = 1 -- ...","title":"SocietyGetItem"},{"location":"server/esx_integration/society/SocietyGetItem/#societygetitem","text":"Get data of an item from the society inventory Argument Data Type Needed Default Description Society string - The society name Item string - The item name Dont need to be called every frame Returns Child Data Type Description name string Item name count number Item count label string Item label weight number Item weight usable boolean Whether or not the item is usable rare boolean Whether or not the item is rare canRemove boolean Whether or not the item can be thrown Example local itemData = SocietyGetItem(\"police\", \"bread\") How to use child local itemData = SocietyGetItem(\"police\", \"bread\") -- itemData.name = \"bread\" -- itemData.count = 1 -- ...","title":"SocietyGetItem"},{"location":"server/esx_integration/society/SocietyHaveItem/","text":"SocietyHaveItem Check if the society inventory have that item Argument Data Type Needed Default Description Society string - The society name Item string - The item name Dont need to be called every frame Returns Data Type Description boolean If have or no the item Example local have_item = SocietyHaveItem(\"police\", \"bread\")","title":"SocietyHaveItem"},{"location":"server/esx_integration/society/SocietyHaveItem/#societyhaveitem","text":"Check if the society inventory have that item Argument Data Type Needed Default Description Society string - The society name Item string - The item name Dont need to be called every frame Returns Data Type Description boolean If have or no the item Example local have_item = SocietyHaveItem(\"police\", \"bread\")","title":"SocietyHaveItem"},{"location":"server/esx_integration/society/SocietyHaveItemQuantity/","text":"SocietyHaveItemQuantity Check if the society inventory have that item quantity Argument Data Type Needed Default Description Society string - The society name Item string - The item name Quantity number - The item quantity Dont need to be called every frame Returns Data Type Description boolean If have or no the item quantity Example local have_item = SocietyHaveItemQuantity(\"police\", \"bread\", 3)","title":"SocietyHaveItemQuantity"},{"location":"server/esx_integration/society/SocietyHaveItemQuantity/#societyhaveitemquantity","text":"Check if the society inventory have that item quantity Argument Data Type Needed Default Description Society string - The society name Item string - The item name Quantity number - The item quantity Dont need to be called every frame Returns Data Type Description boolean If have or no the item quantity Example local have_item = SocietyHaveItemQuantity(\"police\", \"bread\", 3)","title":"SocietyHaveItemQuantity"},{"location":"server/esx_integration/society/SocietyHaveMoney/","text":"SocietyHaveMoney Check if the society account have that money Argument Data Type Needed Default Description Society string - The society name Amount number - The amount of money to check Dont need to be called every frame Returns Data Type Description boolean If have or no the money Example local have_money = SocietyHaveMoney(\"police\", 500)","title":"SocietyHaveMoney"},{"location":"server/esx_integration/society/SocietyHaveMoney/#societyhavemoney","text":"Check if the society account have that money Argument Data Type Needed Default Description Society string - The society name Amount number - The amount of money to check Dont need to be called every frame Returns Data Type Description boolean If have or no the money Example local have_money = SocietyHaveMoney(\"police\", 500)","title":"SocietyHaveMoney"},{"location":"server/esx_integration/society/SocietyRemoveItem/","text":"SocietyRemoveItem Remove an item from the society inventory Argument Data Type Needed Default Description Society string - The society name Item string - The item name Amount number - The amount Dont need to be called every frame Example SocietyRemoveItem(\"police\", \"bread\", 1)","title":"SocietyRemoveItem"},{"location":"server/esx_integration/society/SocietyRemoveItem/#societyremoveitem","text":"Remove an item from the society inventory Argument Data Type Needed Default Description Society string - The society name Item string - The item name Amount number - The amount Dont need to be called every frame Example SocietyRemoveItem(\"police\", \"bread\", 1)","title":"SocietyRemoveItem"},{"location":"server/esx_integration/society/SocietyRemoveMoney/","text":"SocietyRemoveMoney Remove money from the society account Argument Data Type Needed Default Description Society string - The society name Amount number - The amount of money Dont need to be called every frame Example SocietyRemoveMoney(\"police\", 500)","title":"SocietyRemoveMoney"},{"location":"server/esx_integration/society/SocietyRemoveMoney/#societyremovemoney","text":"Remove money from the society account Argument Data Type Needed Default Description Society string - The society name Amount number - The amount of money Dont need to be called every frame Example SocietyRemoveMoney(\"police\", 500)","title":"SocietyRemoveMoney"},{"location":"server/esx_integration/xplayer/AddItem/","text":"AddItem Add an item to the player Argument Data Type Needed Default Description id number - Item string - The item name Amount number - The amount Dont need to be called every frame Example AddItem(source, \"bread\", 1)","title":"AddItem"},{"location":"server/esx_integration/xplayer/AddItem/#additem","text":"Add an item to the player Argument Data Type Needed Default Description id number - Item string - The item name Amount number - The amount Dont need to be called every frame Example AddItem(source, \"bread\", 1)","title":"AddItem"},{"location":"server/esx_integration/xplayer/AddMoney/","text":"AddMoney Add money to the player Argument Data Type Needed Default Description id number - Type string - The money type: cash, bank, black_money Amount number - The amount of money Dont need to be called every frame Example AddMoney(source, \"cash\", 500) AddMoney(source, \"bank\", 500) AddMoney(source, \"black_money\", 500)","title":"AddMoney"},{"location":"server/esx_integration/xplayer/AddMoney/#addmoney","text":"Add money to the player Argument Data Type Needed Default Description id number - Type string - The money type: cash, bank, black_money Amount number - The amount of money Dont need to be called every frame Example AddMoney(source, \"cash\", 500) AddMoney(source, \"bank\", 500) AddMoney(source, \"black_money\", 500)","title":"AddMoney"},{"location":"server/esx_integration/xplayer/GetItem/","text":"GetItem Get data of an item by the player Argument Data Type Needed Default Description id number - Item string - The item name Dont need to be called every frame Returns Child Data Type Description name string Item name count number Item count label string Item label weight number Item weight usable boolean Whether or not the item is usable rare boolean Whether or not the item is rare canRemove boolean Whether or not the item can be thrown Example local itemData = GetItem(source, \"bread\") How to use child local itemData = GetItem(source, \"bread\") -- itemData.name = \"bread\" -- itemData.count = 1 -- ...","title":"GetItem"},{"location":"server/esx_integration/xplayer/GetItem/#getitem","text":"Get data of an item by the player Argument Data Type Needed Default Description id number - Item string - The item name Dont need to be called every frame Returns Child Data Type Description name string Item name count number Item count label string Item label weight number Item weight usable boolean Whether or not the item is usable rare boolean Whether or not the item is rare canRemove boolean Whether or not the item can be thrown Example local itemData = GetItem(source, \"bread\") How to use child local itemData = GetItem(source, \"bread\") -- itemData.name = \"bread\" -- itemData.count = 1 -- ...","title":"GetItem"},{"location":"server/esx_integration/xplayer/HaveItem/","text":"HaveItem Check if the player have that item Argument Data Type Needed Default Description id number - Item string - The item name Dont need to be called every frame Returns Data Type Description boolean If have or no the item Example local have_item = HaveItem(source, \"bread\")","title":"HaveItem"},{"location":"server/esx_integration/xplayer/HaveItem/#haveitem","text":"Check if the player have that item Argument Data Type Needed Default Description id number - Item string - The item name Dont need to be called every frame Returns Data Type Description boolean If have or no the item Example local have_item = HaveItem(source, \"bread\")","title":"HaveItem"},{"location":"server/esx_integration/xplayer/HaveItemQuantity/","text":"HaveItemQuantity Check if the player have that item quantity Argument Data Type Needed Default Description id number - Item string - The item name Quantity number - The item quantity Dont need to be called every frame Returns Data Type Description boolean If have or no the item quantity Example local have_item = HaveItemQuantity(source, \"bread\", 3)","title":"HaveItemQuantity"},{"location":"server/esx_integration/xplayer/HaveItemQuantity/#haveitemquantity","text":"Check if the player have that item quantity Argument Data Type Needed Default Description id number - Item string - The item name Quantity number - The item quantity Dont need to be called every frame Returns Data Type Description boolean If have or no the item quantity Example local have_item = HaveItemQuantity(source, \"bread\", 3)","title":"HaveItemQuantity"},{"location":"server/esx_integration/xplayer/HaveMoney/","text":"HaveMoney Check if the player have that money Argument Data Type Needed Default Description id number - Type string - The money type: cash, bank, black_money Amount number - The amount of money to check Dont need to be called every frame Returns Data Type Description boolean If have or no the money Example local have_money = HaveMoney(source, \"cash\", 500)","title":"HaveMoney"},{"location":"server/esx_integration/xplayer/HaveMoney/#havemoney","text":"Check if the player have that money Argument Data Type Needed Default Description id number - Type string - The money type: cash, bank, black_money Amount number - The amount of money to check Dont need to be called every frame Returns Data Type Description boolean If have or no the money Example local have_money = HaveMoney(source, \"cash\", 500)","title":"HaveMoney"},{"location":"server/esx_integration/xplayer/RemoveItem/","text":"RemoveItem Remove an item from the player Argument Data Type Needed Default Description id number - Item string - The item name Amount number - The amount Dont need to be called every frame Example RemoveItem(source, \"bread\", 1)","title":"RemoveItem"},{"location":"server/esx_integration/xplayer/RemoveItem/#removeitem","text":"Remove an item from the player Argument Data Type Needed Default Description id number - Item string - The item name Amount number - The amount Dont need to be called every frame Example RemoveItem(source, \"bread\", 1)","title":"RemoveItem"},{"location":"server/esx_integration/xplayer/RemoveMoney/","text":"RemoveMoney Remove money from the player Argument Data Type Needed Default Description id number - Type string - The money type: cash, bank, black_money Amount number - The amount of money Dont need to be called every frame Example RemoveMoney(source, \"cash\", 500) RemoveMoney(source, \"bank\", 500) RemoveMoney(source, \"black_money\", 500)","title":"RemoveMoney"},{"location":"server/esx_integration/xplayer/RemoveMoney/#removemoney","text":"Remove money from the player Argument Data Type Needed Default Description id number - Type string - The money type: cash, bank, black_money Amount number - The amount of money Dont need to be called every frame Example RemoveMoney(source, \"cash\", 500) RemoveMoney(source, \"bank\", 500) RemoveMoney(source, \"black_money\", 500)","title":"RemoveMoney"},{"location":"server/misc/printd/","text":"printd Dump a table, simply convert a table to a string Argument Data Type Needed Default Description Table table - The table to dump Advanced boolean false Is true return an advanced dump of the table Returns Data Type Description string The dumped table Dont need to be called every frame Example local _table = { message = \"Hello\" } printd(_table) Expected Results { \"message\": \"Hello\" }","title":"printd"},{"location":"server/misc/printd/#printd","text":"Dump a table, simply convert a table to a string Argument Data Type Needed Default Description Table table - The table to dump Advanced boolean false Is true return an advanced dump of the table Returns Data Type Description string The dumped table Dont need to be called every frame Example local _table = { message = \"Hello\" } printd(_table) Expected Results { \"message\": \"Hello\" }","title":"printd"},{"location":"server/misc/string.multigsub/","text":"string.multigsub Replace multiple part of a string Argument Data Type Needed Default Description String string - The original texture Pattern table - The pattern to find and replace Replacement table - The replacemente table Dont need to be called every frame Example local string = \"i love me\" local new_string = string.multigsub(string, {\"love\", \"me\"}, {\"hate\", \"you\"}) print(new_string) Expected result i hate you","title":"string.multigsub"},{"location":"server/misc/string.multigsub/#stringmultigsub","text":"Replace multiple part of a string Argument Data Type Needed Default Description String string - The original texture Pattern table - The pattern to find and replace Replacement table - The replacemente table Dont need to be called every frame Example local string = \"i love me\" local new_string = string.multigsub(string, {\"love\", \"me\"}, {\"hate\", \"you\"}) print(new_string) Expected result i hate you","title":"string.multigsub"},{"location":"server/misc/table.clone/","text":"table.clone Clone a table Argument Data Type Needed Default Description Table table - The original table Returns Data Type Description table The cloned table Dont need to be called every frame Example local tabletoclone = { msg = \"Hello\" } local cloned_table = table.clone(tabletoclone) print(cloned_table.msg) Expected result Hello","title":"table.clone"},{"location":"server/misc/table.clone/#tableclone","text":"Clone a table Argument Data Type Needed Default Description Table table - The original table Returns Data Type Description table The cloned table Dont need to be called every frame Example local tabletoclone = { msg = \"Hello\" } local cloned_table = table.clone(tabletoclone) print(cloned_table.msg) Expected result Hello","title":"table.clone"},{"location":"server/misc/table.empty/","text":"table.empty Check if a table is empty Argument Data Type Needed Default Description Table table - The table Returns Data Type Description boolean True if is empty, false if have some data Dont need to be called every frame Example local emptytable = {} print(table.empty(emptytable)) Expected result true","title":"table.empty"},{"location":"server/misc/table.empty/#tableempty","text":"Check if a table is empty Argument Data Type Needed Default Description Table table - The table Returns Data Type Description boolean True if is empty, false if have some data Dont need to be called every frame Example local emptytable = {} print(table.empty(emptytable)) Expected result true","title":"table.empty"},{"location":"server/misc/table.fexist/","text":"table.fexist Check if the field exist in the table Argument Data Type Needed Default Description Table table - The table Field string - The field to check Returns Data Type Description boolean True if field exist, false if field dont exist Dont need to be called every frame Example local tabletocheck = { msg = \"Message\", another = 2 } print(table.fexist(tabletocheck, \"msg\")) print(table.fexist(tabletocheck, \"utility\")) Expected result true false","title":"table.fexist"},{"location":"server/misc/table.fexist/#tablefexist","text":"Check if the field exist in the table Argument Data Type Needed Default Description Table table - The table Field string - The field to check Returns Data Type Description boolean True if field exist, false if field dont exist Dont need to be called every frame Example local tabletocheck = { msg = \"Message\", another = 2 } print(table.fexist(tabletocheck, \"msg\")) print(table.fexist(tabletocheck, \"utility\")) Expected result true false","title":"table.fexist"},{"location":"server/misc/table.remove/","text":"table.remove Equal to the native table.remove of lua but accept string as position Argument Data Type Needed Default Description Table table - The table Position number/string - The position of the data to remove Dont need to be called every frame Example local tabletocheck = { [\"Hello\"] = 5, [\"Utility\"] = 1, } table.remove(tabletocheck, \"Hello\") print(json.encode(tabletocheck)) Expected result {\"Utility\":1}","title":"table.remove"},{"location":"server/misc/table.remove/#tableremove","text":"Equal to the native table.remove of lua but accept string as position Argument Data Type Needed Default Description Table table - The table Position number/string - The position of the data to remove Dont need to be called every frame Example local tabletocheck = { [\"Hello\"] = 5, [\"Utility\"] = 1, } table.remove(tabletocheck, \"Hello\") print(json.encode(tabletocheck)) Expected result {\"Utility\":1}","title":"table.remove"},{"location":"server/mysql/ExecuteSql/","text":"ExecuteSql Execute any type of sql query, automatically detect the query Argument Data Type Needed Default Description Query string - The query Params table - The query params Dont need to be called every frame Example ExecuteSql(\"INSERT INTO utility_db_integration SET data = @data\", { [\"@data\"] = \"Hello\" }) local data = ExecuteSql(\"SELECT * FROM utility_db_integration\")","title":"ExecuteSql"},{"location":"server/mysql/ExecuteSql/#executesql","text":"Execute any type of sql query, automatically detect the query Argument Data Type Needed Default Description Query string - The query Params table - The query params Dont need to be called every frame Example ExecuteSql(\"INSERT INTO utility_db_integration SET data = @data\", { [\"@data\"] = \"Hello\" }) local data = ExecuteSql(\"SELECT * FROM utility_db_integration\")","title":"ExecuteSql"},{"location":"server/mysql/StartMySQL/","text":"StartMySQL Start MySQL with a line, dont need any return, all will be done automatically. Dont need to be called every frame Example StartMySQL()","title":"StartMySQL"},{"location":"server/mysql/StartMySQL/#startmysql","text":"Start MySQL with a line, dont need any return, all will be done automatically. Dont need to be called every frame Example StartMySQL()","title":"StartMySQL"},{"location":"server/native/CreateLoop/","text":"CreateLoop Create a while true do loop Argument Data Type Needed Default Description Function function - The code executed in the loop Time number 5 The time express in millisenconds ( ms ) of the execution Dont need to be called every frame Example Without time : CreateLoop(function() print(\"Test\") end) With time : CreateLoop(function() print(\"Test\") end, 500) Old method Citizen.CreateThread(function() while true do print(\"Test\") Citizen.Wait(5) end end) Old problem In the old method if you forgot to insert Citizen.Wait(ms) the ALL server will crash I created it because i was sick of the thousands of times my server crashed, Thanks FiveM \ud83d\ude09","title":"CreateLoop"},{"location":"server/native/CreateLoop/#createloop","text":"Create a while true do loop Argument Data Type Needed Default Description Function function - The code executed in the loop Time number 5 The time express in millisenconds ( ms ) of the execution Dont need to be called every frame Example Without time : CreateLoop(function() print(\"Test\") end) With time : CreateLoop(function() print(\"Test\") end, 500) Old method Citizen.CreateThread(function() while true do print(\"Test\") Citizen.Wait(5) end end) Old problem In the old method if you forgot to insert Citizen.Wait(ms) the ALL server will crash I created it because i was sick of the thousands of times my server crashed, Thanks FiveM \ud83d\ude09","title":"CreateLoop"},{"location":"server/native/LoopThread/","text":"LoopThread It will create a thread in the loop, the code inserted into the function will be executed each time for the inserted time, it can be used for optimize code (See example) Argument Data Type Needed Default Description Id string/number - The id to identify the thread Time number - The time express in millisenconds ( ms ) of the execution Function function - The code executed in the loop thread Returns Data Type Description number The handle of the LoopThread Dont need to be called every frame Warning It can be used only into CreateLoop function Example How it can be used for optimization : local Luck = 1 CreateLoop(function() LoopThread(500, function() Luck = Luck + 1 end) print(Luck) end, 250) Expected Results The thread overlaps because the thread time is a multiple of the time loop (in that case 2 or 3) 1 1 2 2 2 3 3 4 4 5 5 5 ...etc How it works : CreateLoop(function() print(\"Start\") LoopThread(1000, function() print(\"Loop Thread\") end) print(\"End\") end, 500) Expected Results The thread overlaps because the thread time is a multiple of the time loop (in that case 2 or 3) Start End LoopThread Start End Start End Start End LoopThread Start End ...etc","title":"LoopThread"},{"location":"server/native/LoopThread/#loopthread","text":"It will create a thread in the loop, the code inserted into the function will be executed each time for the inserted time, it can be used for optimize code (See example) Argument Data Type Needed Default Description Id string/number - The id to identify the thread Time number - The time express in millisenconds ( ms ) of the execution Function function - The code executed in the loop thread Returns Data Type Description number The handle of the LoopThread Dont need to be called every frame Warning It can be used only into CreateLoop function Example How it can be used for optimization : local Luck = 1 CreateLoop(function() LoopThread(500, function() Luck = Luck + 1 end) print(Luck) end, 250) Expected Results The thread overlaps because the thread time is a multiple of the time loop (in that case 2 or 3) 1 1 2 2 2 3 3 4 4 5 5 5 ...etc How it works : CreateLoop(function() print(\"Start\") LoopThread(1000, function() print(\"Loop Thread\") end) print(\"End\") end, 500) Expected Results The thread overlaps because the thread time is a multiple of the time loop (in that case 2 or 3) Start End LoopThread Start End Start End Start End LoopThread Start End ...etc","title":"LoopThread"},{"location":"server/native/RegisterServerEvent/","text":"RegisterServerEvent Record a server-side event that is triggerable by the server and also by the client. The event have the AddEventHandler already loaded Argument Data Type Needed Default Description EventName string - The name of the event Function function - The code executed when the event was triggered Auto-Prepare boolean true If setted to false don't auto-prepare the event for works with ESX (don't load the esx basic variable) Other difference It also auto-prepare the event to work with esx, so it auto load the xPlayer and _source variable Don't need to be called every frame Example RegisterServerEvent(\"utility_libs:ILoveYou\", function() print(GetPlayerName()..\" love the utility_libs, how to blame it?\") end) Old method RegisterServerEvent(\"utility_libs:ILoveYou\") AddEventHandler(\"utility_libs:ILoveYou\", function() local _source = source local xPlayer = ESX.GetPlayerFromId(_source) print(GetPlayerName(PlayerId())..\" love the utility_libs, how to blame it?\") end) Using old native although i don't recommend it, you can use the old native via old_RegisterServerEvent","title":"RegisterServerEvent"},{"location":"server/native/RegisterServerEvent/#registerserverevent","text":"Record a server-side event that is triggerable by the server and also by the client. The event have the AddEventHandler already loaded Argument Data Type Needed Default Description EventName string - The name of the event Function function - The code executed when the event was triggered Auto-Prepare boolean true If setted to false don't auto-prepare the event for works with ESX (don't load the esx basic variable) Other difference It also auto-prepare the event to work with esx, so it auto load the xPlayer and _source variable Don't need to be called every frame Example RegisterServerEvent(\"utility_libs:ILoveYou\", function() print(GetPlayerName()..\" love the utility_libs, how to blame it?\") end) Old method RegisterServerEvent(\"utility_libs:ILoveYou\") AddEventHandler(\"utility_libs:ILoveYou\", function() local _source = source local xPlayer = ESX.GetPlayerFromId(_source) print(GetPlayerName(PlayerId())..\" love the utility_libs, how to blame it?\") end) Using old native although i don't recommend it, you can use the old native via old_RegisterServerEvent","title":"RegisterServerEvent"},{"location":"server/native/ResumeLoopThread/","text":"ResumeLoopThread Resume a stopped thread identified by the id inserted Argument Data Type Needed Default Description Handle string/number - The handle of the loop thread Dont need to be called every frame Warning It can be used only into CreateLoop function where you created the thread Example ResumeLoopThread(myloopthread)","title":"ResumeLoopThread"},{"location":"server/native/ResumeLoopThread/#resumeloopthread","text":"Resume a stopped thread identified by the id inserted Argument Data Type Needed Default Description Handle string/number - The handle of the loop thread Dont need to be called every frame Warning It can be used only into CreateLoop function where you created the thread Example ResumeLoopThread(myloopthread)","title":"ResumeLoopThread"},{"location":"server/native/ShowNotification/","text":"ShowNotification Draw a notification in the bottom-left Argument Data Type Needed Default Description Source number - The id to which the notification must be sent Message string - The message to show Dont need to be called every frame Example ShowNotification(source, \"Example\") Tip Supported Color Syntax Syntax Color ~r~ Red ~b~ Blue ~g~ Green ~y~ Yellow ~p~ Purple ~o~ Orange ~c~ Grey ~m~ Dark Grey ~u~ Black ~n~ New Line ~s~ White (default) ~w~ White ~h~ Bold \u2211 Rockstar Icon \u00a6 Rockstar Verified Icon ShowNotification(\"\u2211\u00f7\u00a6~r~ r ~b~ b ~g~ g ~y~ y ~p~ p ~c~ gr ~m~ d gr ~u~ bl ~o~ or ~s~ re ~n~ nl ~h~ Bold\")","title":"ShowNotification"},{"location":"server/native/ShowNotification/#shownotification","text":"Draw a notification in the bottom-left Argument Data Type Needed Default Description Source number - The id to which the notification must be sent Message string - The message to show Dont need to be called every frame Example ShowNotification(source, \"Example\") Tip","title":"ShowNotification"},{"location":"server/native/ShowNotification/#supported-color-syntax","text":"Syntax Color ~r~ Red ~b~ Blue ~g~ Green ~y~ Yellow ~p~ Purple ~o~ Orange ~c~ Grey ~m~ Dark Grey ~u~ Black ~n~ New Line ~s~ White (default) ~w~ White ~h~ Bold \u2211 Rockstar Icon \u00a6 Rockstar Verified Icon ShowNotification(\"\u2211\u00f7\u00a6~r~ r ~b~ b ~g~ g ~y~ y ~p~ p ~c~ gr ~m~ d gr ~u~ bl ~o~ or ~s~ re ~n~ nl ~h~ Bold\")","title":"Supported Color Syntax"},{"location":"server/native/StopLoopThread/","text":"StopLoopThread Stop the loop thread identified by the id inserted Argument Data Type Needed Default Description Handle string/number - The handle of the loop thread Dont need to be called every frame Warning It can be used only into CreateLoop function where you created the thread Example StopLoopThread(myloopthread)","title":"StopLoopThread"},{"location":"server/native/StopLoopThread/#stoploopthread","text":"Stop the loop thread identified by the id inserted Argument Data Type Needed Default Description Handle string/number - The handle of the loop thread Dont need to be called every frame Warning It can be used only into CreateLoop function where you created the thread Example StopLoopThread(myloopthread)","title":"StopLoopThread"},{"location":"server/native/_break/","text":"_break Break the current loop Warning It can be used only into CreateLoop function Example _break()","title":"_break"},{"location":"server/native/_break/#_break","text":"Break the current loop Warning It can be used only into CreateLoop function Example _break()","title":"_break"}]}